[{"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\index.js":"1","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\App.js":"2","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\reportWebVitals.js":"3","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer.jsx":"4","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\PaymentSuccess.jsx":"5","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\LittleCart.jsx":"6","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\NavBarCheckout.jsx":"7","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\NavbarCheckOutCart.jsx":"8","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\account\\Account.jsx":"9","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\account\\Addaddress.jsx":"10","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Cart.jsx":"11","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\CartTotal.jsx":"12","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Checkout.jsx":"13","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Checkoutasguest.jsx":"14","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\login\\Login.jsx":"15","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\account\\RecentOrders.jsx":"16","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\wishlist\\WishList.jsx":"17","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\navbar\\NavSocialMedia.jsx":"18","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\Details.jsx":"19","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\ProductDetailsCarousel.jsx":"20","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\Review.jsx":"21","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Home.jsx":"22","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Products.jsx":"23","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Jumbo.jsx":"24","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\BottomProducts.jsx":"25","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\SignUp.jsx":"26","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Accessories.jsx":"27","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\AccessoriesDetails.jsx":"28","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\AllProducts\\AllProductsWrapper.jsx":"29","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\AllProducts\\AllTShirts.jsx":"30","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\AllProducts\\AllAccessories.jsx":"31"},{"size":595,"mtime":1610469712295,"results":"32","hashOfConfig":"33"},{"size":2068,"mtime":1612405504513,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"33"},{"size":1850,"mtime":1611979206205,"results":"36","hashOfConfig":"33"},{"size":1613,"mtime":1611157041439,"results":"37","hashOfConfig":"33"},{"size":493,"mtime":1611599381649,"results":"38","hashOfConfig":"33"},{"size":416,"mtime":1612292256464,"results":"39","hashOfConfig":"33"},{"size":9991,"mtime":1611928106420,"results":"40","hashOfConfig":"33"},{"size":6640,"mtime":1612413618468,"results":"41","hashOfConfig":"33"},{"size":17800,"mtime":1612292050330,"results":"42","hashOfConfig":"33"},{"size":14885,"mtime":1612402894319,"results":"43","hashOfConfig":"33"},{"size":2449,"mtime":1612292692199,"results":"44","hashOfConfig":"33"},{"size":2256,"mtime":1612292545331,"results":"45","hashOfConfig":"33"},{"size":24936,"mtime":1612292798349,"results":"46","hashOfConfig":"33"},{"size":5789,"mtime":1612292728676,"results":"47","hashOfConfig":"33"},{"size":6386,"mtime":1612292759892,"results":"48","hashOfConfig":"33"},{"size":5625,"mtime":1612413728222,"results":"49","hashOfConfig":"33"},{"size":5002,"mtime":1612423849374,"results":"50","hashOfConfig":"33"},{"size":4191,"mtime":1612292703669,"results":"51","hashOfConfig":"33"},{"size":1390,"mtime":1612292917470,"results":"52","hashOfConfig":"33"},{"size":6679,"mtime":1612412437560,"results":"53","hashOfConfig":"33"},{"size":14751,"mtime":1612425241507,"results":"54","hashOfConfig":"33"},{"size":3598,"mtime":1612424325965,"results":"55","hashOfConfig":"33"},{"size":754,"mtime":1612354096648,"results":"56","hashOfConfig":"33"},{"size":3777,"mtime":1612292903011,"results":"57","hashOfConfig":"33"},{"size":5750,"mtime":1612292786785,"results":"58","hashOfConfig":"33"},{"size":3810,"mtime":1612424365177,"results":"59","hashOfConfig":"33"},{"size":4108,"mtime":1612412033335,"results":"60","hashOfConfig":"33"},{"size":5335,"mtime":1612425272442,"results":"61","hashOfConfig":"33"},{"size":11872,"mtime":1612414076966,"results":"62","hashOfConfig":"33"},{"size":11881,"mtime":1612414040950,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"bngkf6",{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"66"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\index.js",[],["136","137"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\App.js",["138","139"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\reportWebVitals.js",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer.jsx",["140","141","142","143","144","145","146","147"],"import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport \"../css/Footer.css\";\r\nimport footerLogo from \"../assets/jpslogo3.png\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faRegistered } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass Footer extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"footer-wrapper\">\r\n          <div id=\"footer\">\r\n            <Container>\r\n              <Row className=\"pt-3 pb-3\">\r\n                <Col>\r\n                  <div>\r\n                    <h5>How Can We Help ? </h5>\r\n                    <a>Help</a> <br></br>\r\n                    <a>Track my order</a> <br></br>\r\n                    <a>Returns</a> <br></br>\r\n                    <a>Get Exclusive offers and discount</a>\r\n                  </div>\r\n                </Col>\r\n                <Col>\r\n                  <div>\r\n                    <h5>About JohnPaulStephen</h5>\r\n                    <br></br>\r\n                    <img src={footerLogo} id=\"footer-logo\" />\r\n                    <div className=\"text-center mb-3 mt-3\">\r\n                      <FontAwesomeIcon icon={faRegistered}></FontAwesomeIcon>\r\n                      <span className=\"mx-2\">JohnPaulStephen</span>\r\n                      <span>2021</span>\r\n                    </div>\r\n                  </div>\r\n                </Col>\r\n                <Col>\r\n                  <div>\r\n                    <h5>Information</h5>\r\n                    <a>Delivery Information</a> <br></br>\r\n                    <a>Terms & Conditions</a> <br></br>\r\n                    <a>Privacy Policy</a> <br></br>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\PaymentSuccess.jsx",["148","149"],"import React, { Component } from \"react\";\r\nimport \"../css/PaymentSuccess.css\";\r\n\r\nclass PaymentSuccess extends Component {\r\n  state = {};\r\n\r\n  componentDidMount = async () => {\r\n    const res = await fetch(\r\n      \"http://localhost:3001/payment/delete-payment-price-and-cart\",\r\n      {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({\r\n          userId: localStorage[\"guestToken\"],\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    localStorage.removeItem(\"guestToken\");\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"bg\">\r\n          <div id=\"card\">\r\n            <span id=\"card__success\">\r\n              <i id=\"ion-checkmark\"></i>\r\n            </span>\r\n\r\n            <h1 id=\"card__msg\">Payment Complete</h1>\r\n            <h2 id=\"card__submsg\">Thank you for your transfer</h2>\r\n            <div id=\"card_body\">\r\n              <img\r\n                src=\"http://nathgreen.co.uk/assets/img/nath.jpg\"\r\n                id=\"card__avatar\"\r\n              />\r\n              <div id=\"card__recipient-info\">\r\n                <p id=\"card__recipient\">Nath Green</p>\r\n                <p id=\"card__email\">hello@nathgreen.co.uk</p>\r\n              </div>\r\n              <h1 id=\"card__price\">\r\n                <span>£</span>20<span>.00</span>\r\n              </h1>\r\n            </div>\r\n            <div id=\"card__tags\">\r\n              <span id=\"card__tag\">completed</span>\r\n              <span id=\"card__tag\">#123456789</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PaymentSuccess;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\LittleCart.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\NavBarCheckout.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\NavbarCheckOutCart.jsx",["150","151","152","153","154"],"import React, { Component } from \"react\";\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\n\r\nclass NavbarCheckOutCart extends Component {\r\n  state = {\r\n    allCart: {},\r\n    cart: [],\r\n    subTotal: \"\",\r\n    tax: 30,\r\n    finalTotal: \"\",\r\n    shippingCost: 50,\r\n    displayCheckOut: false,\r\n    quantity: \"\",\r\n    itemsLength: \"\",\r\n    userId: \"\",\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.getCart();\r\n  };\r\n  getCart = async () => {\r\n    const cartt = [];\r\n    const total = [];\r\n    if (!localStorage[\"userId\"]) {\r\n      const response = await fetch(\r\n        `http://localhost:3003/cart/${localStorage[\"guestToken\"]}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const cart = await response.json();\r\n      cart.products.map((product) => {\r\n        cartt.push(product);\r\n        total.push(product.total);\r\n      });\r\n      const subTotal = parseInt(total.reduce((a, b) => a + b, 0));\r\n      const finalTotal = parseInt(\r\n        subTotal + this.state.tax + this.state.shippingCost\r\n      );\r\n\r\n      this.setState({\r\n        allCart: cart,\r\n        cart: cartt,\r\n        subTotal,\r\n        finalTotal,\r\n        itemsLength: cart.totalItems,\r\n        userId: cart.userId,\r\n      });\r\n      console.log(this.state.allCart);\r\n    } else if (localStorage[\"userId\"]) {\r\n      const response = await fetch(\r\n        `http://localhost:3003/cart/${localStorage[\"userId\"]}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const cart = await response.json();\r\n      cart.products.map((product) => {\r\n        cartt.push(product);\r\n        total.push(product.total);\r\n      });\r\n      const subTotal = parseInt(total.reduce((a, b) => a + b, 0));\r\n      const finalTotal = parseInt(\r\n        subTotal + this.state.tax + this.state.shippingCost\r\n      );\r\n\r\n      this.setState({\r\n        allCart: cart,\r\n        cart: cartt,\r\n        subTotal,\r\n        finalTotal,\r\n        itemsLength: cart.totalItems,\r\n        userId: cart.userId,\r\n      });\r\n      console.log(this.state.allCart);\r\n    }\r\n  };\r\n  increaseQuantity = async (\r\n    id,\r\n    productName,\r\n    productPrice,\r\n    previousQuantity\r\n  ) => {\r\n    const quantity = previousQuantity + 1;\r\n    const productDetails = {\r\n      productId: id,\r\n      quantity: quantity,\r\n      name: productName,\r\n      price: parseInt(productPrice),\r\n      userId: localStorage[\"guestToken\"],\r\n    };\r\n    let response = await fetch(\r\n      `http://localhost:3003/cart/check-out-as-guest`,\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify(productDetails),\r\n        headers: {\r\n          \"Content-Type\": \"Application/json\",\r\n        },\r\n      }\r\n    );\r\n    if (response.ok) {\r\n      const createPriceResponse = await fetch(\r\n        \"http://localhost:3003/payment/create-product-price\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            userId: localStorage[\"guestToken\"],\r\n            productName: productName,\r\n            productPrice: parseInt(productPrice * 100),\r\n            productId: id,\r\n            quantity: quantity,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      this.getCart();\r\n    }\r\n  };\r\n\r\n  decreaseQuantity = async (\r\n    id,\r\n    productName,\r\n    productPrice,\r\n    previousQuantity\r\n  ) => {\r\n    if (previousQuantity === 1) {\r\n      alert(\"Quantity cannot be less than 1\");\r\n    } else {\r\n      const quantity = previousQuantity - 1;\r\n      const productDetails = {\r\n        productId: id,\r\n        quantity: quantity,\r\n        name: productName,\r\n        price: parseInt(productPrice),\r\n        userId: localStorage[\"guestToken\"],\r\n      };\r\n      let response = await fetch(\r\n        `http://localhost:3003/cart/check-out-as-guest`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify(productDetails),\r\n          headers: {\r\n            \"Content-Type\": \"Application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        const createPriceResponse = await fetch(\r\n          \"http://localhost:3003/payment/create-product-price\",\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              userId: localStorage[\"guestToken\"],\r\n              productName: productName,\r\n              productPrice: parseInt(productPrice * 100),\r\n              productId: id,\r\n              quantity: quantity,\r\n            }),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        this.getCart();\r\n      }\r\n    }\r\n  };\r\n\r\n  deleteItem = async (user, id) => {\r\n    let response = await fetch(\r\n      `http://localhost:3003/cart/delete-item/${user}/${id}`,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"Application/json\",\r\n        },\r\n      }\r\n    );\r\n    if (response.ok) {\r\n      this.getCart();\r\n    } else {\r\n      alert(\"some\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <section>\r\n          <Row>\r\n            <Col lg={8}>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Card.Header>{this.state.itemsLength} items</Card.Header>\r\n                  {this.state.cart.map((item, key) => {\r\n                    return (\r\n                      <Row style={{ paddingTop: \"2rem\" }} key={item._id}>\r\n                        <Col md={5} lg={3} xl={3}>\r\n                          <div className=\"view zoom overlay z-depth-1 rounded mb-3 mb-md-0\">\r\n                            <img className=\"img-fluid w-100\" src={item.image} />\r\n                          </div>\r\n                        </Col>\r\n                        <Col md={7} lg={9} xl={9}>\r\n                          <div>\r\n                            <div className=\"d-flex justify-content-between\">\r\n                              <div>\r\n                                <h5>{item.name}</h5>\r\n                                <p class=\"mb-3 text-muted text-uppercase small\">\r\n                                  Shirt -{item.color}\r\n                                </p>\r\n                                <p class=\"mb-2 text-muted text-uppercase small\">\r\n                                  Color: {item.size}\r\n                                </p>\r\n                                <p class=\"mb-3 text-muted text-uppercase small\">\r\n                                  Size: {item.color}\r\n                                </p>\r\n                              </div>\r\n                              <div className=\"d-flex justify-content-between\">\r\n                                <button\r\n                                  id=\"quantity-increase\"\r\n                                  style={{\r\n                                    width: \"40px\",\r\n                                    height: \"40px\",\r\n                                    marginRight: \"1rem\",\r\n                                  }}\r\n                                  onClick={() =>\r\n                                    this.increaseQuantity(\r\n                                      item.productId,\r\n                                      item.name,\r\n                                      item.price,\r\n                                      item.quantity\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  +\r\n                                </button>\r\n                                <h5>{item.quantity}</h5>\r\n                                <button\r\n                                  id=\"quantity-decrease\"\r\n                                  style={{\r\n                                    width: \"40px\",\r\n                                    height: \"40px\",\r\n                                    marginLeft: \"1rem\",\r\n                                  }}\r\n                                  onClick={() =>\r\n                                    this.decreaseQuantity(\r\n                                      item.productId,\r\n                                      item.name,\r\n                                      item.price,\r\n                                      item.quantity\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  -\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"d-flex justify-content-between align-items-center\">\r\n                              <div>\r\n                                <p\r\n                                  onClick={() =>\r\n                                    this.deleteItem(\r\n                                      this.state.allCart.userId,\r\n                                      item._id\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  REMOVE ITEM <i class=\"fa fa-trash\"></i>\r\n                                </p>\r\n                              </div>\r\n                              <p class=\"mb-0\">£ {item.price}</p>\r\n                            </div>\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    );\r\n                  })}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={4}>\r\n              {/* <CartTotal\r\n                subTotal={this.state.subTotal}\r\n                finalTotal={this.state.finalTotal}\r\n                tax={this.state.tax}\r\n                shippingCost={this.state.shippingCost}\r\n                action={this.displayCheckOut}\r\n                userId={this.state.userId}\r\n              /> */}\r\n            </Col>\r\n          </Row>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarCheckOutCart;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\account\\Account.jsx",["155"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\account\\Addaddress.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Cart.jsx",["156","157","158","159","160","161","162","163"],"import React, { Component } from \"react\";\r\nimport \"../../css/Cart.css\";\r\nimport CartTotal from \"../../Components/cart/CartTotal\";\r\nimport Checkout from \"../../Components/cart/Checkout\";\r\nimport { Row, Col, Container, Card } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nconst stripeTestPromise = loadStripe(\r\n  \"pk_test_51HrjVqFcebO7I650cr4OP6bitBa3ExCpu3Fc3IkYuA36TjnMdbPDmsTz6PejmS9LRDMRwpdB4fKqeTCqjZaDK8Xp003k14DkTf\"\r\n);\r\n\r\nclass Cart extends Component {\r\n  state = {\r\n    allCart: {},\r\n    cart: [],\r\n    subTotal: \"\",\r\n    tax: 30,\r\n    finalTotal: \"\",\r\n    shippingCost: 50,\r\n    displayCheckOut: false,\r\n    quantity: \"\",\r\n    itemsLength: \"\",\r\n    userId: \"\",\r\n    alert: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.getCart();\r\n  };\r\n\r\n  getCart = async () => {\r\n    const cartt = [];\r\n    const total = [];\r\n    if (localStorage[\"userId\"]) {\r\n      const response = await fetch(\r\n        `http://localhost:3003/cart/${localStorage[\"userId\"]}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const cart = await response.json();\r\n      cart.products.map((product) => {\r\n        cartt.push(product);\r\n        total.push(product.total);\r\n      });\r\n      const subTotal = parseInt(total.reduce((a, b) => a + b, 0));\r\n      const finalTotal = parseInt(\r\n        subTotal + this.state.tax + this.state.shippingCost\r\n      );\r\n\r\n      this.setState({\r\n        allCart: cart,\r\n        cart: cartt,\r\n        subTotal,\r\n        finalTotal,\r\n        itemsLength: cart.totalItems,\r\n        userId: cart.userId,\r\n      });\r\n      console.log(this.state.allCart);\r\n    } else if (localStorage[\"guestToken\"]) {\r\n      const response = await fetch(\r\n        `http://localhost:3003/cart/${localStorage[\"guestToken\"]}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const cart = await response.json();\r\n      cart.products.map((product) => {\r\n        cartt.push(product);\r\n        total.push(product.total);\r\n      });\r\n      const subTotal = parseInt(total.reduce((a, b) => a + b, 0));\r\n      const finalTotal = parseInt(\r\n        subTotal + this.state.tax + this.state.shippingCost\r\n      );\r\n\r\n      this.setState({\r\n        allCart: cart,\r\n        cart: cartt,\r\n        subTotal,\r\n        finalTotal,\r\n        itemsLength: cart.totalItems,\r\n        userId: cart.userId,\r\n      });\r\n      console.log(this.state.allCart);\r\n    }\r\n  };\r\n\r\n  displayCheckOut = () => {\r\n    this.setState({\r\n      displayCheckOut: true,\r\n    });\r\n  };\r\n\r\n  increaseQuantity = async (\r\n    id,\r\n    productName,\r\n    productPrice,\r\n    previousQuantity\r\n  ) => {\r\n    if (!localStorage[\"userId\"]) {\r\n      const quantity = previousQuantity + 1;\r\n      const productDetails = {\r\n        productId: id,\r\n        quantity: quantity,\r\n        name: productName,\r\n        price: parseInt(productPrice),\r\n        userId: localStorage[\"guestToken\"],\r\n      };\r\n      let response = await fetch(\r\n        `http://localhost:3003/cart/check-out-as-guest`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify(productDetails),\r\n          headers: {\r\n            \"Content-Type\": \"Application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        const createPriceResponse = await fetch(\r\n          \"http://localhost:3003/payment/create-product-price\",\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              userId: localStorage[\"guestToken\"],\r\n              productName: productName,\r\n              productPrice: parseInt(productPrice * 100),\r\n              productId: id,\r\n              quantity: quantity,\r\n            }),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        this.getCart();\r\n      }\r\n    } else if (localStorage[\"userId\"]) {\r\n      const quantity = previousQuantity + 1;\r\n      const productDetails = {\r\n        productId: id,\r\n        quantity: quantity,\r\n        name: productName,\r\n        price: parseInt(productPrice),\r\n        userId: localStorage[\"userId\"],\r\n      };\r\n      let response = await fetch(\r\n        `http://localhost:3003/cart/check-out-as-guest`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify(productDetails),\r\n          headers: {\r\n            \"Content-Type\": \"Application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        const createPriceResponse = await fetch(\r\n          \"http://localhost:3003/payment/create-product-price\",\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              userId: localStorage[\"userId\"],\r\n              productName: productName,\r\n              productPrice: parseInt(productPrice * 100),\r\n              productId: id,\r\n              quantity: quantity,\r\n            }),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        this.getCart();\r\n      }\r\n    }\r\n  };\r\n\r\n  decreaseQuantity = async (\r\n    id,\r\n    productName,\r\n    productPrice,\r\n    previousQuantity\r\n  ) => {\r\n    if (!localStorage[\"userId\"]) {\r\n      if (previousQuantity === 1) {\r\n        this.setState({ alert: true });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            alert: false,\r\n          });\r\n        }, 1200);\r\n      } else {\r\n        const quantity = previousQuantity - 1;\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: quantity,\r\n          name: productName,\r\n          price: parseInt(productPrice),\r\n          userId: localStorage[\"guestToken\"],\r\n        };\r\n        let response = await fetch(\r\n          `http://localhost:3003/cart/check-out-as-guest`,\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              \"Content-Type\": \"Application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (response.ok) {\r\n          const createPriceResponse = await fetch(\r\n            \"http://localhost:3003/payment/create-product-price\",\r\n            {\r\n              method: \"POST\",\r\n              body: JSON.stringify({\r\n                userId: localStorage[\"guestToken\"],\r\n                productName: productName,\r\n                productPrice: parseInt(productPrice * 100),\r\n                productId: id,\r\n                quantity: quantity,\r\n              }),\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n          this.getCart();\r\n        }\r\n      }\r\n    } else if (localStorage[\"userId\"]) {\r\n      if (previousQuantity === 1) {\r\n        this.setState({ alert: true });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            alert: false,\r\n          });\r\n        }, 1200);\r\n      } else {\r\n        const quantity = previousQuantity - 1;\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: quantity,\r\n          name: productName,\r\n          price: parseInt(productPrice),\r\n          userId: localStorage[\"userId\"],\r\n        };\r\n        let response = await fetch(\r\n          `http://localhost:3003/cart/check-out-as-guest`,\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              \"Content-Type\": \"Application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (response.ok) {\r\n          const createPriceResponse = await fetch(\r\n            \"http://localhost:3003/payment/create-product-price\",\r\n            {\r\n              method: \"POST\",\r\n              body: JSON.stringify({\r\n                userId: localStorage[\"userId\"],\r\n                productName: productName,\r\n                productPrice: parseInt(productPrice * 100),\r\n                productId: id,\r\n                quantity: quantity,\r\n              }),\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n          this.getCart();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  deleteItem = async (user, id) => {\r\n    let response = await fetch(\r\n      `http://localhost:3003/cart/delete-item/${user}/${id}`,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"Application/json\",\r\n        },\r\n      }\r\n    );\r\n    if (response.ok) {\r\n      this.getCart();\r\n    } else {\r\n      alert(\"some\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Container style={{ marginTop: \"2rem\", marginBottom: \"2rem\" }}>\r\n        {this.state.alert === true ? (\r\n          <Alert id=\"alert\">Quantity cannot be less than 1</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {this.state.cart.length === 0 ? (\r\n          <div className=\"text-center\" id=\"empty-cart-div\">\r\n            <h3>Your Cart Is Empty, Please Add Items To Cart</h3>\r\n          </div>\r\n        ) : (\r\n          <section>\r\n            <Row>\r\n              <Col lg={8}>\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Card.Header>\r\n                      {this.state.allCart.totalItems} item(s)\r\n                    </Card.Header>\r\n                    {this.state.cart.map((item, key) => {\r\n                      return (\r\n                        <div>\r\n                          <Row style={{ paddingTop: \"2rem\" }} key={item._id}>\r\n                            <Col md={5} lg={3} xl={3}>\r\n                              <div className=\"view zoom overlay z-depth-1 rounded mb-3 mb-md-0\">\r\n                                <img\r\n                                  className=\"img-fluid w-100\"\r\n                                  src={item.image}\r\n                                />\r\n                              </div>\r\n                            </Col>\r\n                            <Col md={7} lg={9} xl={9}>\r\n                              <div>\r\n                                <div className=\"d-flex justify-content-between\">\r\n                                  <div>\r\n                                    <h5>{item.name}</h5>\r\n                                    {item.color === \"\" ? (\r\n                                      <div></div>\r\n                                    ) : (\r\n                                      <div>\r\n                                        <p class=\"mb-3 text-muted text-uppercase small\">\r\n                                          Color -{item.color}\r\n                                        </p>\r\n                                      </div>\r\n                                    )}\r\n\r\n                                    <p class=\"mb-3 text-muted text-uppercase small\">\r\n                                      Size: {item.size}\r\n                                    </p>\r\n                                  </div>\r\n                                  <div className=\"d-flex justify-content-between\">\r\n                                    <button\r\n                                      id=\"quantity-increase\"\r\n                                      style={{\r\n                                        width: \"40px\",\r\n                                        height: \"40px\",\r\n                                        marginRight: \"1rem\",\r\n                                      }}\r\n                                      onClick={() =>\r\n                                        this.increaseQuantity(\r\n                                          item.productId,\r\n                                          item.name,\r\n                                          item.price,\r\n                                          item.quantity\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      +\r\n                                    </button>\r\n                                    <h5>{item.quantity}</h5>\r\n                                    <button\r\n                                      id=\"quantity-decrease\"\r\n                                      style={{\r\n                                        width: \"40px\",\r\n                                        height: \"40px\",\r\n                                        marginLeft: \"1rem\",\r\n                                      }}\r\n                                      onClick={() =>\r\n                                        this.decreaseQuantity(\r\n                                          item.productId,\r\n                                          item.name,\r\n                                          item.price,\r\n                                          item.quantity\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      -\r\n                                    </button>\r\n                                  </div>\r\n                                </div>\r\n                                <div class=\"d-flex justify-content-between align-items-center\">\r\n                                  <div>\r\n                                    <div\r\n                                      onClick={() =>\r\n                                        this.deleteItem(\r\n                                          this.state.allCart.userId,\r\n                                          item._id\r\n                                        )\r\n                                      }\r\n                                      id=\"delete-item-div\"\r\n                                    >\r\n                                      <FontAwesomeIcon icon={faTrash} />\r\n                                    </div>\r\n                                  </div>\r\n                                  <p class=\"mb-0\">£ {item.price}</p>\r\n                                </div>\r\n                              </div>\r\n                            </Col>\r\n                          </Row>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n              <Col lg={4}>\r\n                <CartTotal\r\n                  subTotal={this.state.subTotal}\r\n                  finalTotal={this.state.finalTotal}\r\n                  tax={this.state.tax}\r\n                  shippingCost={this.state.shippingCost}\r\n                  action={this.displayCheckOut}\r\n                  userId={this.state.userId}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            {this.state.displayCheckOut === true ? <Checkout /> : <div></div>}\r\n          </section>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cart;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\CartTotal.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Checkout.jsx",["164","165","166"],"import React, { Component } from \"react\";\r\nimport { Form, Container, Row, Col } from \"react-bootstrap\";\r\nimport SignUp from \"./SignUp\";\r\nimport CheckoutasGuest from \"../Components/../cart/Checkoutasguest\";\r\n\r\nclass Checkout extends Component {\r\n  state = {\r\n    signUpForm: true,\r\n    checkOutAsGuestForm: false,\r\n    backToSignUpText: \"black\",\r\n    checkOutAsGuestText: \"orange\",\r\n    backToSignUpTextCursor: \"default\",\r\n    checkOutAsGuestTextCursor: \"pointer\",\r\n  };\r\n\r\n  displayCheckOutAsGuest = () => {\r\n    this.setState({\r\n      checkOutAsGuestForm: true,\r\n      signUpForm: false,\r\n      backToSignUpText: \"orange\",\r\n      checkOutAsGuestText: \"black\",\r\n      backToSignUpTextCursor: \"pointer\",\r\n      checkOutAsGuestTextCursor: \"default\",\r\n    });\r\n  };\r\n\r\n  displaySignUpForm = () => {\r\n    this.setState({\r\n      signUpForm: true,\r\n      checkOutAsGuestForm: false,\r\n      backToSignUpText: \"black\",\r\n      checkOutAsGuestText: \"orange\",\r\n      backToSignUpTextCursor: \"default\",\r\n      checkOutAsGuestTextCursor: \"pointer\",\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container style={{ marginTop: \"3rem\" }}>\r\n          <div className=\"text-center\">\r\n            <h5\r\n              style={{\r\n                color: this.state.backToSignUpText,\r\n                cursor: this.state.backToSignUpTextCursor,\r\n                display: \"inline\",\r\n              }}\r\n              onClick={() => this.displaySignUpForm()}\r\n            >\r\n              Please register and checkout below to easily get access to your\r\n              order history or{\" \"}\r\n            </h5>\r\n            <h5\r\n              style={{\r\n                color: this.state.checkOutAsGuestText,\r\n                cursor: this.state.checkOutAsGuestTextCursor,\r\n                display: \"inline-block\",\r\n              }}\r\n              onClick={() => this.displayCheckOutAsGuest()}\r\n            >\r\n              checkout as guest\r\n            </h5>\r\n          </div>\r\n          {this.state.signUpForm === true ? (\r\n            <div>\r\n              <SignUp />\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <CheckoutasGuest />\r\n            </div>\r\n          )}\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Checkout;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Checkoutasguest.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\login\\Login.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\account\\RecentOrders.jsx",["167"],"import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Card, Alert } from \"react-bootstrap\";\r\nimport \"../../css/RecentOrders.css\";\r\n\r\nclass RecentOrders extends Component {\r\n  state = {\r\n    recentOrders: [],\r\n    quantity: 1,\r\n    alert: false,\r\n    errorAlert: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const response = await fetch(\r\n      `http://localhost:3003/users/user-order/${localStorage[\"userId\"]}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const recentOrders = await response.json();\r\n    this.setState({ recentOrders });\r\n  };\r\n  reOrderItem = async (\r\n    id,\r\n    productImage,\r\n    productName,\r\n    productSize,\r\n    productColor,\r\n    productPrice\r\n  ) => {\r\n    try {\r\n      const productDetails = {\r\n        productId: id,\r\n        quantity: this.state.quantity,\r\n        image: productImage,\r\n        name: productName,\r\n        size: productSize,\r\n        color: productColor,\r\n        price: parseInt(productPrice),\r\n\r\n        userId: localStorage[\"userId\"],\r\n      };\r\n      let response = await fetch(\r\n        `http://localhost:3003/cart/check-out-as-guest`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify(productDetails),\r\n          headers: {\r\n            \"Content-Type\": \"Application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        const createPriceResponse = await fetch(\r\n          \"http://localhost:3003/payment/create-product-price\",\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              userId: localStorage[\"userId\"],\r\n              productName: productName,\r\n              productPrice: parseInt(productPrice * 100),\r\n              productId: id,\r\n              quantity: this.state.quantity,\r\n            }),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (createPriceResponse.ok) {\r\n          this.setState({ alert: true });\r\n          setTimeout(() => {\r\n            this.setState({\r\n              alert: false,\r\n            });\r\n          }, 1200);\r\n        }\r\n      } else {\r\n        this.setState({ errorAlert: true });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            errorAlert: false,\r\n          });\r\n        }, 1200);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container className=\"pt-5\">\r\n          <h5 className=\"text-center pb-3\">Your recent orders</h5>\r\n\r\n          {this.state.recentOrders.length === 0 ? (\r\n            <div>\r\n              <h3>No Recent Orders To Display</h3>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              {this.state.recentOrders.products.map((product, key) => {\r\n                return (\r\n                  <Row className=\"gutters-sm\" style={{ marginBottom: \"2rem\" }}>\r\n                    <Col md={4} className=\"mb-3\">\r\n                      <Card>\r\n                        <Card.Body>\r\n                          <div className=\"d-flex flex-column align-items-center text-center\">\r\n                            <img\r\n                              src={product.image}\r\n                              alt=\"user-picture\"\r\n                              class=\"rounded-circle\"\r\n                              width=\"150\"\r\n                            ></img>\r\n                          </div>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Col>\r\n                    <Col md={8}>\r\n                      <Card>\r\n                        <Card.Body>\r\n                          <Row style={{ marginTop: \"1rem\" }}>\r\n                            <Col sm={3}></Col>\r\n                            <Col sm={9}>\r\n                              <h5>{product.name}</h5>\r\n                            </Col>\r\n                          </Row>\r\n                          <hr></hr>\r\n\r\n                          <Row style={{ marginTop: \"1rem\" }}>\r\n                            <Col sm={3}>\r\n                              <h6 class=\"mb-0\">Price</h6>\r\n                            </Col>\r\n                            <Col sm={9}>£ {product.price}</Col>\r\n                          </Row>\r\n                          <Row style={{ marginTop: \"1rem\" }}>\r\n                            <Col sm={3}>\r\n                              <h6 class=\"mb-0\">Size</h6>\r\n                            </Col>\r\n                            <Col sm={9}>{product.size}</Col>\r\n                          </Row>\r\n                          <Row style={{ marginTop: \"1rem\" }}>\r\n                            <Col sm={3}>\r\n                              <h6 class=\"mb-0\">Color</h6>\r\n                            </Col>\r\n                            <Col sm={9}>{product.color}</Col>\r\n                          </Row>\r\n                          <hr></hr>\r\n                        </Card.Body>\r\n                        <div\r\n                          className=\"text-center\"\r\n                          style={{\r\n                            marginBottom: \"2rem\",\r\n                            marginTop: \"1rem\",\r\n                            width: \"20%\",\r\n                          }}\r\n                        >\r\n                          <button\r\n                            id=\"reorder-button\"\r\n                            onClick={() =>\r\n                              this.reOrderItem(\r\n                                product._id,\r\n                                product.image,\r\n                                product.name,\r\n                                product.size,\r\n                                product.color,\r\n                                product.price\r\n                              )\r\n                            }\r\n                          >\r\n                            Reorder\r\n                          </button>\r\n                        </div>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                );\r\n              })}\r\n            </div>\r\n          )}\r\n          {this.state.alert === true ? (\r\n            <Alert id=\"alert\">\r\n              <h5 className=\"text-center\">Item Added To Cart</h5>\r\n            </Alert>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecentOrders;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\wishlist\\WishList.jsx",["168"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\navbar\\NavSocialMedia.jsx",["169","170","171","172","173","174","175"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\Details.jsx",["176","177","178","179","180"],"import React, { Component } from \"react\";\r\nimport hero2 from \"../../assets/hero2.png\";\r\nimport \"../../css/Details.css\";\r\nimport ProductDetailsCarousel from \"./ProductDetailsCarousel\";\r\nimport { Row, Col, Container, Carousel, CarouselItem } from \"react-bootstrap\";\r\nimport Review from \"./Review\";\r\n\r\nclass Details extends Component {\r\n  state = {\r\n    details: {},\r\n    id: \"\",\r\n    quantity: 1,\r\n    alert: false,\r\n    errorAlert: false,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    const productId = this.props.match.params.productId;\r\n    const response = await fetch(`http://localhost:3003/product/${productId}`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const details = await response.json();\r\n    this.setState({\r\n      details,\r\n      id: productId,\r\n    });\r\n    this.getReviews();\r\n  };\r\n\r\n  addCart = async (id, productName, productPrice) => {\r\n    try {\r\n      if (!localStorage[\"userId\"]) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n          name: productName,\r\n          price: parseInt(productPrice),\r\n          userId: localStorage[\"guestToken\"],\r\n        };\r\n        let response = await fetch(\r\n          `http://localhost:3001/cart/check-out-as-guest`,\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              \"Content-Type\": \"Application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (response.ok) {\r\n          alert(\"success\");\r\n          const response = await fetch(\r\n            `http://localhost:3001/cart/${localStorage[\"guestToken\"]}`,\r\n            {\r\n              method: \"GET\",\r\n              headers: {\r\n                \"Content-type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n          const cart = await response.json();\r\n          this.props.secondAction(cart.totalItems);\r\n          // this.setState({ alert: true })\r\n          // setTimeout(() => {\r\n          //     this.setState({\r\n          //         alert: false\r\n          //     });\r\n          // }, 1200);\r\n        } else {\r\n          this.setState({ errorAlert: true });\r\n          setTimeout(() => {\r\n            this.setState({\r\n              errorAlert: false,\r\n            });\r\n          }, 1200);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  getReviews = async () => {\r\n    const response = await fetch(\r\n      `http://localhost:3001/reviews/${this.props.match.params.productId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const reviews = await response.json();\r\n    this.setState({\r\n      reviews,\r\n    });\r\n    console.log(\"\", this.state.reviews);\r\n  };\r\n  render() {\r\n    return (\r\n      <Container style={{ marginTop: \"2rem\", marginBottom: \"3rem\" }}>\r\n        <Row>\r\n          <Col md={4}>\r\n            <div className=\"view-product\">\r\n              <img src={this.state.details.image} />\r\n            </div>\r\n          </Col>\r\n          <Col sm={8}>\r\n            <div className=\"product-information\">\r\n              <h2>{this.state.details.name}</h2>\r\n              <p>{this.state.details.description}</p>\r\n              <span>\r\n                <span>£ {this.state.details.price}</span>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-fefault\"\r\n                  id=\"cart\"\r\n                  onClick={() =>\r\n                    this.addCart(\r\n                      this.state.details.productId,\r\n                      this.state.details.name,\r\n                      this.state.details.price\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"fa fa-shopping-cart\"></i>\r\n                  Add to cart\r\n                </button>\r\n              </span>\r\n              <p>\r\n                <b>Availability:</b> In Stock\r\n              </p>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Review id={this.props.match.params.productId} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Details;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\ProductDetailsCarousel.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\Review.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Home.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Products.jsx",["181","182","183","184","185","186","187","188","189"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Jumbo.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\BottomProducts.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\SignUp.jsx",["190"],"import React, { Component } from \"react\";\r\nimport { Form, Container, Row, Col, Alert } from \"react-bootstrap\";\r\nimport CheckoutasGuest from \"./Checkoutasguest\";\r\nimport \"../../css/Signup.css\";\r\nclass SignUp extends Component {\r\n  state = {\r\n    details: {\r\n      name: \"\",\r\n      email: \"\",\r\n      phoneNumber: \"\",\r\n      password: \"\",\r\n    },\r\n    alert: false,\r\n    errorAlert: false,\r\n    displayCheckOut: false,\r\n    signUpcompleted: false,\r\n  };\r\n\r\n  updateDetails = (event) => {\r\n    let details = this.state.details;\r\n    let id = event.currentTarget.id;\r\n    details[id] = event.currentTarget.value;\r\n    this.setState({\r\n      details,\r\n    });\r\n  };\r\n\r\n  signUp = async (e) => {\r\n    e.preventDefault();\r\n    if (localStorage[\"userId\"]) {\r\n      const res = await fetch(\"http://localhost:3003/users/register\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          userName: this.state.details.name,\r\n          email: this.state.details.email,\r\n          phoneNumber: this.state.details.phoneNumber,\r\n          password: this.state.details.password,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      if (res.status !== 400) {\r\n        this.setState({\r\n          alert: true,\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            alert: false,\r\n            displayCheckOut: true,\r\n            signUpcompleted: true,\r\n          });\r\n        }, 1200);\r\n      } else if (res.status === 400) {\r\n        this.setState({\r\n          errorAlert: true,\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            errorAlert: false,\r\n          });\r\n        }, 1200);\r\n      }\r\n    } else if (localStorage[\"guestToken\"]) {\r\n      const res = await fetch(\r\n        `http://localhost:3003/users/guest-token-already-exists/${localStorage[\"guestToken\"]}`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            userName: this.state.details.name,\r\n            email: this.state.details.email,\r\n            phoneNumber: this.state.details.phoneNumber,\r\n            password: this.state.details.password,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      console.log(\"signup\", res);\r\n      if (res.status !== 400) {\r\n        this.setState({\r\n          alert: true,\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            alert: false,\r\n            displayCheckOut: true,\r\n            signUpcompleted: true,\r\n          });\r\n        }, 1200);\r\n      } else if (res.status === 400) {\r\n        this.setState({\r\n          errorAlert: true,\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            errorAlert: false,\r\n          });\r\n        }, 1200);\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.displayCheckOut === false ? (\r\n          <div>\r\n            <Form className=\"mt-3\">\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Label htmlFor=\"firstName\">Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Ex. John\"\r\n                      id=\"name\"\r\n                      onChange={(e) => this.updateDetails(e)}\r\n                      value={this.state.details.name}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                      placeholder=\"Ex: abcd@abc.com\"\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      onChange={(e) => this.updateDetails(e)}\r\n                      value={this.state.details.email}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Label htmlFor=\"phoneNumber\">Phone Number</Form.Label>\r\n                    <Form.Control\r\n                      placeholder=\"Ex: 070 0000 8000\"\r\n                      id=\"phoneNumber\"\r\n                      type=\"text\"\r\n                      onChange={(e) => this.updateDetails(e)}\r\n                      value={this.state.details.phoneNumber}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      onChange={(e) => this.updateDetails(e)}\r\n                      value={this.state.details.password}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <div className=\"text-center\">\r\n                <button onClick={(e) => this.signUp(e)} id=\"sign-up\">\r\n                  Sign up and proceed to checkout\r\n                </button>\r\n              </div>\r\n            </Form>\r\n            {this.state.alert === true ? (\r\n              <Alert id=\"alert\" className=\"mt-2\">\r\n                <h5 className=\"text-center\">Sign Up successful</h5>\r\n              </Alert>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n            {this.state.errorAlert === true ? (\r\n              <Alert id=\"alert\" className=\"mt-2\">\r\n                <h5 className=\"text-center\">Something went wrong...</h5>\r\n              </Alert>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <CheckoutasGuest />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Accessories.jsx",["191","192","193","194","195","196","197","198"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\AccessoriesDetails.jsx",["199","200","201"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\AllProducts\\AllProductsWrapper.jsx",["202"],"import React, { Component } from \"react\";\r\nimport { Container, Form, Row, Col, Alert } from \"react-bootstrap\";\r\nimport AllTShirts from \"./AllTShirts\";\r\nimport AllAccessories from \"./AllAccessories\";\r\nimport \"../../css/AllProducts.css\";\r\n\r\nclass AllProductsWrapper extends Component {\r\n  state = {\r\n    productName: \"\",\r\n    foundProduct: {},\r\n    searchError: false,\r\n    productFound: false,\r\n    noSearchQuery: false,\r\n  };\r\n  updateSearch = (event) => {\r\n    this.setState({\r\n      productName: event.target.value,\r\n    });\r\n  };\r\n\r\n  searchProduct = async (e) => {\r\n    e.preventDefault();\r\n    if (this.state.productName === \"\") {\r\n      this.setState({ noSearchQuery: true });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          noSearchQuery: false,\r\n        });\r\n      }, 1200);\r\n    } else {\r\n      const response = await fetch(\r\n        `http://localhost:3003/product/search/${this.state.productName}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const product = await response.json();\r\n\r\n      if (product.message === \"Not Found\") {\r\n        this.setState({\r\n          searchError: true,\r\n          productFound: false,\r\n          productName: \"\",\r\n        });\r\n      } else if (product.length !== 0) {\r\n        product.map((prod) =>\r\n          this.setState({\r\n            foundProduct: prod,\r\n          })\r\n        );\r\n        this.setState({\r\n          productFound: true,\r\n          searchError: false,\r\n          productName: \"\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n  viewProducts = () => {\r\n    this.setState({ productFound: false, searchError: false });\r\n  };\r\n  getProductsByCategory = async (e) => {\r\n    this.setState({});\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n          <Form style={{ marginBottom: \"3.5rem\" }}>\r\n            <Row>\r\n              <Col md={10}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Search for a specific item\"\r\n                  value={this.state.productName}\r\n                  onChange={(e) => this.updateSearch(e)}\r\n                />\r\n              </Col>\r\n              <Col md={2}>\r\n                <button onClick={(e) => this.searchProduct(e)} id=\"search-btn\">\r\n                  Search\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n\r\n          {this.state.noSearchQuery === true ? (\r\n            <Alert id=\"alert\">\r\n              <div className=\"text-center\">\r\n                <h5>Please enter item name</h5>\r\n              </div>\r\n            </Alert>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {this.state.productFound === false &&\r\n          this.state.searchError === false ? (\r\n            <div>\r\n              <AllTShirts />\r\n              <AllAccessories />\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              {this.state.searchError === true ? (\r\n                <div\r\n                  className=\"text-center\"\r\n                  style={{ marginTop: \"3.3rem\", marginBottom: \"3.3rem\" }}\r\n                >\r\n                  <h5>\r\n                    No item found, please make sure you entered the correct item\r\n                    name\r\n                  </h5>\r\n                </div>\r\n              ) : (\r\n                <Row>\r\n                  <Col md={4}>\r\n                    <div className=\"view-product\">\r\n                      <img src={this.state.foundProduct.image} />\r\n                    </div>\r\n                  </Col>\r\n                  <Col sm={8}>\r\n                    <div className=\"product-information\">\r\n                      <h2>{this.state.foundProduct.name}</h2>\r\n                      <p>{this.state.foundProduct.description}</p>\r\n                      <span>\r\n                        <span>£ {this.state.foundProduct.price}</span>\r\n                        <button\r\n                          type=\"button\"\r\n                          className=\"btn btn-fefault\"\r\n                          id=\"cart\"\r\n                          onClick={() =>\r\n                            this.addCart(\r\n                              this.state.foundProduct.productId,\r\n                              this.state.foundProduct.name,\r\n                              this.state.foundProduct.price\r\n                            )\r\n                          }\r\n                        >\r\n                          <i className=\"fa fa-shopping-cart\"></i>\r\n                          Add to cart\r\n                        </button>\r\n                      </span>\r\n                      <p>\r\n                        <b>Availability:</b> In Stock\r\n                      </p>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              )}\r\n\r\n              <div className=\"text-center\">\r\n                <button\r\n                  onClick={() => this.viewProducts()}\r\n                  id=\"view-all-products\"\r\n                >\r\n                  View all products\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {this.state.searchByCategory === true ? <div>dhdh</div> : <div></div>}\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllProductsWrapper;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\AllProducts\\AllTShirts.jsx",["203","204","205"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\AllProducts\\AllAccessories.jsx",["206","207","208"],{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":1,"column":17,"nodeType":"215","messageId":"216","endLine":1,"endColumn":26},{"ruleId":"213","severity":1,"message":"217","line":11,"column":8,"nodeType":"215","messageId":"216","endLine":11,"endColumn":22},{"ruleId":"218","severity":1,"message":"219","line":20,"column":21,"nodeType":"220","endLine":20,"endColumn":24},{"ruleId":"218","severity":1,"message":"219","line":21,"column":21,"nodeType":"220","endLine":21,"endColumn":24},{"ruleId":"218","severity":1,"message":"219","line":22,"column":21,"nodeType":"220","endLine":22,"endColumn":24},{"ruleId":"218","severity":1,"message":"219","line":23,"column":21,"nodeType":"220","endLine":23,"endColumn":24},{"ruleId":"221","severity":1,"message":"222","line":30,"column":21,"nodeType":"220","endLine":30,"endColumn":62},{"ruleId":"218","severity":1,"message":"219","line":41,"column":21,"nodeType":"220","endLine":41,"endColumn":24},{"ruleId":"218","severity":1,"message":"219","line":42,"column":21,"nodeType":"220","endLine":42,"endColumn":24},{"ruleId":"218","severity":1,"message":"219","line":43,"column":21,"nodeType":"220","endLine":43,"endColumn":24},{"ruleId":"213","severity":1,"message":"223","line":8,"column":11,"nodeType":"215","messageId":"216","endLine":8,"endColumn":14},{"ruleId":"221","severity":1,"message":"222","line":34,"column":15,"nodeType":"220","endLine":37,"endColumn":17},{"ruleId":"224","severity":1,"message":"225","line":35,"column":35,"nodeType":"226","messageId":"227","endLine":35,"endColumn":37},{"ruleId":"224","severity":1,"message":"225","line":64,"column":35,"nodeType":"226","messageId":"227","endLine":64,"endColumn":37},{"ruleId":"213","severity":1,"message":"228","line":109,"column":13,"nodeType":"215","messageId":"216","endLine":109,"endColumn":32},{"ruleId":"213","severity":1,"message":"228","line":157,"column":15,"nodeType":"215","messageId":"216","endLine":157,"endColumn":34},{"ruleId":"221","severity":1,"message":"222","line":208,"column":29,"nodeType":"220","endLine":208,"endColumn":81},{"ruleId":"229","severity":1,"message":"230","line":74,"column":25,"nodeType":"220","endLine":79,"endColumn":26},{"ruleId":"213","severity":1,"message":"231","line":10,"column":7,"nodeType":"215","messageId":"216","endLine":10,"endColumn":24},{"ruleId":"224","severity":1,"message":"225","line":47,"column":35,"nodeType":"226","messageId":"227","endLine":47,"endColumn":37},{"ruleId":"224","severity":1,"message":"225","line":76,"column":35,"nodeType":"226","messageId":"227","endLine":76,"endColumn":37},{"ruleId":"213","severity":1,"message":"228","line":129,"column":15,"nodeType":"215","messageId":"216","endLine":129,"endColumn":34},{"ruleId":"213","severity":1,"message":"228","line":167,"column":15,"nodeType":"215","messageId":"216","endLine":167,"endColumn":34},{"ruleId":"213","severity":1,"message":"228","line":222,"column":17,"nodeType":"215","messageId":"216","endLine":222,"endColumn":36},{"ruleId":"213","severity":1,"message":"228","line":269,"column":17,"nodeType":"215","messageId":"216","endLine":269,"endColumn":36},{"ruleId":"221","severity":1,"message":"222","line":334,"column":33,"nodeType":"220","endLine":337,"endColumn":35},{"ruleId":"213","severity":1,"message":"232","line":2,"column":10,"nodeType":"215","messageId":"216","endLine":2,"endColumn":14},{"ruleId":"213","severity":1,"message":"233","line":2,"column":27,"nodeType":"215","messageId":"216","endLine":2,"endColumn":30},{"ruleId":"213","severity":1,"message":"234","line":2,"column":32,"nodeType":"215","messageId":"216","endLine":2,"endColumn":35},{"ruleId":"229","severity":1,"message":"230","line":112,"column":29,"nodeType":"220","endLine":117,"endColumn":30},{"ruleId":"229","severity":1,"message":"230","line":81,"column":33,"nodeType":"220","endLine":86,"endColumn":34},{"ruleId":"213","severity":1,"message":"235","line":8,"column":3,"nodeType":"215","messageId":"216","endLine":8,"endColumn":15},{"ruleId":"221","severity":1,"message":"222","line":31,"column":19,"nodeType":"220","endLine":34,"endColumn":21},{"ruleId":"218","severity":1,"message":"236","line":41,"column":23,"nodeType":"220","endLine":41,"endColumn":35},{"ruleId":"218","severity":1,"message":"236","line":46,"column":23,"nodeType":"220","endLine":46,"endColumn":35},{"ruleId":"218","severity":1,"message":"236","line":51,"column":23,"nodeType":"220","endLine":51,"endColumn":35},{"ruleId":"237","severity":1,"message":"238","line":56,"column":23,"nodeType":"220","endLine":59,"endColumn":24},{"ruleId":"218","severity":1,"message":"236","line":65,"column":23,"nodeType":"220","endLine":65,"endColumn":35},{"ruleId":"213","severity":1,"message":"239","line":2,"column":8,"nodeType":"215","messageId":"216","endLine":2,"endColumn":13},{"ruleId":"213","severity":1,"message":"240","line":4,"column":8,"nodeType":"215","messageId":"216","endLine":4,"endColumn":30},{"ruleId":"213","severity":1,"message":"241","line":5,"column":31,"nodeType":"215","messageId":"216","endLine":5,"endColumn":39},{"ruleId":"213","severity":1,"message":"242","line":5,"column":41,"nodeType":"215","messageId":"216","endLine":5,"endColumn":53},{"ruleId":"221","severity":1,"message":"222","line":108,"column":15,"nodeType":"220","endLine":108,"endColumn":53},{"ruleId":"213","severity":1,"message":"232","line":5,"column":10,"nodeType":"215","messageId":"216","endLine":5,"endColumn":14},{"ruleId":"213","severity":1,"message":"243","line":6,"column":8,"nodeType":"215","messageId":"216","endLine":6,"endColumn":19},{"ruleId":"213","severity":1,"message":"233","line":9,"column":3,"nodeType":"215","messageId":"216","endLine":9,"endColumn":6},{"ruleId":"213","severity":1,"message":"234","line":10,"column":3,"nodeType":"215","messageId":"216","endLine":10,"endColumn":6},{"ruleId":"213","severity":1,"message":"244","line":13,"column":3,"nodeType":"215","messageId":"216","endLine":13,"endColumn":7},{"ruleId":"213","severity":1,"message":"245","line":14,"column":3,"nodeType":"215","messageId":"216","endLine":14,"endColumn":12},{"ruleId":"213","severity":1,"message":"246","line":15,"column":3,"nodeType":"215","messageId":"216","endLine":15,"endColumn":9},{"ruleId":"213","severity":1,"message":"247","line":16,"column":3,"nodeType":"215","messageId":"216","endLine":16,"endColumn":8},{"ruleId":"218","severity":1,"message":"236","line":46,"column":21,"nodeType":"220","endLine":46,"endColumn":73},{"ruleId":"213","severity":1,"message":"248","line":2,"column":16,"nodeType":"215","messageId":"216","endLine":2,"endColumn":25},{"ruleId":"213","severity":1,"message":"233","line":7,"column":3,"nodeType":"215","messageId":"216","endLine":7,"endColumn":6},{"ruleId":"213","severity":1,"message":"234","line":8,"column":3,"nodeType":"215","messageId":"216","endLine":8,"endColumn":6},{"ruleId":"213","severity":1,"message":"244","line":11,"column":3,"nodeType":"215","messageId":"216","endLine":11,"endColumn":7},{"ruleId":"213","severity":1,"message":"245","line":12,"column":3,"nodeType":"215","messageId":"216","endLine":12,"endColumn":12},{"ruleId":"213","severity":1,"message":"246","line":13,"column":3,"nodeType":"215","messageId":"216","endLine":13,"endColumn":9},{"ruleId":"213","severity":1,"message":"247","line":14,"column":3,"nodeType":"215","messageId":"216","endLine":14,"endColumn":8},{"ruleId":"213","severity":1,"message":"249","line":17,"column":8,"nodeType":"215","messageId":"216","endLine":17,"endColumn":22},{"ruleId":"218","severity":1,"message":"236","line":52,"column":21,"nodeType":"220","endLine":52,"endColumn":73},{"ruleId":"213","severity":1,"message":"241","line":2,"column":31,"nodeType":"215","messageId":"216","endLine":2,"endColumn":39},{"ruleId":"213","severity":1,"message":"242","line":2,"column":41,"nodeType":"215","messageId":"216","endLine":2,"endColumn":53},{"ruleId":"221","severity":1,"message":"222","line":106,"column":15,"nodeType":"220","endLine":106,"endColumn":53},{"ruleId":"221","severity":1,"message":"222","line":121,"column":23,"nodeType":"220","endLine":121,"endColumn":66},{"ruleId":"213","severity":1,"message":"248","line":3,"column":3,"nodeType":"215","messageId":"216","endLine":3,"endColumn":12},{"ruleId":"213","severity":1,"message":"244","line":6,"column":3,"nodeType":"215","messageId":"216","endLine":6,"endColumn":7},{"ruleId":"218","severity":1,"message":"236","line":245,"column":25,"nodeType":"220","endLine":245,"endColumn":77},{"ruleId":"213","severity":1,"message":"248","line":3,"column":3,"nodeType":"215","messageId":"216","endLine":3,"endColumn":12},{"ruleId":"213","severity":1,"message":"244","line":6,"column":3,"nodeType":"215","messageId":"216","endLine":6,"endColumn":7},{"ruleId":"218","severity":1,"message":"236","line":280,"column":27,"nodeType":"220","endLine":280,"endColumn":79},"no-native-reassign",["250"],"no-negated-in-lhs",["251"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'NavBarCheckout' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'res' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'createPriceResponse' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'stripeTestPromise' is assigned a value but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'faCrosshairs' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'hero2' is defined but never used.","'ProductDetailsCarousel' is defined but never used.","'Carousel' is defined but never used.","'CarouselItem' is defined but never used.","'Accessories' is defined but never used.","'Card' is defined but never used.","'Accordion' is defined but never used.","'Button' is defined but never used.","'Alert' is defined but never used.","'Container' is defined but never used.","'BottomProducts' is defined but never used.","no-global-assign","no-unsafe-negation"]