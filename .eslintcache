[{"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\index.js":"1","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\App.js":"2","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\reportWebVitals.js":"3","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\PaymentSuccess.jsx":"4","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\LittleCart.jsx":"5","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\NavBarCheckout.jsx":"6","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\NavbarCheckOutCart.jsx":"7","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\account\\Account.jsx":"8","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\account\\Addaddress.jsx":"9","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Cart.jsx":"10","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\CartTotal.jsx":"11","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Checkout.jsx":"12","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Checkoutasguest.jsx":"13","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\login\\Login.jsx":"14","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\account\\RecentOrders.jsx":"15","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\wishlist\\WishList.jsx":"16","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\navbar\\NavSocialMedia.jsx":"17","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\Details.jsx":"18","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\ProductDetailsCarousel.jsx":"19","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\Review.jsx":"20","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Home.jsx":"21","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Products.jsx":"22","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Jumbo.jsx":"23","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\SignUp.jsx":"24","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Accessories.jsx":"25","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\AccessoriesDetails.jsx":"26","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\Footer.jsx":"27","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\AboutUs.jsx":"28","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\login\\ForgottenPassword.jsx":"29","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\login\\UpdatePassword.jsx":"30","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Helpers\\functions.js":"31","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Paypalpayment.jsx":"32","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Carou.jsx":"33","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\AllProducts\\Shopnow.jsx":"34","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\OrderConfirmed.jsx":"35","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Inventory\\StockManager.jsx":"36","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Inventory\\UpdateInventory.jsx":"37","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\CookiePolicy.jsx":"38","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\TermsOfSales.jsx":"39","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\PrivacyPolicy.jsx":"40","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\TermsOfUse.jsx":"41","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\AddToCartModal.jsx":"42","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Notification.jsx":"43"},{"size":605,"mtime":1626438609852,"results":"44","hashOfConfig":"45"},{"size":8663,"mtime":1627726513717,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":499162500000,"results":"47","hashOfConfig":"45"},{"size":1613,"mtime":1611157041439,"results":"48","hashOfConfig":"45"},{"size":493,"mtime":1611599381649,"results":"49","hashOfConfig":"45"},{"size":416,"mtime":1612292256464,"results":"50","hashOfConfig":"45"},{"size":10169,"mtime":1626777663549,"results":"51","hashOfConfig":"45"},{"size":6631,"mtime":1626777665616,"results":"52","hashOfConfig":"45"},{"size":17815,"mtime":1626777665617,"results":"53","hashOfConfig":"45"},{"size":27039,"mtime":1627559661530,"results":"54","hashOfConfig":"45"},{"size":1675,"mtime":1627650917357,"results":"55","hashOfConfig":"45"},{"size":3149,"mtime":1626781568730,"results":"56","hashOfConfig":"45"},{"size":25211,"mtime":1627650987026,"results":"57","hashOfConfig":"45"},{"size":4076,"mtime":1626777665222,"results":"58","hashOfConfig":"45"},{"size":6891,"mtime":1626777665616,"results":"59","hashOfConfig":"45"},{"size":4932,"mtime":1626777664889,"results":"60","hashOfConfig":"45"},{"size":4852,"mtime":1627647869600,"results":"61","hashOfConfig":"45"},{"size":8714,"mtime":1627563375404,"results":"62","hashOfConfig":"45"},{"size":1390,"mtime":1612292917470,"results":"63","hashOfConfig":"45"},{"size":6781,"mtime":1627489882608,"results":"64","hashOfConfig":"45"},{"size":8009,"mtime":1627540905577,"results":"65","hashOfConfig":"45"},{"size":7372,"mtime":1627727936336,"results":"66","hashOfConfig":"45"},{"size":1476,"mtime":1627725656716,"results":"67","hashOfConfig":"45"},{"size":5800,"mtime":1626777753202,"results":"68","hashOfConfig":"45"},{"size":8175,"mtime":1626777664248,"results":"69","hashOfConfig":"45"},{"size":4421,"mtime":1626777663811,"results":"70","hashOfConfig":"45"},{"size":3485,"mtime":1626686327382,"results":"71","hashOfConfig":"45"},{"size":1386,"mtime":1624894447174,"results":"72","hashOfConfig":"45"},{"size":3507,"mtime":1626777665617,"results":"73","hashOfConfig":"45"},{"size":3937,"mtime":1626777665222,"results":"74","hashOfConfig":"45"},{"size":4636,"mtime":1626777664768,"results":"75","hashOfConfig":"45"},{"size":4973,"mtime":1627218462463,"results":"76","hashOfConfig":"45"},{"size":742,"mtime":1625341424040,"results":"77","hashOfConfig":"45"},{"size":15702,"mtime":1627562731059,"results":"78","hashOfConfig":"45"},{"size":4130,"mtime":1627637336693,"results":"79","hashOfConfig":"45"},{"size":1324,"mtime":1626777665616,"results":"80","hashOfConfig":"45"},{"size":3844,"mtime":1626777665618,"results":"81","hashOfConfig":"45"},{"size":536,"mtime":1626719548961,"results":"82","hashOfConfig":"45"},{"size":524,"mtime":1626681476884,"results":"83","hashOfConfig":"45"},{"size":526,"mtime":1626681480453,"results":"84","hashOfConfig":"45"},{"size":518,"mtime":1626681458035,"results":"85","hashOfConfig":"45"},{"size":782,"mtime":1627205899182,"results":"86","hashOfConfig":"45"},{"size":273,"mtime":1627204552556,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"bngkf6",{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"90"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"90"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"90"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"90"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"90"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"90"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"90"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"90"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"90"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"90"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"90"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\index.js",[],["204","205"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\App.js",["206","207","208"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\reportWebVitals.js",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\PaymentSuccess.jsx",["209","210"],"import React, { Component } from \"react\";\r\nimport \"../css/PaymentSuccess.css\";\r\n\r\nclass PaymentSuccess extends Component {\r\n  state = {};\r\n\r\n  componentDidMount = async () => {\r\n    const res = await fetch(\r\n      \"http://localhost:3001/payment/delete-payment-price-and-cart\",\r\n      {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({\r\n          userId: localStorage[\"guestToken\"],\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    localStorage.removeItem(\"guestToken\");\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"bg\">\r\n          <div id=\"card\">\r\n            <span id=\"card__success\">\r\n              <i id=\"ion-checkmark\"></i>\r\n            </span>\r\n\r\n            <h1 id=\"card__msg\">Payment Complete</h1>\r\n            <h2 id=\"card__submsg\">Thank you for your transfer</h2>\r\n            <div id=\"card_body\">\r\n              <img\r\n                src=\"http://nathgreen.co.uk/assets/img/nath.jpg\"\r\n                id=\"card__avatar\"\r\n              />\r\n              <div id=\"card__recipient-info\">\r\n                <p id=\"card__recipient\">Nath Green</p>\r\n                <p id=\"card__email\">hello@nathgreen.co.uk</p>\r\n              </div>\r\n              <h1 id=\"card__price\">\r\n                <span>£</span>20<span>.00</span>\r\n              </h1>\r\n            </div>\r\n            <div id=\"card__tags\">\r\n              <span id=\"card__tag\">completed</span>\r\n              <span id=\"card__tag\">#123456789</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PaymentSuccess;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\LittleCart.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\NavBarCheckout.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\NavbarCheckOutCart.jsx",["211","212","213","214","215"],"import React, { Component } from \"react\";\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\n\r\nclass NavbarCheckOutCart extends Component {\r\n  state = {\r\n    allCart: {},\r\n    cart: [],\r\n    subTotal: \"\",\r\n    tax: 30,\r\n    finalTotal: \"\",\r\n    shippingCost: 50,\r\n    displayCheckOut: false,\r\n    quantity: \"\",\r\n    itemsLength: \"\",\r\n    userId: \"\",\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.getCart();\r\n  };\r\n  getCart = async () => {\r\n    const cartt = [];\r\n    const total = [];\r\n    if (!localStorage[\"userId\"]) {\r\n      const response = await fetch(\r\n        `http://localhost:3003/cart/${localStorage[\"guestToken\"]}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const cart = await response.json();\r\n      cart.products.map((product) => {\r\n        cartt.push(product);\r\n        total.push(product.total);\r\n      });\r\n      const subTotal = parseInt(total.reduce((a, b) => a + b, 0));\r\n      const finalTotal = parseInt(\r\n        subTotal + this.state.tax + this.state.shippingCost\r\n      );\r\n\r\n      this.setState({\r\n        allCart: cart,\r\n        cart: cartt,\r\n        subTotal,\r\n        finalTotal,\r\n        itemsLength: cart.totalItems,\r\n        userId: cart.userId,\r\n      });\r\n      console.log(this.state.allCart);\r\n    } else if (localStorage[\"userId\"]) {\r\n      const response = await fetch(\r\n        `http://localhost:3003/cart/${localStorage[\"userId\"]}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const cart = await response.json();\r\n      cart.products.map((product) => {\r\n        cartt.push(product);\r\n        total.push(product.total);\r\n      });\r\n      const subTotal = parseInt(total.reduce((a, b) => a + b, 0));\r\n      const finalTotal = parseInt(\r\n        subTotal + this.state.tax + this.state.shippingCost\r\n      );\r\n\r\n      this.setState({\r\n        allCart: cart,\r\n        cart: cartt,\r\n        subTotal,\r\n        finalTotal,\r\n        itemsLength: cart.totalItems,\r\n        userId: cart.userId,\r\n      });\r\n      console.log(this.state.allCart);\r\n    }\r\n  };\r\n  increaseQuantity = async (\r\n    id,\r\n    productName,\r\n    productPrice,\r\n    previousQuantity\r\n  ) => {\r\n    const quantity = previousQuantity + 1;\r\n    const productDetails = {\r\n      productId: id,\r\n      quantity: quantity,\r\n      name: productName,\r\n      price: parseInt(productPrice),\r\n      userId: localStorage[\"guestToken\"],\r\n    };\r\n    let response = await fetch(\r\n      `http://localhost:3003/cart/check-out-as-guest`,\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify(productDetails),\r\n        headers: {\r\n          \"Content-Type\": \"Application/json\",\r\n        },\r\n      }\r\n    );\r\n    if (response.ok) {\r\n      const createPriceResponse = await fetch(\r\n        \"http://localhost:3003/payment/create-product-price\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            userId: localStorage[\"guestToken\"],\r\n            productName: productName,\r\n            productPrice: parseInt(productPrice * 100),\r\n            productId: id,\r\n            quantity: quantity,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      this.getCart();\r\n    }\r\n  };\r\n\r\n  decreaseQuantity = async (\r\n    id,\r\n    productName,\r\n    productPrice,\r\n    previousQuantity\r\n  ) => {\r\n    if (previousQuantity === 1) {\r\n      alert(\"Quantity cannot be less than 1\");\r\n    } else {\r\n      const quantity = previousQuantity - 1;\r\n      const productDetails = {\r\n        productId: id,\r\n        quantity: quantity,\r\n        name: productName,\r\n        price: parseInt(productPrice),\r\n        userId: localStorage[\"guestToken\"],\r\n      };\r\n      let response = await fetch(\r\n        `http://localhost:3003/cart/check-out-as-guest`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify(productDetails),\r\n          headers: {\r\n            \"Content-Type\": \"Application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        const createPriceResponse = await fetch(\r\n          \"http://localhost:3003/payment/create-product-price\",\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              userId: localStorage[\"guestToken\"],\r\n              productName: productName,\r\n              productPrice: parseInt(productPrice * 100),\r\n              productId: id,\r\n              quantity: quantity,\r\n            }),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        this.getCart();\r\n      }\r\n    }\r\n  };\r\n\r\n  deleteItem = async (user, id) => {\r\n    let response = await fetch(\r\n      `http://localhost:3003/cart/delete-item/${user}/${id}`,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"Application/json\",\r\n        },\r\n      }\r\n    );\r\n    if (response.ok) {\r\n      this.getCart();\r\n    } else {\r\n      alert(\"some\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <section>\r\n          <Row>\r\n            <Col lg={8}>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Card.Header>{this.state.itemsLength} items</Card.Header>\r\n                  {this.state.cart.map((item, key) => {\r\n                    return (\r\n                      <Row style={{ paddingTop: \"2rem\" }} key={item._id}>\r\n                        <Col md={5} lg={3} xl={3}>\r\n                          <div className=\"view zoom overlay z-depth-1 rounded mb-3 mb-md-0\">\r\n                            <img className=\"img-fluid w-100\" src={item.image} />\r\n                          </div>\r\n                        </Col>\r\n                        <Col md={7} lg={9} xl={9}>\r\n                          <div>\r\n                            <div className=\"d-flex justify-content-between\">\r\n                              <div>\r\n                                <h5>{item.name}</h5>\r\n                                <p class=\"mb-3 text-muted text-uppercase small\">\r\n                                  Shirt -{item.color}\r\n                                </p>\r\n                                <p class=\"mb-2 text-muted text-uppercase small\">\r\n                                  Color: {item.size}\r\n                                </p>\r\n                                <p class=\"mb-3 text-muted text-uppercase small\">\r\n                                  Size: {item.color}\r\n                                </p>\r\n                              </div>\r\n                              <div className=\"d-flex justify-content-between\">\r\n                                <button\r\n                                  id=\"quantity-increase\"\r\n                                  style={{\r\n                                    width: \"40px\",\r\n                                    height: \"40px\",\r\n                                    marginRight: \"1rem\",\r\n                                  }}\r\n                                  onClick={() =>\r\n                                    this.increaseQuantity(\r\n                                      item.productId,\r\n                                      item.name,\r\n                                      item.price,\r\n                                      item.quantity\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  +\r\n                                </button>\r\n                                <h5>{item.quantity}</h5>\r\n                                <button\r\n                                  id=\"quantity-decrease\"\r\n                                  style={{\r\n                                    width: \"40px\",\r\n                                    height: \"40px\",\r\n                                    marginLeft: \"1rem\",\r\n                                  }}\r\n                                  onClick={() =>\r\n                                    this.decreaseQuantity(\r\n                                      item.productId,\r\n                                      item.name,\r\n                                      item.price,\r\n                                      item.quantity\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  -\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"d-flex justify-content-between align-items-center\">\r\n                              <div>\r\n                                <p\r\n                                  onClick={() =>\r\n                                    this.deleteItem(\r\n                                      this.state.allCart.userId,\r\n                                      item._id\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  REMOVE ITEM <i class=\"fa fa-trash\"></i>\r\n                                </p>\r\n                              </div>\r\n                              <p class=\"mb-0\">£ {item.price}</p>\r\n                            </div>\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    );\r\n                  })}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={4}>\r\n              {/* <CartTotal\r\n                subTotal={this.state.subTotal}\r\n                finalTotal={this.state.finalTotal}\r\n                tax={this.state.tax}\r\n                shippingCost={this.state.shippingCost}\r\n                action={this.displayCheckOut}\r\n                userId={this.state.userId}\r\n              /> */}\r\n            </Col>\r\n          </Row>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarCheckOutCart;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\account\\Account.jsx",["216"],"import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\n\r\nimport RecentOrders from \"./RecentOrders\";\r\nimport Addaddress from \"./Addaddress\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../css/Account.css\";\r\n\r\nclass Account extends Component {\r\n  state = {\r\n    userDetails: {},\r\n    userAddress: {},\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.getUserDetails();\r\n    this.getUserAddress();\r\n  };\r\n\r\n  getUserDetails = async () => {\r\n    const response = await fetch(\r\n      `http://localhost:3003/users/${localStorage[\"userId\"]}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const userDetails = await response.json();\r\n    this.setState({ userDetails });\r\n  };\r\n\r\n  getUserAddress = async () => {\r\n    const response = await fetch(\r\n      `http://localhost:3003/users/user-address/${localStorage[\"userId\"]}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    const userAddress = await response.json();\r\n    this.setState({\r\n      userAddress,\r\n    });\r\n  \r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container className=\"pt-5\">\r\n          {JSON.stringify(this.state.userDetails) === \"{}\" ? (\r\n            <div\r\n              className=\"text-center\"\r\n              style={{ marginTop: \"9rem\", marginBottom: \"9rem\" }}\r\n            >\r\n              <h3>\r\n                You Are Not Logged In, Please Login Or Signup{\" \"}\r\n                <Link to=\"/login\" id=\"login-link\">\r\n                  here\r\n                </Link>\r\n              </h3>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Row className=\"gutters-sm\">\r\n                <Col md={4} className=\"mb-3\">\r\n                  <Card>\r\n                    <Card.Body>\r\n                      <div className=\"d-flex flex-column align-items-center text-center\">\r\n                        <img\r\n                          src=\"https://bootdey.com/img/Content/avatar/avatar7.png\"\r\n                          alt=\"user-picture\"\r\n                          class=\"rounded-circle\"\r\n                          width=\"150\"\r\n                        ></img>\r\n                        <div class=\"mt-3\">\r\n                          <h4>{this.state.userDetails.userName}</h4>\r\n                        </div>\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                {this.state.userAddress.hasOwnProperty(\"message\") ? (\r\n                  <Col md={8}>\r\n                    <Card>\r\n                      <Card.Body>\r\n                        <Row>\r\n                          <Col sm={3}>\r\n                            <h6 class=\"mb-0\">Full Name</h6>\r\n                          </Col>\r\n                          <Col sm={9}>{this.state.userDetails.userName}</Col>\r\n                        </Row>\r\n                        <hr></hr>\r\n                        <Row>\r\n                          <Col sm={3}>\r\n                            <h6 class=\"mb-0\">Email</h6>\r\n                          </Col>\r\n                          <Col sm={9}>{this.state.userDetails.email}</Col>\r\n                        </Row>\r\n                        <hr></hr>\r\n                        <Row>\r\n                          <Col sm={3}>\r\n                            <h6 class=\"mb-0\">Phone Number</h6>\r\n                          </Col>\r\n                          <Col sm={9}>{this.state.userDetails.phoneNumber}</Col>\r\n                        </Row>\r\n                        <hr></hr>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                ) : (\r\n                  <Col md={8}>\r\n                    <Card>\r\n                      <Card.Body>\r\n                        <Row>\r\n                          <Col sm={3}>\r\n                            <h6 class=\"mb-0\">Full Name</h6>\r\n                          </Col>\r\n                          <Col sm={9}>{this.state.userDetails.userName}</Col>\r\n                        </Row>\r\n                        <hr></hr>\r\n                        <Row>\r\n                          <Col sm={3}>\r\n                            <h6 class=\"mb-0\">Email</h6>\r\n                          </Col>\r\n                          <Col sm={9}>{this.state.userDetails.email}</Col>\r\n                        </Row>\r\n                        <hr></hr>\r\n                        <Row>\r\n                          <Col sm={3}>\r\n                            <h6 class=\"mb-0\">Phone Number</h6>\r\n                          </Col>\r\n                          <Col sm={9}>{this.state.userDetails.phoneNumber}</Col>\r\n                        </Row>\r\n                        <hr></hr>\r\n                        <Row>\r\n                          <Col sm={3}>\r\n                            <h6 class=\"mb-0\">Address Line 1</h6>\r\n                          </Col>\r\n                          <Col sm={9}>\r\n                            {this.state.userAddress.addressLine1}\r\n                          </Col>\r\n                        </Row>\r\n                        <hr></hr>\r\n                        <Row>\r\n                          <Col sm={3}>\r\n                            <h6 class=\"mb-0\">County</h6>\r\n                          </Col>\r\n                          <Col sm={9}>{this.state.userAddress.county}</Col>\r\n                        </Row>\r\n                        <hr></hr>\r\n                        <Row>\r\n                          <Col sm={3}>\r\n                            <h6 class=\"mb-0\">Post Code</h6>\r\n                          </Col>\r\n                          <Col sm={9}>{this.state.userAddress.postCode}</Col>\r\n                        </Row>\r\n                        <hr></hr>\r\n                        <Row>\r\n                          <Col sm={3}>\r\n                            <h6 class=\"mb-0\">Country</h6>\r\n                          </Col>\r\n                          <Col sm={9}>{this.state.userAddress.country}</Col>\r\n                        </Row>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                )}\r\n              </Row>\r\n              {this.state.userAddress.hasOwnProperty(\"message\") ? (\r\n                <div>\r\n                  <Addaddress fireGetAddress={() => this.getUserAddress()} />\r\n                </div>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n              <RecentOrders />\r\n            </div>\r\n          )}\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Account;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\account\\Addaddress.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Cart.jsx",["217","218","219","220","221","222","223","224","225","226"],"import React, { Component } from 'react'\r\nimport '../../css/Cart.css'\r\nimport CartTotal from '../../Components/cart/CartTotal'\r\nimport Checkout from '../../Components/cart/Checkout'\r\nimport { Row, Col, Container, Card, Form } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\r\nimport { Alert, Modal } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nconst stripePromise = loadStripe(\r\n  'pk_test_51HrjVqFcebO7I650cr4OP6bitBa3ExCpu3Fc3IkYuA36TjnMdbPDmsTz6PejmS9LRDMRwpdB4fKqeTCqjZaDK8Xp003k14DkTf',\r\n)\r\n\r\nclass Cart extends Component {\r\n  state = {\r\n    allCart: {},\r\n    cart: [],\r\n    subTotal: '',\r\n    tax: 30,\r\n    finalTotal: '',\r\n    shippingCost: 4.95,\r\n    displayCheckOut: false,\r\n    quantity: '1',\r\n    itemsLength: '',\r\n    userId: '',\r\n    alert: false,\r\n    sizes: [],\r\n    sizeSelected: '',\r\n    stock: [],\r\n    color: 'None selected',\r\n    size: 'None selected',\r\n    productId: '',\r\n    sizeId: '',\r\n    stockId: '',\r\n    currentQuantity: '',\r\n    id: '',\r\n    showSizeError: false,\r\n    quantityModal: false,\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    this.getCart()\r\n  }\r\n\r\n  getCart = async () => {\r\n    const cartt = []\r\n    const total = []\r\n    const stock = []\r\n    const guestToken = sessionStorage.getItem('guestToken')\r\n    const userId = sessionStorage.getItem('userId')\r\n\r\n    if (userId) {\r\n      const response = await fetch(\r\n        `https://mr-oyebode-backend-yqavh.ondigitalocean.app/cart/${userId}`,\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n          },\r\n        },\r\n      )\r\n      const cart = await response.json()\r\n\r\n      cart.products.map((product) => {\r\n        cartt.push(product)\r\n        total.push(product.total)\r\n      })\r\n\r\n      const subTotal = parseInt(total.reduce((a, b) => a + b, 0))\r\n      const finalTotal = subTotal + this.state.shippingCost\r\n\r\n      this.setState({\r\n        allCart: cart,\r\n        cart: cartt,\r\n        subTotal,\r\n        finalTotal: finalTotal.toFixed(2),\r\n        itemsLength: cart.totalItems,\r\n        userId: cart.userId,\r\n        stock: cart.stock,\r\n      })\r\n    } else if (guestToken) {\r\n      const response = await fetch(\r\n        `https://mr-oyebode-backend-yqavh.ondigitalocean.app/cart/${guestToken}`,\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n          },\r\n        },\r\n      )\r\n      const cart = await response.json()\r\n\r\n      cart.products.map((product) => {\r\n        cartt.push(product)\r\n        total.push(product.total)\r\n        stock.push(product.stock)\r\n      })\r\n\r\n      const subTotal = parseInt(total.reduce((a, b) => a + b, 0))\r\n      const finalTotal = subTotal + this.state.shippingCost\r\n\r\n      this.setState({\r\n        cart: cartt,\r\n        subTotal,\r\n        finalTotal: finalTotal.toFixed(2),\r\n        itemsLength: cart.totalItems,\r\n        userId: cart.userId,\r\n        stock: stock,\r\n        id: cart._id,\r\n      })\r\n    }\r\n  }\r\n\r\n  displayCheckOut = () => {\r\n    const filterSize = this.state.cart.filter(\r\n      (pr) => pr.color === 'None selected' || pr.size === 'None selected',\r\n    )\r\n    if (filterSize.length !== 0) {\r\n      this.setState({ showSizeError: true })\r\n      setTimeout(() => this.setState({ showSizeError: false }), 1500)\r\n    } else {\r\n      this.setState({\r\n        displayCheckOut: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  handleSizeModal = () => {\r\n    this.setState({ showSizeError: false })\r\n  }\r\n  handleHideQuantity = () => {\r\n    this.setState({ quantityModal: false })\r\n  }\r\n\r\n  createProductPrice = async (\r\n    productName,\r\n    productPrice,\r\n    id,\r\n    quantity,\r\n    userId,\r\n  ) => {\r\n    const guestToken = sessionStorage.getItem('guestToken')\r\n\r\n    const createPriceResponse = await fetch(\r\n      'https://mr-oyebode-backend-yqavh.ondigitalocean.app/payment/create-product-price',\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          productName: productName,\r\n          productPrice: parseInt(productPrice * 100),\r\n          productId: id,\r\n          quantity: quantity,\r\n          userId: userId,\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'Application/json',\r\n        },\r\n      },\r\n    )\r\n  }\r\n\r\n  increaseQuantity = async (\r\n    id,\r\n    productName,\r\n    previousQuantity,\r\n    productImage,\r\n    productSize,\r\n    productColor,\r\n    productPrice,\r\n  ) => {\r\n    const productSizes = this.state.sizes.join('')\r\n    const guestToken = sessionStorage.getItem('guestToken')\r\n    const userId = sessionStorage.getItem('userId')\r\n    if (guestToken) {\r\n      const quantity = previousQuantity + 1\r\n      const productDetails = {\r\n        productId: id,\r\n        quantity: parseInt(quantity),\r\n        image: productImage,\r\n        name: productName,\r\n        size: productSize,\r\n        color: productColor,\r\n        price: parseInt(productPrice),\r\n        sizeFromClient: productSizes,\r\n        total: parseInt(productPrice),\r\n        userId: guestToken,\r\n      }\r\n      let response = await fetch(\r\n        `https://mr-oyebode-backend-yqavh.ondigitalocean.app/cart/check-out-as-guest`,\r\n        {\r\n          method: 'POST',\r\n          body: JSON.stringify(productDetails),\r\n          headers: {\r\n            'Content-Type': 'Application/json',\r\n          },\r\n        },\r\n      )\r\n      if (response.ok) {\r\n        this.setState({ quantity: quantity.toString() })\r\n        this.createProductPrice(\r\n          productName,\r\n          productPrice,\r\n          id,\r\n          quantity,\r\n          guestToken,\r\n        )\r\n        this.getCart()\r\n      }\r\n    } else if (userId) {\r\n      const quantity = previousQuantity + 1\r\n      const productDetails = {\r\n        productId: id,\r\n        quantity: quantity,\r\n        image: productImage,\r\n        name: productName,\r\n        size: productSize,\r\n        color: productColor,\r\n        price: parseInt(productPrice),\r\n        sizeFromClient: productSizes,\r\n        total: parseInt(productPrice),\r\n        userId: userId,\r\n      }\r\n      let response = await fetch(\r\n        `https://mr-oyebode-backend-yqavh.ondigitalocean.app/cart/check-out-as-guest`,\r\n        {\r\n          method: 'POST',\r\n          body: JSON.stringify(productDetails),\r\n          headers: {\r\n            'Content-Type': 'Application/json',\r\n          },\r\n        },\r\n      )\r\n      if (response.ok) {\r\n        this.setState({ quantity: quantity.toString() })\r\n        this.createProductPrice(productName, productPrice, id, quantity, userId)\r\n        this.getCart()\r\n      }\r\n    }\r\n  }\r\n\r\n  decreaseQuantity = async (\r\n    id,\r\n    productName,\r\n    previousQuantity,\r\n    productImage,\r\n    productSize,\r\n    productColor,\r\n    productPrice,\r\n  ) => {\r\n    const productSizes = this.state.sizes.join('')\r\n    const quantity = previousQuantity - 1\r\n    const guestToken = sessionStorage.getItem('guestToken')\r\n    const userId = sessionStorage.getItem('userId')\r\n    if (guestToken) {\r\n      const productDetails = {\r\n        productId: id,\r\n        quantity: parseInt(quantity),\r\n        image: productImage,\r\n        name: productName,\r\n        size: productSize,\r\n        color: productColor,\r\n        price: parseInt(productPrice),\r\n        sizeFromClient: productSizes,\r\n        total: parseInt(productPrice),\r\n        userId: guestToken,\r\n      }\r\n      if (previousQuantity === 1) {\r\n        this.setState({ quantityModal: true })\r\n        setTimeout(() => {\r\n          this.setState({\r\n            quantityModal: false,\r\n          })\r\n        }, 1200)\r\n      } else {\r\n        let response = await fetch(\r\n          `https://mr-oyebode-backend-yqavh.ondigitalocean.app/cart/check-out-as-guest`,\r\n          {\r\n            method: 'POST',\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              'Content-Type': 'Application/json',\r\n            },\r\n          },\r\n        )\r\n        if (response.ok) {\r\n          this.setState({ quantity: quantity.toString() })\r\n          this.createProductPrice(\r\n            productName,\r\n            productPrice,\r\n            id,\r\n            quantity,\r\n            guestToken,\r\n          )\r\n          this.getCart()\r\n        }\r\n      }\r\n    } else if (userId) {\r\n      const productDetails = {\r\n        productId: id,\r\n        quantity: parseInt(quantity),\r\n        image: productImage,\r\n        name: productName,\r\n        size: productSize,\r\n        color: productColor,\r\n        price: parseInt(productPrice),\r\n        sizeFromClient: productSizes,\r\n        total: parseInt(productPrice),\r\n        userId: userId,\r\n      }\r\n      if (previousQuantity === 1) {\r\n        this.setState({ alert: true })\r\n        setTimeout(() => {\r\n          this.setState({\r\n            alert: false,\r\n          })\r\n        }, 1200)\r\n      } else {\r\n        let response = await fetch(\r\n          `https://mr-oyebode-backend-yqavh.ondigitalocean.app/cart/check-out-as-guest`,\r\n          {\r\n            method: 'POST',\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              'Content-Type': 'Application/json',\r\n            },\r\n          },\r\n        )\r\n        if (response.ok) {\r\n          this.setState({ quantity: quantity.toString() })\r\n          this.createProductPrice(id, quantity)\r\n          this.getCart()\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteStripePrice = async (id) => {\r\n    const guestToken = sessionStorage.getItem('guestToken')\r\n\r\n    let response = await fetch(\r\n      `https://mr-oyebode-backend-yqavh.ondigitalocean.app/payment/delete-stripe-price`,\r\n      {\r\n        method: 'DELETE',\r\n        body: JSON.stringify({\r\n          userId: guestToken,\r\n          productId: id,\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'Application/json',\r\n        },\r\n      },\r\n    )\r\n  }\r\n\r\n  deleteItem = async (id, productId) => {\r\n    const guestToken = sessionStorage.getItem('guestToken')\r\n\r\n    let response = await fetch(\r\n      `https://mr-oyebode-backend-yqavh.ondigitalocean.app/cart/delete-item/${id}`,\r\n      {\r\n        method: 'DELETE',\r\n        body: JSON.stringify({\r\n          userId: guestToken,\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'Application/json',\r\n        },\r\n      },\r\n    )\r\n    if (response.ok) {\r\n      this.deleteStripePrice(productId)\r\n      this.getCart()\r\n      this.props.getCart()\r\n    } else {\r\n      alert('some')\r\n    }\r\n  }\r\n\r\n  editSize = async (e, userId, productId, size) => {\r\n    e.preventDefault()\r\n\r\n    let response = await fetch(\r\n      `https://mr-oyebode-backend-yqavh.ondigitalocean.app/cart/edit-product-size/${userId}/${productId}`,\r\n      {\r\n        method: 'PUT',\r\n        body: JSON.stringify({\r\n          size: size,\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'Application/json',\r\n        },\r\n      },\r\n    )\r\n    this.getCart()\r\n  }\r\n  editColor = async (e, userId, productId, color) => {\r\n    e.preventDefault()\r\n\r\n    let response = await fetch(\r\n      `https://mr-oyebode-backend-yqavh.ondigitalocean.app/cart/edit-product-color/${userId}/${productId}`,\r\n      {\r\n        method: 'PUT',\r\n        body: JSON.stringify({\r\n          color: color,\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'Application/json',\r\n        },\r\n      },\r\n    )\r\n    this.getCart()\r\n  }\r\n  render() {\r\n    return (\r\n      <Container style={{ marginTop: '2rem', marginBottom: '2rem' }}>\r\n        {this.state.alert === true ? (\r\n          <Alert id=\"alert\">Quantity cannot be less than 1</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {this.state.cart.length === 0 ? (\r\n          <div className=\"text-center\" id=\"empty-cart-div\">\r\n            <h3>Your Cart Is Empty, Please Add Items To Cart</h3>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Link id=\"continue-shopping-link\" to=\"/allProducts\">\r\n              Continue shopping\r\n            </Link>\r\n            <section>\r\n              <Row>\r\n                <Col lg={8}>\r\n                  <Card>\r\n                    <Card.Body>\r\n                      <Card.Header>\r\n                        {this.state.itemsLength} item(s)\r\n                      </Card.Header>\r\n                      {this.state.cart.map((item, key) => {\r\n                        return (\r\n                          <div>\r\n                            <Row style={{ paddingTop: '2rem' }} key={item._id}>\r\n                              <Col md={5} lg={3} xl={3}>\r\n                                <div className=\"view zoom overlay z-depth-1 rounded mb-3 mb-md-0\">\r\n                                  <img\r\n                                    className=\"img-fluid w-100\"\r\n                                    src={item.image}\r\n                                  />\r\n                                </div>\r\n                              </Col>\r\n                              <Col md={7} lg={9} xl={9}>\r\n                                <div>\r\n                                  <div className=\"d-flex justify-content-between\">\r\n                                    <div>\r\n                                      <h5 className=\"mt-4 mb-4\">{item.name}</h5>\r\n                                      {item.color === 'None selected' ? (\r\n                                        <div>\r\n                                          <h5 className=\"mt-4 mb-4 color-size-text\">\r\n                                            Please select preferred color\r\n                                          </h5>\r\n                                        </div>\r\n                                      ) : (\r\n                                        <div className=\"d-flex justify-content-between mt-3 mb-5\">\r\n                                          <div\r\n                                            style={{\r\n                                              backgroundColor: item.color,\r\n                                            }}\r\n                                            id=\"selected-code\"\r\n                                          >\r\n                                            &nbsp;\r\n                                          </div>\r\n                                        </div>\r\n                                      )}\r\n                                      {item.size === 'None selected' ? (\r\n                                        <div>\r\n                                          <h5 className=\"mt-4 mb-4 color-size-text\">\r\n                                            Please select preferred size\r\n                                          </h5>\r\n                                        </div>\r\n                                      ) : (\r\n                                        <h5 className=\"mt-4 mb-4 color-size-text\">\r\n                                          {item.size}\r\n                                        </h5>\r\n                                      )}\r\n\r\n                                      {/* <h5 className=\"mt-4 mb-4 color-size-text\">\r\n                                        Color : {item.color}\r\n                                      </h5> */}\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                      <button\r\n                                        id=\"quantity-increase\"\r\n                                        style={{\r\n                                          width: '40px',\r\n                                          height: '40px',\r\n                                          marginRight: '1rem',\r\n                                        }}\r\n                                        onClick={() =>\r\n                                          this.increaseQuantity(\r\n                                            item.productId,\r\n                                            item.name,\r\n                                            item.quantity,\r\n                                            item.image,\r\n                                            this.state.sizeSelected,\r\n                                            item.color,\r\n                                            item.price,\r\n                                            item.total,\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        +\r\n                                      </button>\r\n                                      <h5>{item.quantity}</h5>\r\n                                      <button\r\n                                        id=\"quantity-decrease\"\r\n                                        style={{\r\n                                          width: '40px',\r\n                                          height: '40px',\r\n                                          marginLeft: '1rem',\r\n                                        }}\r\n                                        onClick={() =>\r\n                                          this.decreaseQuantity(\r\n                                            item.productId,\r\n                                            item.name,\r\n                                            item.quantity,\r\n                                            item.image,\r\n                                            this.state.sizeSelected,\r\n                                            item.color,\r\n                                            item.price,\r\n                                            item.total,\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        -\r\n                                      </button>\r\n                                    </div>\r\n                                  </div>\r\n                                  <Row id=\"color-row\" md={4}>\r\n                                    {item.stock.map((stc) => {\r\n                                      return (\r\n                                        <Col id=\"color-selector\">\r\n                                          <div\r\n                                            style={{\r\n                                              backgroundColor: stc.colorCode,\r\n                                            }}\r\n                                            id=\"cart-color-code\"\r\n                                            className=\"mx-2\"\r\n                                            onClick={(e) =>\r\n                                              this.editColor(\r\n                                                e,\r\n                                                this.state.allCart.userId,\r\n                                                item._id,\r\n                                                stc.colorCode,\r\n                                              )\r\n                                            }\r\n                                          ></div>\r\n                                        </Col>\r\n                                        // <Col md={3}>\r\n                                        //   <button\r\n                                        //     id=\"color-button\"\r\n                                        //     onClick={(e) =>\r\n                                        //       this.editColor(\r\n                                        //         e,\r\n                                        //         this.state.allCart.userId,\r\n                                        //         item._id,\r\n                                        //         stc.color,\r\n                                        //       )\r\n                                        //     }\r\n                                        //     className=\"mt-3\"\r\n                                        //   >\r\n                                        //     {stc.color}\r\n                                        //   </button>\r\n                                        // </Col>\r\n                                      )\r\n                                    })}\r\n                                  </Row>\r\n                                  <Row className=\"mt-5 mb-5\" md={4}>\r\n                                    <Col>\r\n                                      <div\r\n                                        id=\"color-button\"\r\n                                        onClick={(e) =>\r\n                                          this.editSize(\r\n                                            e,\r\n                                            this.state.allCart.userId,\r\n                                            item._id,\r\n                                            'XXL',\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        <p>XXL</p>\r\n                                      </div>\r\n                                    </Col>\r\n                                    <Col>\r\n                                      <div\r\n                                        id=\"color-button\"\r\n                                        onClick={(e) =>\r\n                                          this.editSize(\r\n                                            e,\r\n                                            this.state.allCart.userId,\r\n                                            item._id,\r\n                                            'XL',\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        XL\r\n                                      </div>\r\n                                    </Col>\r\n                                    <Col>\r\n                                      <div\r\n                                        id=\"color-button\"\r\n                                        onClick={(e) =>\r\n                                          this.editSize(\r\n                                            e,\r\n                                            this.state.allCart.userId,\r\n                                            item._id,\r\n                                            'L',\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        L\r\n                                      </div>\r\n                                    </Col>\r\n                                    <Col>\r\n                                      <div\r\n                                        id=\"color-button\"\r\n                                        onClick={(e) =>\r\n                                          this.editSize(\r\n                                            e,\r\n                                            this.state.allCart.userId,\r\n                                            item._id,\r\n                                            'M',\r\n                                          )\r\n                                        }\r\n                                      >\r\n                                        M\r\n                                      </div>\r\n                                    </Col>\r\n                                    {/* <Col>\r\n                                    <button\r\n                                      id=\"color-button\"\r\n                                      className=\"mt-3\"\r\n                                      onClick={(e) =>\r\n                                        this.editSize(\r\n                                          e,\r\n                                          this.state.allCart.userId,\r\n                                          item._id,\r\n                                          'S',\r\n                                        )\r\n                                      }\r\n                                    >\r\n                                      S\r\n                                    </button>\r\n                                  </Col> */}\r\n                                  </Row>\r\n\r\n                                  <div class=\"d-flex justify-content-between align-items-center\">\r\n                                    <div>\r\n                                      <div\r\n                                        onClick={() =>\r\n                                          this.deleteItem(\r\n                                            item._id,\r\n                                            item.productId,\r\n                                          )\r\n                                        }\r\n                                        id=\"delete-item-div\"\r\n                                      >\r\n                                        <FontAwesomeIcon icon={faTrash} />\r\n                                      </div>\r\n                                    </div>\r\n                                    <h2 class=\"mb-0\">£ {item.price}</h2>\r\n                                  </div>\r\n                                </div>\r\n                              </Col>\r\n                            </Row>\r\n                          </div>\r\n                        )\r\n                      })}\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                <Col lg={4}>\r\n                  <CartTotal\r\n                    subTotal={this.state.subTotal}\r\n                    finalTotal={this.state.finalTotal}\r\n                    tax={this.state.tax}\r\n                    shippingCost={this.state.shippingCost}\r\n                    action={this.displayCheckOut}\r\n                    userId={this.state.userId}\r\n                    size={this.state.size}\r\n                    color={this.state.color}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              {this.state.displayCheckOut === true ? (\r\n                <Checkout\r\n                  total={this.state.finalTotal}\r\n                  subTotal={this.state.subTotal}\r\n                  productId={this.state.productId}\r\n                  sizeId={this.state.sizeId}\r\n                  quantity={this.state.quantity}\r\n                  stockId={this.state.stockId}\r\n                  size={this.state.size}\r\n                  currentQuantity={this.state.currentQuantity}\r\n                  id={this.state.id}\r\n                />\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n            </section>\r\n          </div>\r\n        )}\r\n        <Modal\r\n          show={this.state.showSizeError}\r\n          onHide={() => this.handleSizeModal()}\r\n        >\r\n          <Modal.Body id=\"modal-body\">\r\n            <p className=\"text-center\" id=\"cart-text\">\r\n              Please select product size or color\r\n            </p>\r\n          </Modal.Body>\r\n        </Modal>\r\n        <Modal\r\n          show={this.state.quantityModal}\r\n          onHide={() => this.handleHideQuantity()}\r\n        >\r\n          <Modal.Body id=\"modal-body\">\r\n            <p className=\"text-center\" id=\"cart-text\">\r\n              Item quantity cannot be less than 1.\r\n            </p>\r\n          </Modal.Body>\r\n        </Modal>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Cart\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\CartTotal.jsx",["227","228"],"import React, { Component, createRef } from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport '../../css/CartTotal.css'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\n\r\nclass CartTotal extends Component {\r\n  state = {\r\n    checkOut: false,\r\n  }\r\n\r\n  displayCheckOut = () => {\r\n    if (this.props.size === 'None selected') {\r\n      alert('size')\r\n    } else if (this.props.color === 'None selected') {\r\n      alert('color')\r\n    } else {\r\n      this.setState({\r\n        checkOut: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Card>\r\n          <Card.Body>\r\n            <Card.Header>Total Transaction</Card.Header>\r\n            <div style={{ paddingTop: '2rem' }}>\r\n              <div className=\"d-flex justify-content-between\">\r\n                <h5>Sub-total</h5>\r\n                <p>£ {this.props.subTotal}</p>\r\n              </div>\r\n              <div className=\"d-flex justify-content-between\">\r\n                <h5>Shipping Cost</h5>\r\n                <p>£ {this.props.shippingCost}</p>\r\n              </div>\r\n              <hr></hr>\r\n              <div className=\"d-flex justify-content-between\">\r\n                <h5>Total to be paid</h5>\r\n                <p>£ {this.props.finalTotal}</p>\r\n              </div>\r\n              <hr></hr>\r\n              <div className=\"text-center\">\r\n                <button\r\n                  id=\"proceed-to-checkout\"\r\n                  onClick={() => this.props.action()}\r\n                >\r\n                  Proceed to check out\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Card.Body>\r\n        </Card>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CartTotal\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Checkout.jsx",["229","230","231","232"],"import React, { Component } from 'react'\r\nimport { Form, Container, Row, Col } from 'react-bootstrap'\r\nimport SignUp from './SignUp'\r\nimport CheckoutasGuest from '../Components/../cart/Checkoutasguest'\r\n\r\nclass Checkout extends Component {\r\n  state = {\r\n    signUpForm: true,\r\n    checkOutAsGuestForm: false,\r\n    backToSignUpText: 'black',\r\n    checkOutAsGuestText: 'orange',\r\n    backToSignUpTextCursor: 'default',\r\n    checkOutAsGuestTextCursor: 'pointer',\r\n  }\r\n\r\n  displayCheckOutAsGuest = () => {\r\n    this.setState({\r\n      checkOutAsGuestForm: true,\r\n      signUpForm: false,\r\n      backToSignUpText: 'orange',\r\n      checkOutAsGuestText: 'black',\r\n      backToSignUpTextCursor: 'pointer',\r\n      checkOutAsGuestTextCursor: 'default',\r\n    })\r\n  }\r\n\r\n  displaySignUpForm = () => {\r\n    this.setState({\r\n      signUpForm: true,\r\n      checkOutAsGuestForm: false,\r\n      backToSignUpText: 'black',\r\n      checkOutAsGuestText: 'orange',\r\n      backToSignUpTextCursor: 'default',\r\n      checkOutAsGuestTextCursor: 'pointer',\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container>\r\n          <CheckoutasGuest\r\n            total={this.props.total}\r\n            subTotal={this.props.subTotal}\r\n            productId={this.props.productId}\r\n            sizeId={this.props.sizeId}\r\n            quantity={this.props.quantity}\r\n            stockId={this.props.stockId}\r\n            size={this.props.size}\r\n            currentQuantity={this.props.currentQuantity}\r\n            id={this.props.id}\r\n          />\r\n        </Container>\r\n        {/* <Container style={{ marginTop: '3rem' }}>\r\n          <div className=\"text-center\">\r\n            <h5\r\n              style={{\r\n                color: this.state.backToSignUpText,\r\n                cursor: this.state.backToSignUpTextCursor,\r\n                display: 'inline',\r\n              }}\r\n              onClick={() => this.displaySignUpForm()}\r\n            >\r\n              Please register and checkout below to easily get access to your\r\n              order history or{' '}\r\n            </h5>\r\n            <h5\r\n              style={{\r\n                color: this.state.checkOutAsGuestText,\r\n                cursor: this.state.checkOutAsGuestTextCursor,\r\n                display: 'inline-block',\r\n              }}\r\n              onClick={() => this.displayCheckOutAsGuest()}\r\n            >\r\n              checkout as guest\r\n            </h5>\r\n          </div>\r\n          {this.state.signUpForm === true ? (\r\n            <div>\r\n              <SignUp />\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <CheckoutasGuest\r\n                total={this.props.total}\r\n                subTotal={this.props.subTotal}\r\n                productId={this.props.productId}\r\n                sizeId={this.props.sizeId}\r\n                quantity={this.props.quantity}\r\n                stockId={this.props.stockId}\r\n                size={this.props.size}\r\n                currentQuantity={this.props.currentQuantity}\r\n                id={this.props.id}\r\n              />\r\n            </div>\r\n          )}\r\n        </Container> */}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Checkout\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Checkoutasguest.jsx",["233","234","235"],"import React, { Component } from 'react'\r\nimport { Form, Row, Col, Alert } from 'react-bootstrap'\r\nimport '../../css/Signup.css'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nimport Paypalpayment from './Paypalpayment'\r\nimport orderConfirmed from './OrderConfirmed'\r\n\r\nclass Checkoutasguest extends Component {\r\n  state = {\r\n    deliverTo: {\r\n      title: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      addressLine1: '',\r\n      postCode: '',\r\n      county: '',\r\n      country: '',\r\n      email: '',\r\n    },\r\n    checkBox: false,\r\n    showPayPal: false,\r\n    formError: false,\r\n    emailError: false,\r\n    errorSendingForm: false,\r\n  }\r\n\r\n  updateDeliverTo = (event) => {\r\n    let deliverTo = this.state.deliverTo\r\n    let id = event.currentTarget.id\r\n    deliverTo[id] = event.currentTarget.value\r\n    this.setState({\r\n      deliverTo,\r\n    })\r\n  }\r\n\r\n  isValidEmail = (email) => {\r\n    var mailformat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\r\n    if (email.match(mailformat)) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  createStripeSession = async () => {\r\n    const guestToken = sessionStorage.getItem('guestToken')\r\n    const response = await fetch(\r\n      'https://mr-oyebode-backend-yqavh.ondigitalocean.app/payment/create-checkout-session',\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          userId: guestToken,\r\n        }),\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      },\r\n    )\r\n    const details = await response.json()\r\n    window.location.href = details.url\r\n  }\r\n\r\n  checkOut = async (e) => {\r\n    e.preventDefault()\r\n    if (\r\n      this.state.deliverTo.title === '' ||\r\n      this.state.deliverTo.firstName === '' ||\r\n      this.state.deliverTo.lastName === '' ||\r\n      this.state.deliverTo.addressLine1 === '' ||\r\n      this.state.deliverTo.postCode === '' ||\r\n      this.state.deliverTo.postCode === '' ||\r\n      this.state.deliverTo.county === '' ||\r\n      this.state.deliverTo.country === '' ||\r\n      this.state.deliverTo.email === ''\r\n    ) {\r\n      this.setState({ formError: true })\r\n      setTimeout(() => this.setState({ formError: false }), 1500)\r\n    } else if (this.isValidEmail(this.state.deliverTo.email) === false) {\r\n      this.setState({ emailError: true })\r\n      setTimeout(() => this.setState({ emailError: false }), 1500)\r\n    } else {\r\n      const response = await fetch(\r\n        'https://mr-oyebode-backend-yqavh.ondigitalocean.app/payment/order-address',\r\n        {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            userId: sessionStorage.getItem('guestToken'),\r\n            fullName:\r\n              this.state.deliverTo.title +\r\n              ' ' +\r\n              this.state.deliverTo.firstName +\r\n              ' ' +\r\n              this.state.deliverTo.lastName,\r\n            addressLine1: this.state.deliverTo.addressLine1,\r\n            city: this.state.deliverTo.county,\r\n            postCode: this.state.deliverTo.postCode,\r\n            email: this.state.deliverTo.email,\r\n            subTotal: parseInt(this.props.subTotal),\r\n            total: parseInt(this.props.total),\r\n            billingAddressFullName:\r\n              this.state.deliverTo.title +\r\n              ' ' +\r\n              this.state.deliverTo.firstName +\r\n              ' ' +\r\n              this.state.deliverTo.lastName,\r\n            billingAddressaddressLine1: this.state.deliverTo.addressLine1,\r\n            billingAddresscity: this.state.deliverTo.county,\r\n            billingAddresspostCode: this.state.deliverTo.postCode,\r\n            billingAddressemail: this.state.deliverTo.email,\r\n          }),\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n          },\r\n        },\r\n      )\r\n      const details = await response.json()\r\n      if (details.message === 'Success') {\r\n        this.setState({\r\n          deliverTo: {\r\n            title: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            addressLine1: '',\r\n            postCode: '',\r\n            county: '',\r\n            country: '',\r\n            email: '',\r\n          },\r\n        })\r\n\r\n        this.createStripeSession()\r\n      } else {\r\n        this.setState({\r\n          errorSendingForm: true,\r\n        })\r\n        setTimeout(() => this.setState({ errorSendingForm: false }), 1500)\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"delivery-address-div\">\r\n        <div id=\"featured-text\" className=\"mt-5\">\r\n          <h2>Delivery address</h2>\r\n        </div>\r\n        <Form>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group>\r\n                <Form.Label htmlFor=\"title\">Title</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  id=\"title\"\r\n                  required\r\n                  onChange={(e) => this.updateDeliverTo(e)}\r\n                  value={this.state.deliverTo.title}\r\n                  defaultValue=\"Select Gender\"\r\n                >\r\n                  <option>Select title</option>\r\n                  <option value=\"Mr\">Mr</option>\r\n                  <option value=\"Miss\">Miss</option>\r\n                  <option value=\"Mrs\">Mrs</option>\r\n                  <option value=\"Other\">Prefer Not To Say</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label htmlFor=\"firstName\">First Name*</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Ex. John\"\r\n                  id=\"firstName\"\r\n                  onChange={(e) => this.updateDeliverTo(e)}\r\n                  value={this.state.deliverTo.firstName}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label htmlFor=\"lastName\">Last Name*</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Ex. John\"\r\n                  id=\"lastName\"\r\n                  onChange={(e) => this.updateDeliverTo(e)}\r\n                  value={this.state.deliverTo.lastName}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label htmlFor=\"country\">Country*</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  id=\"country\"\r\n                  required\r\n                  onChange={(e) => this.updateDeliverTo(e)}\r\n                  value={this.state.deliverTo.country}\r\n                  defaultValue=\"Choose Country\"\r\n                >\r\n                  <option>Select Country</option>\r\n                  <option value=\" AF\">Afghanistan</option>\r\n                  <option value=\"AX\">Åland Islands</option>\r\n                  <option value=\"AL\">Albania</option>\r\n                  <option value=\"DZ\">Algeria</option>\r\n                  <option value=\"AS\">American Samoa</option>\r\n                  <option value=\"AD\">Andorra</option>\r\n                  <option value=\"AO\">Angola</option>\r\n                  <option value=\"AI\">Anguilla</option>\r\n                  <option value=\"AQ\">Antarctica</option>\r\n                  <option value=\"AG\">Antigua and Barbuda</option>\r\n                  <option value=\"AR\">Argentina</option>\r\n                  <option value=\"AM\">Armenia</option>\r\n                  <option value=\"AW\">Aruba</option>\r\n                  <option value=\"AU\">Australia</option>\r\n                  <option value=\"AT\">Austria</option>\r\n                  <option value=\"AZ\">Azerbaijan</option>\r\n                  <option value=\"BS\">Bahamas</option>\r\n                  <option value=\"BH\">Bahrain</option>\r\n                  <option value=\"BD\">Bangladesh</option>\r\n                  <option value=\"BB\">Barbados</option>\r\n                  <option value=\"BY\">Belarus</option>\r\n                  <option value=\"BE\">Belgium</option>\r\n                  <option value=\"BZ\">Belize</option>\r\n                  <option value=\"BJ\">Benin</option>\r\n                  <option value=\"BM\">Bermuda</option>\r\n                  <option value=\"BT\">Bhutan</option>\r\n                  <option value=\"BO\">Bolivia, Plurinational State of</option>\r\n                  <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\r\n                  <option value=\"BA\">Bosnia and Herzegovina</option>\r\n                  <option value=\"BW\">Botswana</option>\r\n                  <option value=\"BV\">Bouvet Island</option>\r\n                  <option value=\"BR\">Brazil</option>\r\n                  <option value=\"IO\">British Indian Ocean Territory</option>\r\n                  <option value=\"BN\">Brunei Darussalam</option>\r\n                  <option value=\"BG\">Bulgaria</option>\r\n                  <option value=\"BF\">Burkina Faso</option>\r\n                  <option value=\"BI\">Burundi</option>\r\n                  <option value=\"KH\">Cambodia</option>\r\n                  <option value=\"CM\">Cameroon</option>\r\n                  <option value=\"CA\">Canada</option>\r\n                  <option value=\"CV\">Cape Verde</option>\r\n                  <option value=\"KY\">Cayman Islands</option>\r\n                  <option value=\"CF\">Central African Republic</option>\r\n                  <option value=\"TD\">Chad</option>\r\n                  <option value=\"CL\">Chile</option>\r\n                  <option value=\"CN\">China</option>\r\n                  <option value=\"CX\">Christmas Island</option>\r\n                  <option value=\"CC\">Cocos (Keeling) Islands</option>\r\n                  <option value=\"CO\">Colombia</option>\r\n                  <option value=\"KM\">Comoros</option>\r\n                  <option value=\"CG\">Congo</option>\r\n                  <option value=\"CD\">\r\n                    Congo, the Democratic Republic of the\r\n                  </option>\r\n                  <option value=\"CK\">Cook Islands</option>\r\n                  <option value=\"CR\">Costa Rica</option>\r\n                  <option value=\"CI\">Côte d'Ivoire</option>\r\n                  <option value=\"HR\">Croatia</option>\r\n                  <option value=\"CU\">Cuba</option>\r\n                  <option value=\"CW\">Curaçao</option>\r\n                  <option value=\"CY\">Cyprus</option>\r\n                  <option value=\"CZ\">Czech Republic</option>\r\n                  <option value=\"DK\">Denmark</option>\r\n                  <option value=\"DJ\">Djibouti</option>\r\n                  <option value=\"DM\">Dominica</option>\r\n                  <option value=\"DO\">Dominican Republic</option>\r\n                  <option value=\"EC\">Ecuador</option>\r\n                  <option value=\"EG\">Egypt</option>\r\n                  <option value=\"SV\">El Salvador</option>\r\n                  <option value=\"GQ\">Equatorial Guinea</option>\r\n                  <option value=\"ER\">Eritrea</option>\r\n                  <option value=\"EE\">Estonia</option>\r\n                  <option value=\"ET\">Ethiopia</option>\r\n                  <option value=\"FK\">Falkland Islands (Malvinas)</option>\r\n                  <option value=\"FO\">Faroe Islands</option>\r\n                  <option value=\"FJ\">Fiji</option>\r\n                  <option value=\"FI\">Finland</option>\r\n                  <option value=\"FR\">France</option>\r\n                  <option value=\"GF\">French Guiana</option>\r\n                  <option value=\"PF\">French Polynesia</option>\r\n                  <option value=\"TF\">French Southern Territories</option>\r\n                  <option value=\"GA\">Gabon</option>\r\n                  <option value=\"GM\">Gambia</option>\r\n                  <option value=\"GE\">Georgia</option>\r\n                  <option value=\"DE\">Germany</option>\r\n                  <option value=\"GH\">Ghana</option>\r\n                  <option value=\"GI\">Gibraltar</option>\r\n                  <option value=\"GR\">Greece</option>\r\n                  <option value=\"GL\">Greenland</option>\r\n                  <option value=\"GD\">Grenada</option>\r\n                  <option value=\"GP\">Guadeloupe</option>\r\n                  <option value=\"GU\">Guam</option>\r\n                  <option value=\"GT\">Guatemala</option>\r\n                  <option value=\"GG\">Guernsey</option>\r\n                  <option value=\"GN\">Guinea</option>\r\n                  <option value=\"GW\">Guinea-Bissau</option>\r\n                  <option value=\"GY\">Guyana</option>\r\n                  <option value=\"HT\">Haiti</option>\r\n                  <option value=\"HM\">Heard Island and McDonald Islands</option>\r\n                  <option value=\"VA\">Holy See (Vatican City State)</option>\r\n                  <option value=\"HN\">Honduras</option>\r\n                  <option value=\"HK\">Hong Kong</option>\r\n                  <option value=\"HU\">Hungary</option>\r\n                  <option value=\"IS\">Iceland</option>\r\n                  <option value=\"IN\">India</option>\r\n                  <option value=\"ID\">Indonesia</option>\r\n                  <option value=\"IR\">Iran, Islamic Republic of</option>\r\n                  <option value=\"IQ\">Iraq</option>\r\n                  <option value=\"IE\">Ireland</option>\r\n                  <option value=\"IM\">Isle of Man</option>\r\n                  <option value=\"IL\">Israel</option>\r\n                  <option value=\"IT\">Italy</option>\r\n                  <option value=\"JM\">Jamaica</option>\r\n                  <option value=\"JP\">Japan</option>\r\n                  <option value=\"JE\">Jersey</option>\r\n                  <option value=\"JO\">Jordan</option>\r\n                  <option value=\"KZ\">Kazakhstan</option>\r\n                  <option value=\"KE\">Kenya</option>\r\n                  <option value=\"KI\">Kiribati</option>\r\n                  <option value=\"KP\">\r\n                    Korea, Democratic People's Republic of\r\n                  </option>\r\n                  <option value=\"KR\">Korea, Republic of</option>\r\n                  <option value=\"KW\">Kuwait</option>\r\n                  <option value=\"KG\">Kyrgyzstan</option>\r\n                  <option value=\"LA\">Lao People's Democratic Republic</option>\r\n                  <option value=\"LV\">Latvia</option>\r\n                  <option value=\"LB\">Lebanon</option>\r\n                  <option value=\"LS\">Lesotho</option>\r\n                  <option value=\"LR\">Liberia</option>\r\n                  <option value=\"LY\">Libya</option>\r\n                  <option value=\"LI\">Liechtenstein</option>\r\n                  <option value=\"LT\">Lithuania</option>\r\n                  <option value=\"LU\">Luxembourg</option>\r\n                  <option value=\"MO\">Macao</option>\r\n                  <option value=\"MK\">\r\n                    Macedonia, the former Yugoslav Republic of\r\n                  </option>\r\n                  <option value=\"MG\">Madagascar</option>\r\n                  <option value=\"MW\">Malawi</option>\r\n                  <option value=\"MY\">Malaysia</option>\r\n                  <option value=\"MV\">Maldives</option>\r\n                  <option value=\"ML\">Mali</option>\r\n                  <option value=\"MT\">Malta</option>\r\n                  <option value=\"MH\">Marshall Islands</option>\r\n                  <option value=\"MQ\">Martinique</option>\r\n                  <option value=\"MR\">Mauritania</option>\r\n                  <option value=\"MU\">Mauritius</option>\r\n                  <option value=\"YT\">Mayotte</option>\r\n                  <option value=\"MX\">Mexico</option>\r\n                  <option value=\"FM\">Micronesia, Federated States of</option>\r\n                  <option value=\"MD\">Moldova, Republic of</option>\r\n                  <option value=\"MC\">Monaco</option>\r\n                  <option value=\"MN\">Mongolia</option>\r\n                  <option value=\"ME\">Montenegro</option>\r\n                  <option value=\"MS\">Montserrat</option>\r\n                  <option value=\"MA\">Morocco</option>\r\n                  <option value=\"MZ\">Mozambique</option>\r\n                  <option value=\"MM\">Myanmar</option>\r\n                  <option value=\"NA\">Namibia</option>\r\n                  <option value=\"NR\">Nauru</option>\r\n                  <option value=\"NP\">Nepal</option>\r\n                  <option value=\"NL\">Netherlands</option>\r\n                  <option value=\"NC\">New Caledonia</option>\r\n                  <option value=\"NZ\">New Zealand</option>\r\n                  <option value=\"NI\">Nicaragua</option>\r\n                  <option value=\"NE\">Niger</option>\r\n                  <option value=\"NG\">Nigeria</option>\r\n                  <option value=\"NU\">Niue</option>\r\n                  <option value=\"NF\">Norfolk Island</option>\r\n                  <option value=\"MP\">Northern Mariana Islands</option>\r\n                  <option value=\"NO\">Norway</option>\r\n                  <option value=\"OM\">Oman</option>\r\n                  <option value=\"PK\">Pakistan</option>\r\n                  <option value=\"PW\">Palau</option>\r\n                  <option value=\"PS\">Palestinian Territory, Occupied</option>\r\n                  <option value=\"PA\">Panama</option>\r\n                  <option value=\"PG\">Papua New Guinea</option>\r\n                  <option value=\"PY\">Paraguay</option>\r\n                  <option value=\"PE\">Peru</option>\r\n                  <option value=\"PH\">Philippines</option>\r\n                  <option value=\"PN\">Pitcairn</option>\r\n                  <option value=\"PL\">Poland</option>\r\n                  <option value=\"PT\">Portugal</option>\r\n                  <option value=\"PR\">Puerto Rico</option>\r\n                  <option value=\"QA\">Qatar</option>\r\n                  <option value=\"RE\">Réunion</option>\r\n                  <option value=\"RO\">Romania</option>\r\n                  <option value=\"RU\">Russian Federation</option>\r\n                  <option value=\"RW\">Rwanda</option>\r\n                  <option value=\"BL\">Saint Barthélemy</option>\r\n                  <option value=\"SH\">\r\n                    Saint Helena, Ascension and Tristan da Cunha\r\n                  </option>\r\n                  <option value=\"KN\">Saint Kitts and Nevis</option>\r\n                  <option value=\"LC\">Saint Lucia</option>\r\n                  <option value=\"MF\">Saint Martin (French part)</option>\r\n                  <option value=\"PM\">Saint Pierre and Miquelon</option>\r\n                  <option value=\"VC\">Saint Vincent and the Grenadines</option>\r\n                  <option value=\"WS\">Samoa</option>\r\n                  <option value=\"SM\">San Marino</option>\r\n                  <option value=\"ST\">Sao Tome and Principe</option>\r\n                  <option value=\"SA\">Saudi Arabia</option>\r\n                  <option value=\"SN\">Senegal</option>\r\n                  <option value=\"RS\">Serbia</option>\r\n                  <option value=\"SC\">Seychelles</option>\r\n                  <option value=\"SL\">Sierra Leone</option>\r\n                  <option value=\"SG\">Singapore</option>\r\n                  <option value=\"SX\">Sint Maarten (Dutch part)</option>\r\n                  <option value=\"SK\">Slovakia</option>\r\n                  <option value=\"SI\">Slovenia</option>\r\n                  <option value=\"SB\">Solomon Islands</option>\r\n                  <option value=\"SO\">Somalia</option>\r\n                  <option value=\"ZA\">South Africa</option>\r\n                  <option value=\"GS\">\r\n                    South Georgia and the South Sandwich Islands\r\n                  </option>\r\n                  <option value=\"SS\">South Sudan</option>\r\n                  <option value=\"ES\">Spain</option>\r\n                  <option value=\"LK\">Sri Lanka</option>\r\n                  <option value=\"SD\">Sudan</option>\r\n                  <option value=\"SR\">Suriname</option>\r\n                  <option value=\"SJ\">Svalbard and Jan Mayen</option>\r\n                  <option value=\"SZ\">Swaziland</option>\r\n                  <option value=\"SE\">Sweden</option>\r\n                  <option value=\"CH\">Switzerland</option>\r\n                  <option value=\"SY\">Syrian Arab Republic</option>\r\n                  <option value=\"TW\">Taiwan, Province of China</option>\r\n                  <option value=\"TJ\">Tajikistan</option>\r\n                  <option value=\"TZ\">Tanzania, United Republic of</option>\r\n                  <option value=\"TH\">Thailand</option>\r\n                  <option value=\"TL\">Timor-Leste</option>\r\n                  <option value=\"TG\">Togo</option>\r\n                  <option value=\"TK\">Tokelau</option>\r\n                  <option value=\"TO\">Tonga</option>\r\n                  <option value=\"TT\">Trinidad and Tobago</option>\r\n                  <option value=\"TN\">Tunisia</option>\r\n                  <option value=\"TR\">Turkey</option>\r\n                  <option value=\"TM\">Turkmenistan</option>\r\n                  <option value=\"TC\">Turks and Caicos Islands</option>\r\n                  <option value=\"TV\">Tuvalu</option>\r\n                  <option value=\"UG\">Uganda</option>\r\n                  <option value=\"UA\">Ukraine</option>\r\n                  <option value=\"AE\">United Arab Emirates</option>\r\n                  <option value=\"GB\">United Kingdom</option>\r\n                  <option value=\"US\">United States</option>\r\n                  <option value=\"UM\">\r\n                    United States Minor Outlying Islands\r\n                  </option>\r\n                  <option value=\"UY\">Uruguay</option>\r\n                  <option value=\"UZ\">Uzbekistan</option>\r\n                  <option value=\"VU\">Vanuatu</option>\r\n                  <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\r\n                  <option value=\"VN\">Viet Nam</option>\r\n                  <option value=\"VG\">Virgin Islands, British</option>\r\n                  <option value=\"VI\">Virgin Islands, U.S.</option>\r\n                  <option value=\"WF\">Wallis and Futuna</option>\r\n                  <option value=\"EH\">Western Sahara</option>\r\n                  <option value=\"YE\">Yemen</option>\r\n                  <option value=\"ZM\">Zambia</option>\r\n                  <option value=\"ZW\">Zimbabwe</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group>\r\n                <Form.Label htmlFor=\"addressLine1\">Address Line 1*</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Address Line 1\"\r\n                  id=\"addressLine1\"\r\n                  onChange={(e) => this.updateDeliverTo(e)}\r\n                  value={this.state.deliverTo.addressline1}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label htmlFor=\"email\">Email*</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Ex . john@john.com\"\r\n                  id=\"email\"\r\n                  onChange={(e) => this.updateDeliverTo(e)}\r\n                  value={this.state.deliverTo.email}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label htmlFor=\"county\">County*</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"County\"\r\n                  id=\"county\"\r\n                  onChange={(e) => this.updateDeliverTo(e)}\r\n                  value={this.state.deliverTo.county}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label htmlFor=\"postCode\">Post Code*</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Post Code\"\r\n                  id=\"postCode\"\r\n                  onChange={(e) => this.updateDeliverTo(e)}\r\n                  value={this.state.deliverTo.postCode}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {this.state.formError === true ? (\r\n            <div id=\"error-div\">\r\n              <p className=\"text-center\">\r\n                Please fill in required fields. All fields are required.\r\n              </p>\r\n            </div>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {this.state.emailError === true ? (\r\n            <div id=\"error-div\">\r\n              <p className=\"text-center\">Please enter a valid email.</p>\r\n            </div>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          <div className=\"text-center\">\r\n            <button onClick={(e) => this.checkOut(e)} id=\"check-out\">\r\n              Proceed to payment\r\n            </button>\r\n          </div>\r\n          {this.state.showPayPal === true ? (\r\n            <Paypalpayment\r\n              total={this.props.total}\r\n              subTotal={this.props.subTotal}\r\n              fullName={\r\n                this.state.deliverTo.title +\r\n                ' ' +\r\n                this.state.deliverTo.firstName +\r\n                ' ' +\r\n                this.state.deliverTo.lastName\r\n              }\r\n              addressLine1={this.state.deliverTo.addressLine1}\r\n              city={this.state.deliverTo.county}\r\n              postCode={this.state.deliverTo.postCode}\r\n              email={this.state.deliverTo.email}\r\n              productId={this.props.productId}\r\n              sizeId={this.props.sizeId}\r\n              quantity={this.props.quantity}\r\n              stockId={this.props.stockId}\r\n              size={this.props.size}\r\n              currentQuantity={this.props.currentQuantity}\r\n              id={this.props.id}\r\n            />\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Checkoutasguest\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\login\\Login.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\account\\RecentOrders.jsx",["236","237"],"import React, { Component } from 'react'\r\nimport { Container, Row, Col, Card, Alert } from 'react-bootstrap'\r\nimport { findAllInRenderedTree } from 'react-dom/test-utils'\r\nimport '../../css/RecentOrders.css'\r\n\r\nclass RecentOrders extends Component {\r\n  state = {\r\n    recentOrdersEmpty: {},\r\n    recentOrdersProducts: [],\r\n    quantity: 1,\r\n    alert: false,\r\n    errorAlert: false,\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const response = await fetch(\r\n      `http://localhost:3003/users/user-order/${localStorage['userId']}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      },\r\n    )\r\n\r\n    const recentOrders = await response.json()\r\n\r\n    if (recentOrders.message === 'No Order Available') {\r\n      this.setState({ recentOrdersEmpty: recentOrders.message })\r\n    } else {\r\n      this.setState({ recentOrdersProducts: recentOrders.products })\r\n    }\r\n  }\r\n  reOrderItem = async (\r\n    id,\r\n    productImage,\r\n    productName,\r\n    productSize,\r\n    productColor,\r\n    productPrice,\r\n  ) => {\r\n    try {\r\n      const productDetails = {\r\n        productId: id,\r\n        quantity: this.state.quantity,\r\n        image: productImage,\r\n        name: productName,\r\n        size: productSize,\r\n        color: productColor,\r\n        price: parseInt(productPrice),\r\n\r\n        userId: localStorage['userId'],\r\n      }\r\n      let response = await fetch(\r\n        `http://localhost:3003/cart/check-out-as-guest`,\r\n        {\r\n          method: 'POST',\r\n          body: JSON.stringify(productDetails),\r\n          headers: {\r\n            'Content-Type': 'Application/json',\r\n          },\r\n        },\r\n      )\r\n      if (response.ok) {\r\n        const createPriceResponse = await fetch(\r\n          'http://localhost:3003/payment/create-product-price',\r\n          {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n              userId: localStorage['userId'],\r\n              productName: productName,\r\n              productPrice: parseInt(productPrice * 100),\r\n              productId: id,\r\n              quantity: this.state.quantity,\r\n            }),\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          },\r\n        )\r\n        if (createPriceResponse.ok) {\r\n          this.setState({ alert: true })\r\n          setTimeout(() => {\r\n            this.setState({\r\n              alert: false,\r\n            })\r\n          }, 1200)\r\n        }\r\n      } else {\r\n        this.setState({ errorAlert: true })\r\n        setTimeout(() => {\r\n          this.setState({\r\n            errorAlert: false,\r\n          })\r\n        }, 1200)\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container className=\"pt-5\">\r\n          <h3 className=\"text-center pb-3\">Your recent orders</h3>\r\n          {this.state.recentOrdersProducts.length === 0 ? (\r\n            <div>\r\n              <h5\r\n                className=\"text-center mb-5 mt-5\"\r\n                style={{ fontSize: '35px' }}\r\n              >\r\n                No Recent Orders To Display\r\n              </h5>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              {this.state.recentOrdersProducts.map((product, key) => {\r\n                return (\r\n                  <Row className=\"gutters-sm\" style={{ marginBottom: '2rem' }}>\r\n                    <Col md={4} className=\"mb-3\">\r\n                      <Card>\r\n                        <Card.Body>\r\n                          <div className=\"d-flex flex-column align-items-center text-center\">\r\n                            <img\r\n                              src={product.image}\r\n                              alt=\"user-picture\"\r\n                              class=\"rounded-circle\"\r\n                              width=\"150\"\r\n                            ></img>\r\n                          </div>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Col>\r\n                    <Col md={8}>\r\n                      <Card>\r\n                        <Card.Body>\r\n                          <Row style={{ marginTop: '1rem' }}>\r\n                            <Col sm={3}></Col>\r\n                            <Col sm={9}>\r\n                              <h5>{product.name}</h5>\r\n                            </Col>\r\n                          </Row>\r\n                          <hr></hr>\r\n\r\n                          <Row style={{ marginTop: '1rem' }}>\r\n                            <Col sm={3}>\r\n                              <h6 class=\"mb-0\">Price</h6>\r\n                            </Col>\r\n                            <Col sm={9}>£ {product.price}</Col>\r\n                          </Row>\r\n                          <Row style={{ marginTop: '1rem' }}>\r\n                            <Col sm={3}>\r\n                              <h6 class=\"mb-0\">Size</h6>\r\n                            </Col>\r\n                            <Col sm={9}>{product.size}</Col>\r\n                          </Row>\r\n                          <Row style={{ marginTop: '1rem' }}>\r\n                            <Col sm={3}>\r\n                              <h6 class=\"mb-0\">Color</h6>\r\n                            </Col>\r\n                            <Col sm={9}>{product.color}</Col>\r\n                          </Row>\r\n                          <hr></hr>\r\n                        </Card.Body>\r\n                        <div\r\n                          className=\"text-center\"\r\n                          style={{\r\n                            marginBottom: '2rem',\r\n                            marginTop: '1rem',\r\n                            width: '20%',\r\n                          }}\r\n                        >\r\n                          <button\r\n                            id=\"reorder-button\"\r\n                            onClick={() =>\r\n                              this.reOrderItem(\r\n                                product._id,\r\n                                product.image,\r\n                                product.name,\r\n                                product.size,\r\n                                product.color,\r\n                                product.price,\r\n                              )\r\n                            }\r\n                          >\r\n                            Reorder\r\n                          </button>\r\n                        </div>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                )\r\n              })}\r\n            </div>\r\n          )}\r\n          {this.state.alert === true ? (\r\n            <Alert id=\"alert\">\r\n              <h5 className=\"text-center\">Item Added To Cart</h5>\r\n            </Alert>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </Container>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RecentOrders\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\wishlist\\WishList.jsx",["238"],"import React, { Component } from 'react'\r\nimport { Container, Row, Col, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport '../../css/Account.css'\r\n\r\nclass WishList extends Component {\r\n  state = {\r\n    noWishlist: {},\r\n    wishList: [],\r\n    noUserSignedIn: false,\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const guestToken = sessionStorage.getItem('guestToken')\r\n    const userId = sessionStorage.getItem('userId')\r\n    if (userId) {\r\n      const response = await fetch(`http://localhost:3003/wishlist/${userId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      const wishList = await response.json()\r\n      if (wishList.hasOwnProperty('message')) {\r\n        this.setState({\r\n          noWishlist: wishList,\r\n        })\r\n      } else {\r\n        this.setState({\r\n          wishList: wishList.products,\r\n        })\r\n      }\r\n    } else if (guestToken) {\r\n      this.setState({\r\n        noUserSignedIn: true,\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container className=\"pt-5\">\r\n          {this.state.noUserSignedIn === true ? (\r\n            <div\r\n              className=\"text-center\"\r\n              style={{ marginTop: '9rem', marginBottom: '9rem' }}\r\n            >\r\n              <h3>\r\n                You Are Not Logged In, Please Login Or Signup {''}\r\n                <Link to=\"/login\" id=\"login-link\">\r\n                  here\r\n                </Link>{' '}\r\n                to add items to wishlist.\r\n              </h3>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              {' '}\r\n              {this.state.noWishlist.hasOwnProperty('message') ? (\r\n                <div\r\n                  className=\"text-center\"\r\n                  style={{ marginTop: '10rem', marginBottom: '5rem' }}\r\n                >\r\n                  <h3>Wishlist is empty, please add items</h3>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  {this.state.wishList.map((item, key) => {\r\n                    return (\r\n                      <Row\r\n                        className=\"gutters-sm\"\r\n                        style={{ marginBottom: '2rem' }}\r\n                      >\r\n                        <Col md={4} className=\"mb-3\">\r\n                          <Card>\r\n                            <Card.Body>\r\n                              <div className=\"d-flex flex-column align-items-center text-center\">\r\n                                <img\r\n                                  src={item.image}\r\n                                  alt=\"user-picture\"\r\n                                  width=\"250\"\r\n                                ></img>\r\n                              </div>\r\n                            </Card.Body>\r\n                          </Card>\r\n                        </Col>\r\n                        <Col md={8}>\r\n                          <Card>\r\n                            <Card.Body>\r\n                              <Row style={{ marginTop: '1rem' }}>\r\n                                <Col sm={3}></Col>\r\n                                <Col sm={9}>\r\n                                  <h5>{item.name}</h5>\r\n                                </Col>\r\n                              </Row>\r\n\r\n                              <Row style={{ marginTop: '1rem' }}>\r\n                                <Col sm={3}>\r\n                                  <h6 class=\"mb-0\">Price</h6>\r\n                                </Col>\r\n                                <Col sm={9}>£ {item.price}</Col>\r\n                              </Row>\r\n                            </Card.Body>\r\n                            {/* <div\r\n                          className=\"text-center\"\r\n                          style={{\r\n                            marginBottom: \"2rem\",\r\n                            marginTop: \"1rem\",\r\n                            width: \"20%\",\r\n                          }}\r\n                        >\r\n                          <button\r\n                            onClick={() =>\r\n                              this.reOrderItem(\r\n                                product._id,\r\n                                product.image,\r\n                                product.name,\r\n                                product.size,\r\n                                product.color,\r\n                                product.price\r\n                              )\r\n                            }\r\n                          >\r\n                            Reorder\r\n                          </button>\r\n                        </div> */}\r\n                          </Card>\r\n                        </Col>\r\n                      </Row>\r\n                    )\r\n                  })}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Container>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WishList\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\navbar\\NavSocialMedia.jsx",["239","240","241","242","243","244"],"import React, { Component } from 'react'\r\nimport jpglogo from '../../assets/logo2.png'\r\nimport '../../css/NavSocialMedia.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faUser,\r\n  faStar,\r\n  faCrosshairs,\r\n  faShoppingCart,\r\n  faHome,\r\n  faLock,\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport { Link } from 'react-router-dom'\r\nimport LittleCart from '../LittleCart'\r\n\r\nclass NavSocialMedia extends Component {\r\n  state = {\r\n    displayLittleCart: false,\r\n    cartLength: sessionStorage.getItem('cart_items'),\r\n  }\r\n\r\n  displayCart = () => {\r\n    this.setState({ displayLittleCart: true })\r\n  }\r\n  render() {\r\n    return (\r\n      <header id=\"header\">\r\n        <div className=\"header_top\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"d-flex justify-content-between social-icons pull-right\">\r\n                <ul>\r\n                  <li>\r\n                    <a\r\n                      href=\"https://www.facebook.com/johnpaulstephenofficial\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      <i className=\"fa fa-facebook\"></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\"https://twitter.com/JohnPaulStephe8\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      <i className=\"fa fa-twitter\"></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\" https://www.youtube.com/channel/UC-fAzdzdg7gR8RzsSQkq43Q\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      <i class=\"fa fa-youtube\"></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\" https://www.instagram.com/johnpaulstephen_jps/\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      <i class=\"fa fa-instagram\"></i>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"header-middle\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4 clearfix\">\r\n                <div className=\"logo pull-left\">\r\n                  <Link to={'/'}>\r\n                    <img src={jpglogo} alt=\"logo\" id=\"logo-image\" />\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-8 clearfix\">\r\n                <div className=\"d-flex flex-row shop-menu clearfix pull-right\">\r\n                  <ul>\r\n                    {/* <li>\r\n                      <Link to=\"/account\">\r\n                        <FontAwesomeIcon\r\n                          icon={faUser}\r\n                          className=\"navbar-icon\"\r\n                        />{' '}\r\n                        Account\r\n                      </Link>\r\n                    </li>\r\n                    <li>\r\n                      <Link to=\"/wishlist\">\r\n                        <FontAwesomeIcon\r\n                          icon={faStar}\r\n                          className=\"navbar-icon\"\r\n                        />\r\n                        Wishlist\r\n                      </Link>\r\n                    </li> */}\r\n                    <Link to=\"/\" style={{ color: '#696763' }}>\r\n                      <li>\r\n                        <FontAwesomeIcon icon={faHome} /> Home\r\n                      </li>\r\n                    </Link>\r\n                    <Link to=\"/cart\" style={{ color: '#696763' }}>\r\n                      <li>\r\n                        <FontAwesomeIcon\r\n                          icon={faShoppingCart}\r\n                          className=\"navbar-icon\"\r\n                        />{' '}\r\n                        Cart\r\n                      </li>\r\n                      <span className=\"badge badge-warning\" id=\"lblCartCount\">\r\n                        {this.props.cartLength}\r\n                      </span>\r\n                    </Link>\r\n                    {/* <li>\r\n                      <Link to={'/login'}>\r\n                        <FontAwesomeIcon\r\n                          icon={faLock}\r\n                          className=\"navbar-icon\"\r\n                        />{' '}\r\n                        Login\r\n                      </Link>\r\n                    </li> */}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {this.state.displayLittleCart === true ? (\r\n              <div>\r\n                <LittleCart />\r\n              </div>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavSocialMedia\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\Details.jsx",["245","246","247","248"],"import React, { Component } from 'react'\r\nimport '../../css/Details.css'\r\n\r\nimport { Row, Col, Container, Alert } from 'react-bootstrap'\r\n\r\nimport Review from './Review'\r\n\r\nclass Details extends Component {\r\n  state = {\r\n    details: {},\r\n    id: '',\r\n    quantity: 1,\r\n    imageUrl: '',\r\n    alert: false,\r\n    errorAlert: false,\r\n    sizeSelected: 'None',\r\n    description: [],\r\n    sizesFromApi: [],\r\n    sizeToBeSent: '',\r\n    showDescription: true,\r\n    showDetails: false,\r\n  }\r\n\r\n  showDescription = () => {\r\n    this.setState({\r\n      showDescription: true,\r\n      showDetails: false,\r\n    })\r\n  }\r\n  showDetails = () => {\r\n    this.setState({\r\n      showDescription: false,\r\n      showDetails: true,\r\n    })\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const sizeArr = []\r\n    const desc = []\r\n    const productId = this.props.match.params.productId\r\n    const response = await fetch(\r\n      `https://mr-oyebode-backend-yqavh.ondigitalocean.app/product/${productId}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      },\r\n    )\r\n    const details = await response.json()\r\n\r\n    details.description.map((des) => {\r\n      return desc.push(des)\r\n    })\r\n\r\n    this.setState({\r\n      details,\r\n      imageUrl: details.imageUrl[0].url,\r\n      sizesFromApi: sizeArr,\r\n      description: desc,\r\n      id: productId,\r\n      sizeToBeSent: sizeArr.join(''),\r\n    })\r\n    console.log(this.state.imageUrl)\r\n\r\n    this.getReviews()\r\n  }\r\n  createProductPrice = async (productName, productPrice, id) => {\r\n    const guestToken = sessionStorage.getItem('guestToken')\r\n    const createPriceResponse = await fetch(\r\n      'https://mr-oyebode-backend-yqavh.ondigitalocean.app/payment/create-product-price',\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          userId: guestToken,\r\n          productName: productName,\r\n          productPrice: parseInt(productPrice * 100),\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      },\r\n    )\r\n  }\r\n\r\n  getReviews = async () => {\r\n    const response = await fetch(\r\n      `https://mr-oyebode-backend-yqavh.ondigitalocean.app/reviews/${this.props.match.params.productId}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      },\r\n    )\r\n    const reviews = await response.json()\r\n    this.setState({\r\n      reviews,\r\n    })\r\n  }\r\n  addCart = async (\r\n    id,\r\n    productImage,\r\n    productName,\r\n    productPrice,\r\n    productStock,\r\n  ) => {\r\n    try {\r\n      const guestToken = sessionStorage.getItem('guestToken')\r\n      const userId = sessionStorage.getItem('userId')\r\n      if (guestToken) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n          image: productImage,\r\n          name: productName,\r\n          price: parseInt(productPrice),\r\n          stock: productStock,\r\n          userId: guestToken,\r\n        }\r\n        let response = await fetch(\r\n          `https://mr-oyebode-backend-yqavh.ondigitalocean.app/cart/check-out-as-guest`,\r\n          {\r\n            method: 'POST',\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              'Content-Type': 'Application/json',\r\n            },\r\n          },\r\n        )\r\n        if (response.ok) {\r\n          this.createProductPrice(productName, productPrice, id)\r\n          this.props.show()\r\n          setTimeout(() => {\r\n            this.props.close()\r\n          }, 1200)\r\n          this.props.getCart()\r\n        } else {\r\n          this.props.showErrorModal()\r\n          setTimeout(() => {\r\n            this.props.closeErrorModal()\r\n          }, 1200)\r\n        }\r\n      } else if (userId) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n          image: productImage,\r\n          name: productName,\r\n          price: parseInt(productPrice),\r\n          stock: productStock,\r\n          userId: userId,\r\n        }\r\n        let response = await fetch(\r\n          `https://mr-oyebode-backend-yqavh.ondigitalocean.app/cart/check-out-as-guest`,\r\n          {\r\n            method: 'POST',\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              'Content-Type': 'Application/json',\r\n            },\r\n          },\r\n        )\r\n        if (response.ok) {\r\n          this.createProductPrice(productName, productPrice, id)\r\n          this.props.show()\r\n          setTimeout(() => {\r\n            this.props.close()\r\n          }, 1200)\r\n          this.props.getCart()\r\n        } else {\r\n          this.props.showErrorModal()\r\n          setTimeout(() => {\r\n            this.props.closeErrorModal()\r\n          }, 1200)\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Container style={{ marginTop: '2rem', marginBottom: '3rem' }}>\r\n        <Row>\r\n          <Col md={4}>\r\n            <div className=\"view-product\">\r\n              <img src={this.state.imageUrl} />\r\n            </div>\r\n          </Col>\r\n          <Col sm={8}>\r\n            <div className=\"product-information\">\r\n              <h1 className=\"text-center\">{this.state.details.name}</h1>\r\n              <div className=\"d-flex justify-content-center mt-5 mb-5\">\r\n                <div id=\"details-description\">\r\n                  <p\r\n                    onClick={() => this.showDescription()}\r\n                    className={\r\n                      this.state.showDescription === true\r\n                        ? 'activeDesctiption-details'\r\n                        : 'inactiveDesctiption-details'\r\n                    }\r\n                    style={{ cursor: 'pointer' }}\r\n                  >\r\n                    DESCRIPTION\r\n                  </p>\r\n                  <p\r\n                    onClick={() => this.showDetails()}\r\n                    className={\r\n                      this.state.showDetails === true\r\n                        ? 'activeDesctiption-details'\r\n                        : 'inactiveDesctiption-details'\r\n                    }\r\n                    style={{ cursor: 'pointer', fontWeight: '500' }}\r\n                    id=\"details-para\"\r\n                  >\r\n                    DETAILS\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              {this.state.showDescription === true ? (\r\n                <div>\r\n                  {this.state.description.map((des) => {\r\n                    return (\r\n                      <p className=\"text-center\" id=\"description-text\">\r\n                        {des}\r\n                      </p>\r\n                    )\r\n                  })}\r\n                </div>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n              {this.state.showDetails === true ? (\r\n                <div>\r\n                  <p className=\"text-center\" id=\"description-text\">\r\n                    100% ringspun combed cotton\r\n                  </p>\r\n                  <p className=\"text-center\" id=\"description-text\">\r\n                    Shoulder to shoulder neck tape\r\n                  </p>\r\n                  <p className=\"text-center\" id=\"description-text\">\r\n                    Two-layer neck rib with elastane Double stitched\r\n                  </p>\r\n                  <p className=\"text-center\" id=\"description-text\">\r\n                    Double preshrunk cotton\r\n                  </p>\r\n                  <p className=\"text-center\" id=\"description-text\">\r\n                    Washable at 40 degrees\r\n                  </p>\r\n                </div>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n              <h1 className=\"text-center mt-5\" id=\"price-text\">\r\n                £ {this.state.details.price}\r\n              </h1>\r\n              <div className=\"d-flex justify-content-center\">\r\n                <button\r\n                  className=\"add-to-cart\"\r\n                  onClick={() =>\r\n                    this.addCart(\r\n                      this.state.details._id,\r\n                      this.state.imageUrl,\r\n                      this.state.details.name,\r\n                      this.state.details.price,\r\n                      this.state.details.stock,\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"fa fa-shopping-cart\"></i>\r\n                  Add to cart\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        {/* <Review id={this.props.match.params.productId} /> */}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Details\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\ProductDetailsCarousel.jsx",[],["249","250"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\Review.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Home.jsx",["251","252","253","254","255","256","257","258","259","260"],"import React, { Component, createRef } from 'react'\r\nimport Jumbo from './Jumbo'\r\nimport Products from './Products'\r\nimport cryptoRandomString from 'crypto-random-string'\r\nimport Notification from './Notification'\r\nimport Accessories from './Accessories'\r\nimport {\r\n  Alert,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Container,\r\n  Modal,\r\n  Button,\r\n} from 'react-bootstrap'\r\nimport '../../css/Home.css'\r\n\r\n// import { addCart } from \"../../Helpers/functions\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    guestToken: '',\r\n    itemsLength: '',\r\n    products: [],\r\n    accessories: [],\r\n    quantity: 1,\r\n    alert: true,\r\n    errorAlert: false,\r\n    wishListAlert: false,\r\n    wishListErrorAlert: false,\r\n    tShirtdisplay: false,\r\n    accessoriesDisplay: false,\r\n    displayAll: true,\r\n    initialSize: 'None',\r\n    showModal: false,\r\n  }\r\n\r\n  getCartLength = (token) => {\r\n    this.setState({\r\n      itemsLength: token,\r\n    })\r\n  }\r\n\r\n  add_to_cart_modal = createRef()\r\n  triggerModal = () => {\r\n    this.add_to_cart_modal.current.handleShow()\r\n  }\r\n  closeModal = () => {\r\n    this.add_to_cart_modal.current.handleClose()\r\n  }\r\n\r\n  getProducts = async () => {\r\n    const response = await fetch(\r\n      'https://mr-oyebode-backend-yqavh.ondigitalocean.app/product/',\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      },\r\n    )\r\n    const products = await response.json()\r\n\r\n    this.setState({\r\n      products,\r\n    })\r\n  }\r\n\r\n  // handleClose = () => {\r\n  //   // localStorage.removeItem('show_status')\r\n  //   this.setState({ showModal: false })\r\n  // }\r\n  // handleShow = () => this.setState({ showModal: true })\r\n\r\n  componentDidMount = async () => {\r\n    this.getProducts()\r\n    const userId = sessionStorage.getItem('userId')\r\n    const guestToken = sessionStorage.getItem('guestToken')\r\n    sessionStorage.setItem('cart_items', 0)\r\n    if (!userId && !guestToken) {\r\n      const guestToken = cryptoRandomString({ length: 24, type: 'hex' })\r\n      sessionStorage.setItem('guestToken', guestToken)\r\n    } else if (userId) {\r\n      sessionStorage.removeItem('guestToken')\r\n\r\n      this.getProducts()\r\n    }\r\n    // this.props.action(this.state.itemsLength)\r\n  }\r\n\r\n  createProductPrice = async (productName, productPrice, id) => {\r\n    const guestToken = sessionStorage.getItem('guestToken')\r\n    const createPriceResponse = await fetch(\r\n      'https://mr-oyebode-backend-yqavh.ondigitalocean.app/payment/create-product-price',\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          userId: guestToken,\r\n          productName: productName,\r\n          productPrice: parseInt(productPrice * 100),\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      },\r\n    )\r\n  }\r\n\r\n  addCart = async (\r\n    id,\r\n    productImage,\r\n    productName,\r\n    productColor,\r\n    productPrice,\r\n    productSizes,\r\n    productTotal,\r\n    productStock,\r\n  ) => {\r\n    try {\r\n      const guestToken = sessionStorage.getItem('guestToken')\r\n      const userId = sessionStorage.getItem('userId')\r\n      const cart_items = sessionStorage.getItem('cart_items')\r\n      if (guestToken) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n          image: productImage,\r\n          name: productName,\r\n          price: parseInt(productPrice),\r\n          stock: productStock,\r\n          userId: guestToken,\r\n        }\r\n        let response = await fetch(\r\n          `https://mr-oyebode-backend-yqavh.ondigitalocean.app/cart/check-out-as-guest`,\r\n          {\r\n            method: 'POST',\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              'Content-Type': 'Application/json',\r\n            },\r\n          },\r\n        )\r\n        if (response.ok) {\r\n          this.createProductPrice(productName, productPrice, id)\r\n          this.props.show()\r\n          setTimeout(() => {\r\n            this.props.close()\r\n          }, 1200)\r\n          this.props.getCart()\r\n        } else {\r\n          this.props.showErrorModal()\r\n          setTimeout(() => {\r\n            this.props.closeErrorModal()\r\n          }, 1200)\r\n        }\r\n      } else if (userId) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n          image: productImage,\r\n          name: productName,\r\n          price: parseInt(productPrice),\r\n          stock: productStock,\r\n          userId: userId,\r\n        }\r\n        let response = await fetch(\r\n          `https://mr-oyebode-backend-yqavh.ondigitalocean.app/cart/check-out-as-guest`,\r\n          {\r\n            method: 'POST',\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              'Content-Type': 'Application/json',\r\n            },\r\n          },\r\n        )\r\n        if (response.ok) {\r\n          this.props.show()\r\n          setTimeout(() => {\r\n            this.props.close()\r\n          }, 1200)\r\n          this.props.getCart()\r\n        } else {\r\n          this.props.showErrorModal()\r\n          setTimeout(() => {\r\n            this.props.closeErrorModal()\r\n          }, 1200)\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Jumbo />\r\n        {/* <Modal\r\n          show={this.state.showModal}\r\n          onHide={() => this.handleClose()}\r\n          id=\"modal-body\"\r\n        >\r\n          <Modal.Body>\r\n            <div>\r\n              <h3\r\n                className=\"text-right mb-5\"\r\n                onClick={() => this.handleClose()}\r\n                id=\"close-button\"\r\n              >\r\n                X\r\n              </h3>\r\n              <div className=\"mb-5\">\r\n                <p>\r\n                  We use cookies to improve user experience, and analyze website\r\n                  traffic. For these reasons, we may share your site usage data\r\n                  with our analytics partners. By clicking “Accept Cookies,” you\r\n                  consent to store on your device all the technologies described\r\n                  in our Cookie Policy.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <button\r\n              onClick={() => this.handleClose()}\r\n              className=\"modal-buttons\"\r\n            >\r\n              Accept\r\n            </button>\r\n            <button\r\n              onClick={() => this.handleClose()}\r\n              className=\"modal-buttons\"\r\n            >\r\n              Decline\r\n            </button>\r\n          </Modal.Footer>\r\n        </Modal> */}\r\n        <Container>\r\n          <div>\r\n            <Products\r\n              secondAction={this.getCartLength}\r\n              productsAsProps={this.state.products}\r\n              addToCartAsProps={(\r\n                id,\r\n                quantity,\r\n                productImage,\r\n                productName,\r\n                productSize,\r\n                productColor,\r\n                productPrice,\r\n                productStock,\r\n              ) =>\r\n                this.addCart(\r\n                  id,\r\n                  quantity,\r\n                  productImage,\r\n                  productName,\r\n                  productSize,\r\n                  productColor,\r\n                  productPrice,\r\n                  productStock,\r\n                )\r\n              }\r\n              addToWishListAsProps={(\r\n                id,\r\n                productImage,\r\n                productName,\r\n                productColor,\r\n                productPrice,\r\n              ) =>\r\n                this.addToWishList(\r\n                  id,\r\n                  productImage,\r\n                  productName,\r\n                  productColor,\r\n                  productPrice,\r\n                )\r\n              }\r\n            />\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Products.jsx",["261","262","263","264","265","266","267","268","269"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Jumbo.jsx",["270","271","272","273","274","275","276"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\SignUp.jsx",["277"],"import React, { Component } from 'react'\r\nimport { Form, Container, Row, Col, Alert } from 'react-bootstrap'\r\nimport CheckoutasGuest from './Checkoutasguest'\r\nimport '../../css/Signup.css'\r\nclass SignUp extends Component {\r\n  state = {\r\n    details: {\r\n      name: '',\r\n      email: '',\r\n      phoneNumber: '',\r\n      password: '',\r\n    },\r\n    alert: false,\r\n    errorAlert: false,\r\n    displayCheckOut: false,\r\n    signUpcompleted: false,\r\n  }\r\n\r\n  updateDetails = (event) => {\r\n    let details = this.state.details\r\n    let id = event.currentTarget.id\r\n    details[id] = event.currentTarget.value\r\n    this.setState({\r\n      details,\r\n    })\r\n  }\r\n\r\n  signUp = async (e) => {\r\n    e.preventDefault()\r\n    if (localStorage['userId']) {\r\n      const res = await fetch(\r\n        'https://mr-oyebode-backend-yqavh.ondigitalocean.app/users/register',\r\n        {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            userName: this.state.details.name,\r\n            email: this.state.details.email,\r\n            phoneNumber: this.state.details.phoneNumber,\r\n            password: this.state.details.password,\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        },\r\n      )\r\n      if (res.status !== 400) {\r\n        this.setState({\r\n          alert: true,\r\n        })\r\n        setTimeout(() => {\r\n          this.setState({\r\n            alert: false,\r\n            displayCheckOut: true,\r\n            signUpcompleted: true,\r\n          })\r\n        }, 1200)\r\n      } else if (res.status === 400) {\r\n        this.setState({\r\n          errorAlert: true,\r\n        })\r\n        setTimeout(() => {\r\n          this.setState({\r\n            errorAlert: false,\r\n          })\r\n        }, 1200)\r\n      }\r\n    } else if (localStorage['guestToken']) {\r\n      const res = await fetch(\r\n        `https://mr-oyebode-backend-yqavh.ondigitalocean.app/users/guest-token-already-exists/${localStorage['guestToken']}`,\r\n        {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            userName: this.state.details.name,\r\n            email: this.state.details.email,\r\n            phoneNumber: this.state.details.phoneNumber,\r\n            password: this.state.details.password,\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        },\r\n      )\r\n\r\n      if (res.status !== 400) {\r\n        this.setState({\r\n          alert: true,\r\n        })\r\n        setTimeout(() => {\r\n          this.setState({\r\n            alert: false,\r\n            displayCheckOut: true,\r\n            signUpcompleted: true,\r\n          })\r\n        }, 1200)\r\n      } else if (res.status === 400) {\r\n        this.setState({\r\n          errorAlert: true,\r\n        })\r\n        setTimeout(() => {\r\n          this.setState({\r\n            errorAlert: false,\r\n          })\r\n        }, 1200)\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.displayCheckOut === false ? (\r\n          <div>\r\n            <Form className=\"mt-3\">\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Label htmlFor=\"firstName\">Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Ex. John\"\r\n                      id=\"name\"\r\n                      onChange={(e) => this.updateDetails(e)}\r\n                      value={this.state.details.name}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                      placeholder=\"Ex: abcd@abc.com\"\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      onChange={(e) => this.updateDetails(e)}\r\n                      value={this.state.details.email}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Label htmlFor=\"phoneNumber\">Phone Number</Form.Label>\r\n                    <Form.Control\r\n                      placeholder=\"Ex: 070 0000 8000\"\r\n                      id=\"phoneNumber\"\r\n                      type=\"text\"\r\n                      onChange={(e) => this.updateDetails(e)}\r\n                      value={this.state.details.phoneNumber}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      onChange={(e) => this.updateDetails(e)}\r\n                      value={this.state.details.password}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <div className=\"text-center\">\r\n                <button onClick={(e) => this.signUp(e)} id=\"sign-up\">\r\n                  Sign up and proceed to checkout\r\n                </button>\r\n              </div>\r\n            </Form>\r\n            {this.state.alert === true ? (\r\n              <Alert id=\"alert\" className=\"mt-2\">\r\n                <h5 className=\"text-center\">Sign Up successful</h5>\r\n              </Alert>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n            {this.state.errorAlert === true ? (\r\n              <Alert id=\"alert\" className=\"mt-2\">\r\n                <h5 className=\"text-center\">Something went wrong...</h5>\r\n              </Alert>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <CheckoutasGuest />\r\n          </div>\r\n        )}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignUp\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Accessories.jsx",["278","279","280","281","282","283"],"import React, { Component } from 'react'\r\nimport '../../css/Products.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart, faPlusSquare } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  CardDeck,\r\n  Card,\r\n  Accordion,\r\n  Button,\r\n  Alert,\r\n} from 'react-bootstrap'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Accessories extends Component {\r\n  state = {\r\n    size: 'No size required',\r\n    color: 'No color required',\r\n    quantity: 1,\r\n    alert: false,\r\n    errorAlert: false,\r\n    wishListAlert: false,\r\n    wishListErrorAlert: false,\r\n  }\r\n\r\n  addCart = async (\r\n    id,\r\n    quantity,\r\n    productImage,\r\n    productName,\r\n    productSize,\r\n    productColor,\r\n    productPrice,\r\n    productSizes,\r\n  ) => {\r\n    try {\r\n      if (localStorage['guestToken']) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: quantity,\r\n          image: productImage,\r\n          name: productName,\r\n          size: productSize,\r\n          color: productColor,\r\n          price: parseInt(productPrice),\r\n          sizeFromClient: productSizes,\r\n          userId: localStorage['guestToken'],\r\n        }\r\n        let response = await fetch(\r\n          `http://localhost:3003/cart/check-out-as-guest`,\r\n          {\r\n            method: 'POST',\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              'Content-Type': 'Application/json',\r\n            },\r\n          },\r\n        )\r\n        if (response.ok) {\r\n          const createPriceResponse = await fetch(\r\n            'http://localhost:3003/payment/create-product-price',\r\n            {\r\n              method: 'POST',\r\n              body: JSON.stringify({\r\n                userId: localStorage['guestToken'],\r\n                productName: productName,\r\n                productPrice: parseInt(productPrice * 100),\r\n                productId: id,\r\n                quantity: this.state.quantity,\r\n              }),\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n            },\r\n          )\r\n          if (createPriceResponse.ok) {\r\n            this.setState({ alert: true })\r\n            setTimeout(() => {\r\n              this.setState({\r\n                alert: false,\r\n              })\r\n            }, 1200)\r\n          }\r\n        } else {\r\n          this.setState({ errorAlert: true })\r\n          setTimeout(() => {\r\n            this.setState({\r\n              errorAlert: false,\r\n            })\r\n          }, 1200)\r\n        }\r\n      } else if (localStorage['userId']) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n          image: productImage,\r\n          name: productName,\r\n          size: productSize,\r\n          color: productColor,\r\n          price: parseInt(productPrice),\r\n          sizeFromClient: productSizes,\r\n          userId: localStorage['userId'],\r\n        }\r\n        let response = await fetch(\r\n          `http://localhost:3003/cart/check-out-as-guest`,\r\n          {\r\n            method: 'POST',\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              'Content-Type': 'Application/json',\r\n            },\r\n          },\r\n        )\r\n        if (response.ok) {\r\n          const createPriceResponse = await fetch(\r\n            'http://localhost:3003/payment/create-product-price',\r\n            {\r\n              method: 'POST',\r\n              body: JSON.stringify({\r\n                userId: localStorage['userId'],\r\n                productName: productName,\r\n                productPrice: parseInt(productPrice * 100),\r\n                productId: id,\r\n                quantity: this.state.quantity,\r\n              }),\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n            },\r\n          )\r\n          if (createPriceResponse.ok) {\r\n            this.setState({ alert: true })\r\n            setTimeout(() => {\r\n              this.setState({\r\n                alert: false,\r\n              })\r\n            }, 1200)\r\n          }\r\n        } else {\r\n          this.setState({ errorAlert: true })\r\n          setTimeout(() => {\r\n            this.setState({\r\n              errorAlert: false,\r\n            })\r\n          }, 1200)\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div id=\"featured-text\">\r\n          <h2>Accessories</h2>\r\n        </div>\r\n\r\n        <CardDeck>\r\n          {this.props.accessoriesAsProps.map((prod) => {\r\n            return (\r\n              <div className=\"product-image-wrapper col-sm-4\">\r\n                <div className=\"single-products\">\r\n                  <div className=\"productinfo text-center\">\r\n                    <img src={prod.image} alt=\"\" />\r\n                    <h2>£ {prod.price}</h2>\r\n                    <p>{prod.name}</p>\r\n                    <a href=\"#\" className=\"btn btn-default add-to-cart\">\r\n                      <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                    </a>\r\n                  </div>\r\n                  <div className=\"product-overlay\">\r\n                    <div className=\"overlay-content\">\r\n                      <h2>£ {prod.price}</h2>\r\n                      <p>{prod.name}</p>\r\n                      <button\r\n                        onClick={() =>\r\n                          this.addCart(\r\n                            prod._id,\r\n                            this.state.quantity,\r\n                            prod.image,\r\n                            prod.name,\r\n                            this.state.size,\r\n                            this.state.color,\r\n                            prod.price,\r\n                          )\r\n                        }\r\n                        className=\"btn btn-default add-to-cart\"\r\n                      >\r\n                        <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"choose\">\r\n                  <ul className=\"nav nav-pills nav-justified\">\r\n                    <li\r\n                      onClick={() =>\r\n                        this.addToWishListAsProps(\r\n                          prod._id,\r\n                          prod.image,\r\n                          prod.name,\r\n                          prod.color,\r\n                          prod.price,\r\n                        )\r\n                      }\r\n                      style={{ cursor: 'pointer' }}\r\n                      id=\"add-to-wishlist\"\r\n                    >\r\n                      <FontAwesomeIcon icon={faHeart} className=\"fa-1x\" />\r\n                      Add to wishlist\r\n                    </li>\r\n                    <li className=\"\">\r\n                      <Link to={`/accessorydetails/${prod._id}`}>\r\n                        <FontAwesomeIcon\r\n                          icon={faPlusSquare}\r\n                          className=\"fa-1x\"\r\n                        />\r\n                        More details\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </CardDeck>\r\n        {this.state.alert === true ? (\r\n          <Alert id=\"alert\">Item added to cart</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {this.state.errorAlert === true ? (\r\n          <Alert id=\"alert\">Unable to add item to cart</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {this.state.wishListAlert === true ? (\r\n          <Alert id=\"alert\">Item added to wishlist</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {this.state.wishListErrorAlert === true ? (\r\n          <Alert id=\"alert\">\r\n            Unable to add item to wishlist. Please make sure you are signed in.\r\n          </Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Accessories\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\AccessoriesDetails.jsx",["284","285","286","287"],"import React, { Component } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Carousel,\r\n  CarouselItem,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Review from \"./Review\";\r\nimport { addCart } from \"../../Helpers/functions\";\r\n\r\nclass AccessoriesDetails extends Component {\r\n  state = {\r\n    details: {},\r\n    id: \"\",\r\n    quantity: 1,\r\n    alert: false,\r\n    errorAlert: false,\r\n    size: \"No size required\",\r\n    color: \"No color required\",\r\n  };\r\n  componentDidMount = async () => {\r\n    const accessoryId = this.props.match.params.productId;\r\n    const response = await fetch(\r\n      `http://localhost:3003/accessories/${accessoryId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const details = await response.json();\r\n    this.setState({\r\n      details,\r\n      id: accessoryId,\r\n    });\r\n    this.getReviews();\r\n  };\r\n\r\n  addCart = async (id, productName, productPrice) => {\r\n    try {\r\n      if (!localStorage[\"userId\"]) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n          name: productName,\r\n          price: parseInt(productPrice),\r\n          userId: localStorage[\"guestToken\"],\r\n        };\r\n        let response = await fetch(\r\n          `http://localhost:3001/cart/check-out-as-guest`,\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              \"Content-Type\": \"Application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (response.ok) {\r\n          alert(\"success\");\r\n          const response = await fetch(\r\n            `http://localhost:3001/cart/${localStorage[\"guestToken\"]}`,\r\n            {\r\n              method: \"GET\",\r\n              headers: {\r\n                \"Content-type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n          const cart = await response.json();\r\n          this.props.secondAction(cart.totalItems);\r\n          // this.setState({ alert: true })\r\n          // setTimeout(() => {\r\n          //     this.setState({\r\n          //         alert: false\r\n          //     });\r\n          // }, 1200);\r\n        } else {\r\n          this.setState({ errorAlert: true });\r\n          setTimeout(() => {\r\n            this.setState({\r\n              errorAlert: false,\r\n            });\r\n          }, 1200);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  getReviews = async () => {\r\n    const response = await fetch(\r\n      `http://localhost:3001/reviews/${this.props.match.params.productId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const reviews = await response.json();\r\n    this.setState({\r\n      reviews,\r\n    });\r\n    console.log(\"\", this.state.reviews);\r\n  };\r\n  render() {\r\n    return (\r\n      <Container style={{ marginTop: \"2rem\", marginBottom: \"3rem\" }}>\r\n        <Row>\r\n          <Col md={4}>\r\n            <div className=\"view-product\">\r\n              <img src={this.state.details.image} />\r\n            </div>\r\n          </Col>\r\n          <Col sm={8}>\r\n            <div className=\"product-information\">\r\n              <h2>{this.state.details.name}</h2>\r\n              <p>{this.state.details.description}</p>\r\n\r\n              <span>\r\n                <span>£ {this.state.details.price}</span>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-fefault\"\r\n                  id=\"cart\"\r\n                  onClick={() =>\r\n                    addCart(\r\n                      this.state.details._id,\r\n                      this.state.quantity,\r\n                      this.state.details.image,\r\n                      this.state.details.name,\r\n                      this.state.size,\r\n                      this.state.color,\r\n                      this.state.details.price\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"fa fa-shopping-cart\"></i>\r\n                  Add to cart\r\n                </button>\r\n              </span>\r\n              <p>\r\n                <b>Availability:</b> In Stock\r\n              </p>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Review id={this.props.match.params.productId} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccessoriesDetails;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\Footer.jsx",["288","289","290","291","292","293","294","295"],"import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport '../../css/Footer.css'\r\nimport logoTrademark from '../../assets/logo_trademark.png'\r\nimport applePay from '../../assets/apple-pay.png'\r\nimport visa from '../../assets/visa.png'\r\nimport googleWallet from '../../assets/google_wallet.png'\r\nimport amex from '../../assets/amex-logo.png'\r\nimport payPal from '../../assets/money.png'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCCVisa } from '@fortawesome/free-solid-svg-icons'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Footer extends Component {\r\n  state = {}\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"footer-wrapper\">\r\n          <div id=\"footer\">\r\n            <Container>\r\n              <Row className=\"pt-3 pb-3 d-flex justify-content-center\">\r\n                <Col md={4}>\r\n                  <div>\r\n                    <h5>Terms and conditions </h5>\r\n                    <Link to=\"/terms-of-sales\" className=\"footer-link\">\r\n                      Terms of sales\r\n                    </Link>\r\n                    <br></br>\r\n                    <Link to=\"/terms-of-use\" className=\"footer-link\">\r\n                      Terms of use\r\n                    </Link>{' '}\r\n                    <br></br>\r\n                  </div>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <div>\r\n                    <h5>Policies</h5>\r\n                    <Link to=\"/cookie-policy\" className=\"footer-link\">\r\n                      Cookie policy\r\n                    </Link>{' '}\r\n                    <br></br>\r\n                    <Link to=\"/privacy-policy\" className=\"footer-link\">\r\n                      Privacy policy\r\n                    </Link>{' '}\r\n                    <br></br>\r\n                  </div>\r\n                </Col>\r\n\r\n                <Col md={3}>\r\n                  <div>\r\n                    <h5>About Us</h5>\r\n                    <Link to=\"/aboutus\" className=\"footer-link\">\r\n                      About JohnPaulStephen\r\n                    </Link>{' '}\r\n                    <br></br>\r\n                    {/* <Link to=\"/aboutus\" className=\"footer-link\">\r\n                      Our Heritage\r\n                    </Link>{' '} */}\r\n                    <br></br>\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <hr></hr>\r\n              {/* <div className=\"text-center\">\r\n                <h5 className=\"mb-3\">Shopping is safe with us.</h5>\r\n                <h5 className=\"mb-3\">We accept : </h5>\r\n                <Row>\r\n                  <Col>\r\n                    <img src={visa}></img>\r\n                  </Col>\r\n\r\n                  <Col>\r\n                    <img src={payPal}></img>\r\n                  </Col>\r\n                  <Col>\r\n                    <img src={amex}></img>\r\n                  </Col>\r\n                </Row>\r\n              </div> */}\r\n\r\n              <div className=\"text-center\">\r\n                <img src={logoTrademark} style={{ width: '50%' }} />\r\n              </div>\r\n              <hr></hr>\r\n              <div className=\"text-center\">\r\n                <p>Call us :+44 132 280 0331</p>\r\n                <p>\r\n                  20-22 Wenlock Road London N1 7GU - Registered No. 11064839 -\r\n                  info@johnpaulstephen.com\r\n                </p>\r\n              </div>\r\n            </Container>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\AboutUs.jsx",["296"],"import React, { Component } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport logoTrademark from '../../assets/logo_trademark.png'\r\n\r\nclass AboutUs extends Component {\r\n  state = {}\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div style={{ marginTop: '3rem', marginBottom: '5rem' }}>\r\n          <h5 className=\"text-center\">About John Paul Stephen</h5>\r\n          <p className=\"mt-4\">\r\n            The brand name, John Paul Stephen, was inspired by the three sons'\r\n            Italian names (Giovanni, Paolo, and Stefano) of founders of the\r\n            brand. Each name symbolizes a unique quality which we have imbibed\r\n            in our core values.\r\n          </p>\r\n          <p>\r\n            {' '}\r\n            A concatenation of these names \"John Paul Stephen\" birthed a brand\r\n            driven by a passion for our heritage. John Paul Stephen exudes a\r\n            culture of unbridled commitment to excellence.\r\n          </p>\r\n          <p>\r\n            Welcome to John Paul Stephen, A British Fashion Brand with an\r\n            African Heritage.\r\n          </p>\r\n          <div className=\"text-right mt-5\">\r\n            <img\r\n              src={logoTrademark}\r\n              style={{\r\n                width: '50%',\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AboutUs\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\login\\ForgottenPassword.jsx",["297"],"import React, { Component } from \"react\";\r\nimport { Container, Form, Alert } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../css/Login.css\";\r\n\r\nclass ForgottenPassword extends Component {\r\n  state = {\r\n    email: \"\",\r\n    emailSentAlert: false,\r\n    emailSentErrorAlert: false,\r\n    noEmail: false,\r\n  };\r\n  updateResetPassword = (e) => {\r\n    this.setState({\r\n      email: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  postEmail = async (e) => {\r\n    e.preventDefault();\r\n    if (this.state.email === \"\") {\r\n      this.setState({\r\n        noEmail: true,\r\n      });\r\n    } else {\r\n      const response = await fetch(\r\n        `http://localhost:3003/users/send-reset-password-to-email/${this.state.email} `,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const messageFromApi = await response.json();\r\n      if (messageFromApi.message === \"Email sent successfully\") {\r\n        this.setState({ emailSentAlert: true });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            emailSentAlert: false,\r\n            email: \"\",\r\n          });\r\n        }, 1200);\r\n      } else if (messageFromApi.message === \"User does not exist\") {\r\n        this.setState({ emailSentErrorAlert: true });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            emailSentErrorAlert: false,\r\n            email: \"\",\r\n          });\r\n        }, 1200);\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {this.state.emailSentAlert === true ? (\r\n          <Alert id=\"alert\">An email has been sent to you.</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {this.state.emailSentErrorAlert === true ? (\r\n          <Alert id=\"alert\">\r\n            User not found, please make sure you entered the correct email\r\n          </Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        <div className=\"mt-5\">\r\n          <h3 className=\"d-flex justify-content-center\">\r\n            We Understand, These Things Happen...\r\n          </h3>\r\n          <h5 className=\"d-flex justify-content-center\">\r\n            Recover Your Account.\r\n          </h5>\r\n          <h5 className=\"d-flex justify-content-center\">\r\n            Enter Your Email Below To Reset Your Password, An Email With Details\r\n            Will Be Sent To You Shortly.{\" \"}\r\n          </h5>\r\n          <Form>\r\n            <Form.Group style={{ marginTop: \"3rem\" }}>\r\n              <Form.Control\r\n                htmlFor=\"email\"\r\n                className=\"mb-3\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"Email\"\r\n                size=\"md\"\r\n                value={this.state.email}\r\n                onChange={(e) => this.updateResetPassword(e)}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n          <div className=\"d-flex justify-content-center mb-1\">\r\n            <button\r\n              id=\"forgotPasswordbtn\"\r\n              type=\"submit\"\r\n              className=\" mt-3\"\r\n              onClick={(e) => this.postEmail(e)}\r\n            >\r\n              Recover Password\r\n            </button>\r\n          </div>\r\n          <div className=\"d-flex justify-content-center mb-5 mt-4\">\r\n            <Link to={\"/login\"} id=\"loginFromRecoverPassword\">\r\n              <a>Login Here</a>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgottenPassword;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\login\\UpdatePassword.jsx",["298","299"],"import React, { Component } from \"react\";\r\nimport { Container, Form, Alert } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UpdatePassword extends Component {\r\n  state = {\r\n    password: \"\",\r\n    passwordUpdatedAlert: false,\r\n    passwordUpdatedError: false,\r\n    noPassword: false,\r\n    tokenUsedError: false,\r\n  };\r\n  updateResetPassword = (e) => {\r\n    this.setState({\r\n      password: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  updatePassword = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.password === \"\") {\r\n      this.setState({\r\n        noPassword: true,\r\n      });\r\n    } else {\r\n      const token = this.props.match.params.token;\r\n      const email = this.props.match.params.email;\r\n      const response = await fetch(\r\n        `http://localhost:3003/users/reset-password/${token}/${email} `,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            password: this.state.password,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const messageFromApi = await response.json();\r\n      if (messageFromApi.message === \"Password updated\") {\r\n        const deleteToken = await fetch(\r\n          `http://localhost:3003/users/delete-reset-token/${email}`,\r\n          {\r\n            method: \"DELETE\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        this.setState({ passwordUpdatedAlert: true });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            passwordUpdatedAlert: false,\r\n            password: \"\",\r\n          });\r\n        }, 1200);\r\n        window.location.href = `http://localhost:3000/`;\r\n      } else if (messageFromApi.message === \"An error occured\") {\r\n        this.setState({ passwordUpdatedError: true });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            passwordUpdatedError: false,\r\n            email: \"\",\r\n          });\r\n        }, 1200);\r\n      } else if (messageFromApi.message === \"Invalid token\") {\r\n        this.setState({ tokenUsedError: true });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            tokenUsedError: false,\r\n            email: \"\",\r\n          });\r\n        }, 1200);\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div className=\"mt-5\">\r\n          {this.state.passwordUpdatedAlert === true ? (\r\n            <Alert id=\"alert\">Password updated.</Alert>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {this.state.passwordUpdatedError === true ? (\r\n            <Alert id=\"alert\">An error occured</Alert>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {this.state.tokenUsedError === true ? (\r\n            <Alert id=\"alert\">Token has been used.</Alert>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          <h3 className=\"d-flex justify-content-center\">\r\n            Update your password\r\n          </h3>\r\n\r\n          <Form>\r\n            <Form.Group style={{ marginTop: \"3rem\" }}>\r\n              <Form.Control\r\n                htmlFor=\"password\"\r\n                className=\"mb-3\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Enter new password\"\r\n                size=\"md\"\r\n                value={this.state.password}\r\n                onChange={(e) => this.updateResetPassword(e)}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n          <div className=\"d-flex justify-content-center mb-5\">\r\n            <button\r\n              id=\"updatePasswordBtn\"\r\n              type=\"submit\"\r\n              className=\" mt-3\"\r\n              onClick={(e) => this.updatePassword(e)}\r\n            >\r\n              Update Password\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdatePassword;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Helpers\\functions.js",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Paypalpayment.jsx",["300"],"import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport '../../css/orderConfirmed.css'\r\n// const PayPalButton = window.paypal.Buttons.driver('react', { React, ReactDOM })\r\n\r\nclass Paypalpayment extends Component {\r\n  state = {\r\n    total: this.props.total.toString(),\r\n    orderConfirmed: false,\r\n    paypalDisplay: true,\r\n  }\r\n\r\n  // sendEmailDetails = async () => {\r\n  //   const response = await fetch(\r\n  //     'https://mr-oyebode-backend-yqavh.ondigitalocean.app/cart/transactional-email-customer',\r\n  //     {\r\n  //       method: 'POST',\r\n  //       body: JSON.stringify({\r\n  //         customerEmail: this.props.email,\r\n  //         id: this.props.id,\r\n  //       }),\r\n  //       headers: {\r\n  //         'Content-type': 'application/json',\r\n  //       },\r\n  //     },\r\n  //   )\r\n  // }\r\n  // sendEmailDetailsToSales = async () => {\r\n  //   const response = await fetch(\r\n  //     'https://mr-oyebode-backend-yqavh.ondigitalocean.app/cart/transactional-email-to-sales',\r\n  //     {\r\n  //       method: 'POST',\r\n  //       body: JSON.stringify({\r\n  //         id: this.props.id,\r\n  //       }),\r\n  //       headers: {\r\n  //         'Content-type': 'application/json',\r\n  //       },\r\n  //     },\r\n  //   )\r\n  // }\r\n\r\n  // sendOrderDetails = async () => {\r\n  //   const response = await fetch(\r\n  //     'https://mr-oyebode-backend-yqavh.ondigitalocean.app/payment/send-royal-mail-order',\r\n  //     {\r\n  //       method: 'POST',\r\n  //       body: JSON.stringify({\r\n  //         fullName: this.props.fullName,\r\n  //         addressLine1: this.props.addressLine1,\r\n  //         city: this.props.city,\r\n  //         postCode: this.props.postCode,\r\n  //         email: this.props.email,\r\n  //         subTotal: parseInt(this.props.subTotal),\r\n  //         total: parseInt(this.props.total),\r\n  //         billingAddressFullName: this.props.fullName,\r\n  //         billingAddressaddressLine1: this.props.addressLine1,\r\n  //         billingAddresscity: this.props.city,\r\n  //         billingAddresspostCode: this.props.postCode,\r\n  //         billingAddressemail: this.props.email,\r\n  //       }),\r\n  //       headers: {\r\n  //         'Content-type': 'application/json',\r\n  //       },\r\n  //     },\r\n  //   )\r\n  //   const details = await response.json()\r\n\r\n  //   if (details.failedOrders.length === 0) {\r\n  //     this.sendEmailDetails()\r\n  //     this.sendEmailDetailsToSales()\r\n  //   } else {\r\n  //     this.setState({ error: true })\r\n  //   }\r\n  // }\r\n\r\n  // componentDidMount = async (props) => {\r\n  //   const total = this.state.total\r\n  //   let buttons\r\n  //   buttons = window.paypal.Button.render(\r\n  //     {\r\n  //       env: 'sandbox',\r\n  //       payment: function (data, actions) {\r\n  //         return actions.request\r\n  //           .post('https://mr-oyebode-backend-yqavh.ondigitalocean.apppayment/my-api/create-payment/', {\r\n  //             total: total,\r\n  //           })\r\n  //           .then(function (res) {\r\n  //             return res.id\r\n  //           })\r\n  //       },\r\n\r\n  //       onAuthorize: async function (data, actions) {\r\n  //         const response = actions.request.post(\r\n  //           'https://mr-oyebode-backend-yqavh.ondigitalocean.apppayment/my-api/execute-payment/',\r\n  //           {\r\n  //             paymentID: data.paymentID,\r\n  //             payerID: data.payerID,\r\n  //           },\r\n  //         )\r\n  //         if (response) {\r\n  //           window.location.href = '/order-confirmed'\r\n  //         }\r\n  //       },\r\n  //     },\r\n  //     '#paypal-button',\r\n  //   )\r\n  // }\r\n\r\n  componentDidMount = () => {\r\n    const value = this.state.total\r\n    window.paypal\r\n      .Buttons({\r\n        createOrder(data, actions) {\r\n          return actions.order.create({\r\n            intent: 'capture',\r\n            purchase_units: [\r\n              {\r\n                description: 'John Paul Stephen',\r\n                amount: {\r\n                  currency_code: 'GBP',\r\n                  value: value,\r\n                },\r\n              },\r\n            ],\r\n          })\r\n        },\r\n        onApprove(data, actions) {\r\n          window.location.href = '/order-confirmed'\r\n        },\r\n        onCancel(data) {\r\n          window.location.href = '/cart'\r\n        },\r\n        onError(err) {\r\n          alert('An error making this payment occured')\r\n          window.location.href = '/cart'\r\n        },\r\n      })\r\n      .render('#paypal-button-container')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"paypal-wrapper\" style={{ width: '50%' }}>\r\n          <div id=\"paypal-button-container\"></div>\r\n          {/* <PayPalButton\r\n            createOrder={(data, actions) => this.createOrder(data, actions)}\r\n            onApprove={(data, actions) => this.onApprove(data, actions)}\r\n            onCancel={(data) => this.onCancel(data)}\r\n            onError={(err) => this.onError(err)}\r\n          /> */}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Paypalpayment\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Carou.jsx",["301","302"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\AllProducts\\Shopnow.jsx",["303","304","305","306"],"import React, { Component } from 'react'\r\nimport '../../css/AllProducts.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart, faPlusSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport { Link } from 'react-router-dom'\r\nimport { CardDeck } from 'react-bootstrap'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nclass Shopnow extends Component {\r\n  state = {\r\n    JPS: {},\r\n    JPSImages: [],\r\n    duduDara: {},\r\n    duduDaraImages: [],\r\n    makorira: {},\r\n    makoriraImages: [],\r\n    whatWillYouBeKnownFor: {},\r\n    whatWillYouBeKnownForImages: [],\r\n    ourThing: {},\r\n    ourThingImages: [],\r\n    outOfFashion: {},\r\n    outOfFashionImages: [],\r\n    alert: false,\r\n    errorAlert: false,\r\n    quantity: 1,\r\n    products: [],\r\n  }\r\n\r\n  getProducts = async () => {\r\n    const restructure = []\r\n    const response = await fetch(\r\n      'https://mr-oyebode-backend-yqavh.ondigitalocean.app/product/',\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      },\r\n    )\r\n    const products = await response.json()\r\n\r\n    this.setState({ products: products })\r\n    const JPS = products.filter(\r\n      (prodName) => prodName.name === 'John Paul Stephen',\r\n    )\r\n\r\n    JPS.map((j) => {\r\n      return this.setState({ JPSImages: j.imageUrl, JPS: j })\r\n    })\r\n\r\n    const duduDara = products.filter(\r\n      (prodName) => prodName.name === 'Dúdú Dára / Black is Good',\r\n    )\r\n    duduDara.map((j) => {\r\n      return this.setState({ duduDaraImages: j.imageUrl, duduDara: j })\r\n    })\r\n    const makorira = products.filter(\r\n      (prodName) => prodName.name === 'Má Korira / Don’t Hate',\r\n    )\r\n    makorira.map((j) => {\r\n      return this.setState({ makoriraImages: j.imageUrl, makorira: j })\r\n    })\r\n    const whatWillYouBeKnownFor = products.filter(\r\n      (prodName) => prodName.name === 'What will you be known for?',\r\n    )\r\n    whatWillYouBeKnownFor.map((j) => {\r\n      return this.setState({\r\n        whatWillYouBeKnownForImages: j.imageUrl,\r\n        whatWillYouBeKnownFor: j,\r\n      })\r\n    })\r\n    const ourThing = products.filter(\r\n      (prodName) => prodName.name === 'Our thing Our belief Our heritage',\r\n    )\r\n    ourThing.map((j) => {\r\n      return this.setState({\r\n        ourThingImages: j.imageUrl,\r\n        ourThing: j,\r\n      })\r\n    })\r\n    const outOfFashion = products.filter(\r\n      (prodName) => prodName.name === 'Out of Fashion',\r\n    )\r\n    outOfFashion.map((j) => {\r\n      return this.setState({\r\n        outOfFashionImages: j.imageUrl,\r\n        outOfFashion: j,\r\n      })\r\n    })\r\n  }\r\n  createProductPrice = async (productName, productPrice, id) => {\r\n    const guestToken = sessionStorage.getItem('guestToken')\r\n    const createPriceResponse = await fetch(\r\n      'https://mr-oyebode-backend-yqavh.ondigitalocean.app/payment/create-product-price',\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          userId: guestToken,\r\n          productName: productName,\r\n          productPrice: parseInt(productPrice * 100),\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      },\r\n    )\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    this.getProducts()\r\n  }\r\n\r\n  addCart = async (\r\n    id,\r\n    productImage,\r\n    productName,\r\n    productPrice,\r\n    productStock,\r\n  ) => {\r\n    try {\r\n      const guestToken = sessionStorage.getItem('guestToken')\r\n      const userId = sessionStorage.getItem('userId')\r\n      if (guestToken) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n          image: productImage,\r\n          name: productName,\r\n          price: parseInt(productPrice),\r\n          stock: productStock,\r\n          userId: guestToken,\r\n        }\r\n        let response = await fetch(\r\n          `https://mr-oyebode-backend-yqavh.ondigitalocean.app/cart/check-out-as-guest`,\r\n          {\r\n            method: 'POST',\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              'Content-Type': 'Application/json',\r\n            },\r\n          },\r\n        )\r\n        if (response.ok) {\r\n          this.createProductPrice(productName, productPrice, id)\r\n          this.props.show()\r\n          setTimeout(() => {\r\n            this.props.close()\r\n          }, 1200)\r\n          this.props.getCart()\r\n        } else {\r\n          this.props.showErrorModal()\r\n          setTimeout(() => {\r\n            this.props.closeErrorModal()\r\n          }, 1200)\r\n        }\r\n      } else if (userId) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n          image: productImage,\r\n          name: productName,\r\n          price: parseInt(productPrice),\r\n          stock: productStock,\r\n          userId: userId,\r\n        }\r\n        let response = await fetch(\r\n          `https://mr-oyebode-backend-yqavh.ondigitalocean.app/check-out-as-guest`,\r\n          {\r\n            method: 'POST',\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              'Content-Type': 'Application/json',\r\n            },\r\n          },\r\n        )\r\n        if (response.ok) {\r\n          this.createProductPrice(productName, productPrice, id)\r\n          this.props.show()\r\n          setTimeout(() => {\r\n            this.props.close()\r\n          }, 1200)\r\n          this.props.getCart()\r\n        } else {\r\n          this.props.showErrorModal()\r\n          setTimeout(() => {\r\n            this.props.closeErrorModal()\r\n          }, 1200)\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\" id=\"shop-now\">\r\n        <div id=\"featured-text\">\r\n          <h2>our products</h2>\r\n        </div>\r\n        <CardDeck>\r\n          {this.state.JPSImages.map((jps, index) => {\r\n            return (\r\n              <div className=\"product-image-wrapper col-sm-4\">\r\n                <div className=\"single-products\">\r\n                  <div className=\"productinfo text-center\">\r\n                    <img src={jps.url} alt=\"\" />\r\n                    <h2>£ {this.state.JPS.price}</h2>\r\n                    <p>{this.state.JPS.name}</p>\r\n                    <button\r\n                      onClick={() =>\r\n                        this.addCart(\r\n                          this.state.JPS._id,\r\n                          jps.url,\r\n                          this.state.JPS.name,\r\n                          this.state.JPS.price,\r\n                          this.state.JPS.stock,\r\n                        )\r\n                      }\r\n                      className=\"add-to-cart\"\r\n                    >\r\n                      <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"choose\">\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Link\r\n                      to={`/details/${this.state.JPS._id}`}\r\n                      id=\"more-details\"\r\n                    >\r\n                      <FontAwesomeIcon icon={faPlusSquare} className=\"fa-1x\" />\r\n                      More details\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n          {this.state.products.slice(1).map((pro) => {\r\n            return (\r\n              <div className=\"product-image-wrapper col-sm-4\">\r\n                <div className=\"single-products\">\r\n                  <div className=\"productinfo text-center\">\r\n                    <img src={pro.imageUrl[0].url} alt=\"\" />\r\n                    <h2>£ {pro.price}</h2>\r\n                    <p>{pro.name}</p>\r\n                    <button\r\n                      onClick={() =>\r\n                        this.addCart(\r\n                          pro._id,\r\n                          pro.imageUrl[0].url,\r\n                          pro.name,\r\n                          pro.price,\r\n                          pro.stock,\r\n                        )\r\n                      }\r\n                      className=\"add-to-cart\"\r\n                    >\r\n                      <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"choose\">\r\n                  <div className=\"d-flex justify-content-center\">\r\n                    <Link to={`/details/${pro._id}`} id=\"more-details\">\r\n                      <FontAwesomeIcon icon={faPlusSquare} className=\"fa-1x\" />\r\n                      More details\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </CardDeck>\r\n        {/* \r\n        <div>\r\n          <div id=\"featured-text\">\r\n            <h2>John Paul Stephen</h2>\r\n          </div>\r\n          <CardDeck>\r\n            {this.state.JPSImages.map((jps, index) => {\r\n              return (\r\n                <div className=\"product-image-wrapper col-sm-4\">\r\n                  <div className=\"single-products\">\r\n                    <div className=\"productinfo text-center\">\r\n                      <img src={jps.url} alt=\"\" />\r\n                      <h2>£ {this.state.JPS.price}</h2>\r\n                      <p>{this.state.JPS.name}</p>\r\n                      <button\r\n                        onClick={() =>\r\n                          this.addCart(\r\n                            this.state.JPS._id,\r\n                            jps.url,\r\n                            this.state.JPS.name,\r\n                            this.state.JPS.price,\r\n                            this.state.JPS.stock,\r\n                          )\r\n                        }\r\n                        className=\"add-to-cart\"\r\n                      >\r\n                        <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </CardDeck>\r\n        </div> */}\r\n        {/* <div>\r\n          <div id=\"featured-text\">\r\n            <h2>Dúdú Dára/Black is Good</h2>\r\n          </div>\r\n          <CardDeck>\r\n            {this.state.duduDaraImages.map((jps, index) => {\r\n              return (\r\n                <div className=\"product-image-wrapper col-sm-4\">\r\n                  <div className=\"single-products\">\r\n                    <div className=\"productinfo text-center\">\r\n                      <img src={jps.url} alt=\"\" />\r\n                      <h2>£ {this.state.duduDara.price}</h2>\r\n                      <p>{this.state.duduDara.name}</p>\r\n                      <button\r\n                        onClick={() =>\r\n                          this.addCart(\r\n                            this.state.duduDara._id,\r\n                            jps.url,\r\n                            this.state.duduDara.name,\r\n                            this.state.duduDara.price,\r\n                            this.state.duduDara.stock,\r\n                          )\r\n                        }\r\n                        className=\"add-to-cart\"\r\n                      >\r\n                        <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </CardDeck>\r\n        </div> */}\r\n        {/* <div>\r\n          <div id=\"featured-text\">\r\n            <h2>Má Korira/Don’t Hate</h2>\r\n          </div>\r\n          <CardDeck>\r\n            {this.state.makoriraImages.map((jps, index) => {\r\n              return (\r\n                <div className=\"product-image-wrapper col-sm-4\">\r\n                  <div className=\"single-products\">\r\n                    <div className=\"productinfo text-center\">\r\n                      <img src={jps.url} alt=\"\" />\r\n                      <h2>£ {this.state.makorira.price}</h2>\r\n                      <p>{this.state.makorira.name}</p>\r\n                      <button\r\n                        onClick={() =>\r\n                          this.addCart(\r\n                            this.state.makorira._id,\r\n                            jps.url,\r\n                            this.state.makorira.name,\r\n                            this.state.makorira.price,\r\n                            this.state.makorira.stock,\r\n                          )\r\n                        }\r\n                        className=\"add-to-cart\"\r\n                      >\r\n                        <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </CardDeck>\r\n        </div> */}\r\n        {/* <div>\r\n          <div id=\"featured-text\">\r\n            <h2>What Will You Be Known For</h2>\r\n          </div>\r\n          <CardDeck>\r\n            {this.state.whatWillYouBeKnownForImages.map((jps, index) => {\r\n              return (\r\n                <div className=\"product-image-wrapper col-sm-4\">\r\n                  <div className=\"single-products\">\r\n                    <div className=\"productinfo text-center\">\r\n                      <img src={jps.url} alt=\"\" />\r\n                      <h2>£ {this.state.whatWillYouBeKnownFor.price}</h2>\r\n                      <p>{this.state.whatWillYouBeKnownFor.name}</p>\r\n                      <button\r\n                        onClick={() =>\r\n                          this.addCart(\r\n                            this.state.whatWillYouBeKnownFor._id,\r\n                            jps.url,\r\n                            this.state.whatWillYouBeKnownFor.name,\r\n                            this.state.whatWillYouBeKnownFor.price,\r\n                            this.state.whatWillYouBeKnownFor.stock,\r\n                          )\r\n                        }\r\n                        className=\"add-to-cart\"\r\n                      >\r\n                        <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </CardDeck>\r\n        </div> */}\r\n        {/* <div>\r\n          <div id=\"featured-text\">\r\n            <h2>Our Thing Our Belief Our Heritage</h2>\r\n          </div>\r\n          <CardDeck>\r\n            {this.state.ourThingImages.map((jps, index) => {\r\n              return (\r\n                <div className=\"product-image-wrapper col-sm-4\">\r\n                  <div className=\"single-products\">\r\n                    <div className=\"productinfo text-center\">\r\n                      <img src={jps.url} alt=\"\" />\r\n                      <h2>£ {this.state.ourThing.price}</h2>\r\n                      <p>{this.state.ourThing.name}</p>\r\n                      <button\r\n                        onClick={() =>\r\n                          this.addCart(\r\n                            this.state.ourThing._id,\r\n                            jps.url,\r\n                            this.state.ourThing.name,\r\n                            this.state.ourThing.price,\r\n                            this.state.ourThing.stock,\r\n                          )\r\n                        }\r\n                        className=\"add-to-cart\"\r\n                      >\r\n                        <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </CardDeck>\r\n        </div> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Shopnow\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\OrderConfirmed.jsx",["307","308","309"],"import React, { Component } from 'react'\r\nimport '../../css/orderConfirmed.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass OrderConfirmed extends Component {\r\n  state = { success: false, error: false }\r\n\r\n  // updateStock = async () => {\r\n  //   const quantityInDatabaseInInteger = parseInt(this.props.currentQuantity)\r\n  //   const currentQuantityInInteger = parseInt(this.props.quantity)\r\n  //   const quantity = quantityInDatabaseInInteger - currentQuantityInInteger\r\n\r\n  //   const response = await fetch(\r\n  //     'https://mr-oyebode-backend-yqavh.ondigitalocean.app/product/update-stock-quantity',\r\n  //     {\r\n  //       method: 'PUT',\r\n  //       body: JSON.stringify({\r\n  //         productId: this.props.productId,\r\n  //         sizeId: this.props.sizeId,\r\n  //         quantity: quantity,\r\n  //         stockId: this.props.stockId,\r\n  //         size: this.props.size,\r\n  //       }),\r\n  //       headers: {\r\n  //         'Content-type': 'application/json',\r\n  //       },\r\n  //     },\r\n  //   )\r\n  //   const details = await response.json()\r\n  // }\r\n\r\n  sendEmailDetails = async (id, email, orderId, userId) => {\r\n    const response = await fetch(\r\n      'https://mr-oyebode-backend-yqavh.ondigitalocean.app/cart/transactional-email-customer',\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          customerEmail: this.props.email,\r\n          id: id,\r\n          customerEmail: email,\r\n          orderId: orderId,\r\n          userId: userId,\r\n        }),\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      },\r\n    )\r\n  }\r\n  sendEmailDetailsToSales = async (id) => {\r\n    const response = await fetch(\r\n      'https://mr-oyebode-backend-yqavh.ondigitalocean.app/cart/transactional-email-to-sales',\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          id: id,\r\n        }),\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      },\r\n    )\r\n    this.props.getCart()\r\n  }\r\n  componentDidMount = async () => {\r\n    const response = await fetch(\r\n      'https://mr-oyebode-backend-yqavh.ondigitalocean.app/payment/send-royal-mail-order',\r\n      {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          id: sessionStorage.getItem('guestToken'),\r\n        }),\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      },\r\n    )\r\n    const details = await response.json()\r\n\r\n    if (details.details.failedOrders.length === 0) {\r\n      this.sendEmailDetailsToSales(details.cartId)\r\n      this.sendEmailDetails(\r\n        details.cartId,\r\n        details.custEmail,\r\n        details.orderId,\r\n        sessionStorage.getItem('guestToken'),\r\n      )\r\n      this.setState({ success: true })\r\n    } else {\r\n      this.setState({ error: true })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        {this.state.success === true ? (\r\n          <div id=\"order-complete\">\r\n            <h5 className=\"text-center pt-5\">\r\n              Dear Customer, thank you for your order.\r\n            </h5>\r\n            <h5 className=\"text-center pb-3\">\r\n              Your order details will be sent to the email you provided shortly.\r\n            </h5>\r\n            <h5 className=\"text-center pb-5\">\r\n              You can continue shopping\r\n              <Link className=\"continue-shopping-link\" to=\"/allProducts\">\r\n                here\r\n              </Link>\r\n            </h5>\r\n          </div>\r\n        ) : (\r\n          <div className=\"lds-hourglass\"></div>\r\n        )}\r\n        {this.state.error === true ? (\r\n          <div id=\"order-complete\">\r\n            <h5 className=\"text-center pt-5\">\r\n              Dear Customer, there was an error placing your order.\r\n            </h5>\r\n            <h5 className=\"text-center pb-5\">\r\n              Please continue shopping\r\n              <Link className=\"continue-shopping-link\" to=\"/allProducts\">\r\n                here\r\n              </Link>\r\n              .\r\n            </h5>\r\n          </div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default OrderConfirmed\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Inventory\\StockManager.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Inventory\\UpdateInventory.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\CookiePolicy.jsx",["310"],"import React, { Component } from 'react'\r\n\r\nclass CookiePolicy extends Component {\r\n  state = {}\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5 mb-5\">\r\n        <iframe\r\n          style={{ width: '100%', height: '500px' }}\r\n          scrolling=\"auto\"\r\n          frameBorder=\"0\"\r\n          src=\"https://docs.google.com/document/d/e/2PACX-1vShpDxA1OFx2gZPRweeTC_eNAaTUFUlQwGmHsnXhzsOqf_k45CdFX-MvEWoNqqwtVOxspaCwiQejBIk/pub?embedded=true\"\r\n        ></iframe>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CookiePolicy\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\TermsOfSales.jsx",["311"],"import React, { Component } from 'react'\r\n\r\nclass TermsOfSales extends Component {\r\n  state = {}\r\n  render() {\r\n    return (\r\n        <div className=\"container mt-5 mb-5\">\r\n        <iframe\r\n          style={{ width: '100%', height: '500px' }}\r\n          scrolling=\"auto\"\r\n          frameBorder=\"0\"\r\n          src=\"https://docs.google.com/document/d/e/2PACX-1vSTYSKH-jnoVQPoBxoIke4pAQixwtKm150o1eiLn5OldYtr9U7BwCVXczN0TBT5mg/pub?embedded=true\"\r\n        ></iframe>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TermsOfSales\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\PrivacyPolicy.jsx",["312"],"import React, { Component } from 'react'\r\n\r\nclass PrivacyPolicy extends Component {\r\n  state = {}\r\n  render() {\r\n    return (\r\n        <div className=\"container mt-5 mb-5\">\r\n        <iframe\r\n          style={{ width: '100%', height: '500px' }}\r\n          scrolling=\"auto\"\r\n          frameBorder=\"0\"\r\n          src=\"https://docs.google.com/document/d/e/2PACX-1vSxueQvVfSKytqsgaZS_BG9fvNvkeERX6h0z7LZwRH-tt47_67vNndrDp3EVlvjoQ/pub?embedded=true\"\r\n        ></iframe>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PrivacyPolicy\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\TermsOfUse.jsx",["313"],"import React, { Component } from 'react'\r\n\r\nclass TermsOfUse extends Component {\r\n  state = {}\r\n  render() {\r\n    return (\r\n      <div className=\"container mt-5 mb-5\">\r\n        <iframe\r\n          style={{ width: '100%', height: '500px' }}\r\n          scrolling=\"auto\"\r\n          frameBorder=\"0\"\r\n          src=\"https://docs.google.com/document/d/e/2PACX-1vT3dGolV2Mk9UBCObP03A-KuXNDahmMeo1iv-pt-S0PEoUBKSkro_8yMroYoyQlww/pub?embedded=true\"\r\n        ></iframe>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TermsOfUse\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\AddToCartModal.jsx",["314","315","316"],"import React, { useState, forwardRef, useRef, useImperativeHandle } from 'react'\r\nimport { Modal } from 'react-bootstrap'\r\n\r\nconst AddToCartModal = forwardRef((props, ref) => {\r\n  const [show, setShow] = useState(false)\r\n  const handleClose = () => {\r\n    setShow(false)\r\n  }\r\n  const re = useRef()\r\n  useImperativeHandle(ref, () => ({\r\n    handleShow() {\r\n      setShow(true)\r\n    },\r\n  }))\r\n  useImperativeHandle(ref, () => ({\r\n    handleClose() {\r\n      setShow(false)\r\n    },\r\n  }))\r\n\r\n  return (\r\n    <div>\r\n      <Modal show={this.state.show} onHide={() => this.handleClose()}>\r\n        <Modal.Body>\r\n          <div>\r\n            <p>Unable to add item to cart</p>\r\n          </div>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default AddToCartModal\r\n",["317","318"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Notification.jsx",[],{"ruleId":"319","replacedBy":"320"},{"ruleId":"321","replacedBy":"322"},{"ruleId":"323","severity":1,"message":"324","line":12,"column":8,"nodeType":"325","messageId":"326","endLine":12,"endColumn":22},{"ruleId":"323","severity":1,"message":"327","line":26,"column":8,"nodeType":"325","messageId":"326","endLine":26,"endColumn":20},{"ruleId":"323","severity":1,"message":"328","line":27,"column":10,"nodeType":"325","messageId":"326","endLine":27,"endColumn":30},{"ruleId":"323","severity":1,"message":"329","line":8,"column":11,"nodeType":"325","messageId":"326","endLine":8,"endColumn":14},{"ruleId":"330","severity":1,"message":"331","line":34,"column":15,"nodeType":"332","endLine":37,"endColumn":17},{"ruleId":"333","severity":1,"message":"334","line":35,"column":35,"nodeType":"335","messageId":"336","endLine":35,"endColumn":37},{"ruleId":"333","severity":1,"message":"334","line":64,"column":35,"nodeType":"335","messageId":"336","endLine":64,"endColumn":37},{"ruleId":"323","severity":1,"message":"337","line":109,"column":13,"nodeType":"325","messageId":"326","endLine":109,"endColumn":32},{"ruleId":"323","severity":1,"message":"337","line":157,"column":15,"nodeType":"325","messageId":"326","endLine":157,"endColumn":34},{"ruleId":"330","severity":1,"message":"331","line":208,"column":29,"nodeType":"332","endLine":208,"endColumn":81},{"ruleId":"338","severity":1,"message":"339","line":74,"column":25,"nodeType":"332","endLine":79,"endColumn":26},{"ruleId":"323","severity":1,"message":"340","line":5,"column":37,"nodeType":"325","messageId":"326","endLine":5,"endColumn":41},{"ruleId":"323","severity":1,"message":"341","line":11,"column":7,"nodeType":"325","messageId":"326","endLine":11,"endColumn":20},{"ruleId":"333","severity":1,"message":"334","line":65,"column":35,"nodeType":"335","messageId":"336","endLine":65,"endColumn":37},{"ruleId":"333","severity":1,"message":"334","line":94,"column":35,"nodeType":"335","messageId":"336","endLine":94,"endColumn":37},{"ruleId":"323","severity":1,"message":"342","line":143,"column":11,"nodeType":"325","messageId":"326","endLine":143,"endColumn":21},{"ruleId":"323","severity":1,"message":"337","line":145,"column":11,"nodeType":"325","messageId":"326","endLine":145,"endColumn":30},{"ruleId":"323","severity":1,"message":"343","line":341,"column":9,"nodeType":"325","messageId":"326","endLine":341,"endColumn":17},{"ruleId":"323","severity":1,"message":"343","line":383,"column":9,"nodeType":"325","messageId":"326","endLine":383,"endColumn":17},{"ruleId":"323","severity":1,"message":"343","line":400,"column":9,"nodeType":"325","messageId":"326","endLine":400,"endColumn":17},{"ruleId":"330","severity":1,"message":"331","line":445,"column":35,"nodeType":"332","endLine":448,"endColumn":37},{"ruleId":"323","severity":1,"message":"344","line":1,"column":28,"nodeType":"325","messageId":"326","endLine":1,"endColumn":37},{"ruleId":"323","severity":1,"message":"345","line":4,"column":10,"nodeType":"325","messageId":"326","endLine":4,"endColumn":20},{"ruleId":"323","severity":1,"message":"340","line":2,"column":10,"nodeType":"325","messageId":"326","endLine":2,"endColumn":14},{"ruleId":"323","severity":1,"message":"346","line":2,"column":27,"nodeType":"325","messageId":"326","endLine":2,"endColumn":30},{"ruleId":"323","severity":1,"message":"347","line":2,"column":32,"nodeType":"325","messageId":"326","endLine":2,"endColumn":35},{"ruleId":"323","severity":1,"message":"348","line":3,"column":8,"nodeType":"325","messageId":"326","endLine":3,"endColumn":14},{"ruleId":"323","severity":1,"message":"349","line":2,"column":26,"nodeType":"325","messageId":"326","endLine":2,"endColumn":31},{"ruleId":"323","severity":1,"message":"345","line":4,"column":10,"nodeType":"325","messageId":"326","endLine":4,"endColumn":20},{"ruleId":"323","severity":1,"message":"350","line":6,"column":8,"nodeType":"325","messageId":"326","endLine":6,"endColumn":22},{"ruleId":"323","severity":1,"message":"351","line":3,"column":10,"nodeType":"325","messageId":"326","endLine":3,"endColumn":31},{"ruleId":"338","severity":1,"message":"339","line":124,"column":29,"nodeType":"332","endLine":129,"endColumn":30},{"ruleId":"338","severity":1,"message":"339","line":78,"column":33,"nodeType":"332","endLine":82,"endColumn":34},{"ruleId":"323","severity":1,"message":"352","line":6,"column":3,"nodeType":"325","messageId":"326","endLine":6,"endColumn":9},{"ruleId":"323","severity":1,"message":"353","line":7,"column":3,"nodeType":"325","messageId":"326","endLine":7,"endColumn":9},{"ruleId":"323","severity":1,"message":"354","line":8,"column":3,"nodeType":"325","messageId":"326","endLine":8,"endColumn":15},{"ruleId":"323","severity":1,"message":"355","line":11,"column":3,"nodeType":"325","messageId":"326","endLine":11,"endColumn":9},{"ruleId":"356","severity":1,"message":"357","line":34,"column":21,"nodeType":"332","endLine":37,"endColumn":22},{"ruleId":"356","severity":1,"message":"357","line":42,"column":21,"nodeType":"332","endLine":45,"endColumn":22},{"ruleId":"323","severity":1,"message":"349","line":4,"column":31,"nodeType":"325","messageId":"326","endLine":4,"endColumn":36},{"ruleId":"323","severity":1,"message":"358","line":6,"column":8,"nodeType":"325","messageId":"326","endLine":6,"endColumn":14},{"ruleId":"323","severity":1,"message":"337","line":70,"column":11,"nodeType":"325","messageId":"326","endLine":70,"endColumn":30},{"ruleId":"330","severity":1,"message":"331","line":190,"column":15,"nodeType":"332","endLine":190,"endColumn":48},{"ruleId":"319","replacedBy":"359"},{"ruleId":"321","replacedBy":"360"},{"ruleId":"323","severity":1,"message":"327","line":5,"column":8,"nodeType":"325","messageId":"326","endLine":5,"endColumn":20},{"ruleId":"323","severity":1,"message":"361","line":6,"column":8,"nodeType":"325","messageId":"326","endLine":6,"endColumn":19},{"ruleId":"323","severity":1,"message":"349","line":8,"column":3,"nodeType":"325","messageId":"326","endLine":8,"endColumn":8},{"ruleId":"323","severity":1,"message":"346","line":9,"column":3,"nodeType":"325","messageId":"326","endLine":9,"endColumn":6},{"ruleId":"323","severity":1,"message":"347","line":10,"column":3,"nodeType":"325","messageId":"326","endLine":10,"endColumn":6},{"ruleId":"323","severity":1,"message":"340","line":11,"column":3,"nodeType":"325","messageId":"326","endLine":11,"endColumn":7},{"ruleId":"323","severity":1,"message":"362","line":13,"column":3,"nodeType":"325","messageId":"326","endLine":13,"endColumn":8},{"ruleId":"323","severity":1,"message":"363","line":14,"column":3,"nodeType":"325","messageId":"326","endLine":14,"endColumn":9},{"ruleId":"323","severity":1,"message":"337","line":93,"column":11,"nodeType":"325","messageId":"326","endLine":93,"endColumn":30},{"ruleId":"323","severity":1,"message":"364","line":124,"column":13,"nodeType":"325","messageId":"326","endLine":124,"endColumn":23},{"ruleId":"323","severity":1,"message":"365","line":4,"column":10,"nodeType":"325","messageId":"326","endLine":4,"endColumn":17},{"ruleId":"323","severity":1,"message":"366","line":5,"column":8,"nodeType":"325","messageId":"326","endLine":5,"endColumn":13},{"ruleId":"323","severity":1,"message":"367","line":6,"column":8,"nodeType":"325","messageId":"326","endLine":6,"endColumn":13},{"ruleId":"323","severity":1,"message":"368","line":14,"column":3,"nodeType":"325","messageId":"326","endLine":14,"endColumn":7},{"ruleId":"323","severity":1,"message":"369","line":15,"column":3,"nodeType":"325","messageId":"326","endLine":15,"endColumn":12},{"ruleId":"323","severity":1,"message":"363","line":16,"column":3,"nodeType":"325","messageId":"326","endLine":16,"endColumn":9},{"ruleId":"323","severity":1,"message":"349","line":17,"column":3,"nodeType":"325","messageId":"326","endLine":17,"endColumn":8},{"ruleId":"370","severity":1,"message":"371","line":189,"column":32,"nodeType":"372","endLine":189,"endColumn":49},{"ruleId":"330","severity":1,"message":"331","line":209,"column":15,"nodeType":"332","endLine":209,"endColumn":65},{"ruleId":"323","severity":1,"message":"346","line":4,"column":10,"nodeType":"325","messageId":"326","endLine":4,"endColumn":13},{"ruleId":"323","severity":1,"message":"347","line":4,"column":15,"nodeType":"325","messageId":"326","endLine":4,"endColumn":18},{"ruleId":"323","severity":1,"message":"368","line":4,"column":20,"nodeType":"325","messageId":"326","endLine":4,"endColumn":24},{"ruleId":"323","severity":1,"message":"373","line":4,"column":26,"nodeType":"325","messageId":"326","endLine":4,"endColumn":35},{"ruleId":"323","severity":1,"message":"374","line":4,"column":37,"nodeType":"325","messageId":"326","endLine":4,"endColumn":45},{"ruleId":"323","severity":1,"message":"375","line":5,"column":8,"nodeType":"325","messageId":"326","endLine":5,"endColumn":11},{"ruleId":"323","severity":1,"message":"376","line":6,"column":8,"nodeType":"325","messageId":"326","endLine":6,"endColumn":11},{"ruleId":"323","severity":1,"message":"377","line":2,"column":16,"nodeType":"325","messageId":"326","endLine":2,"endColumn":25},{"ruleId":"323","severity":1,"message":"346","line":7,"column":3,"nodeType":"325","messageId":"326","endLine":7,"endColumn":6},{"ruleId":"323","severity":1,"message":"347","line":8,"column":3,"nodeType":"325","messageId":"326","endLine":8,"endColumn":6},{"ruleId":"323","severity":1,"message":"368","line":11,"column":3,"nodeType":"325","messageId":"326","endLine":11,"endColumn":7},{"ruleId":"323","severity":1,"message":"369","line":12,"column":3,"nodeType":"325","messageId":"326","endLine":12,"endColumn":12},{"ruleId":"323","severity":1,"message":"363","line":13,"column":3,"nodeType":"325","messageId":"326","endLine":13,"endColumn":9},{"ruleId":"378","severity":1,"message":"379","line":173,"column":21,"nodeType":"332","endLine":173,"endColumn":73},{"ruleId":"323","severity":1,"message":"380","line":6,"column":3,"nodeType":"325","messageId":"326","endLine":6,"endColumn":11},{"ruleId":"323","severity":1,"message":"381","line":7,"column":3,"nodeType":"325","messageId":"326","endLine":7,"endColumn":15},{"ruleId":"323","severity":1,"message":"340","line":8,"column":3,"nodeType":"325","messageId":"326","endLine":8,"endColumn":7},{"ruleId":"330","severity":1,"message":"331","line":116,"column":15,"nodeType":"332","endLine":116,"endColumn":53},{"ruleId":"323","severity":1,"message":"382","line":5,"column":8,"nodeType":"325","messageId":"326","endLine":5,"endColumn":16},{"ruleId":"323","severity":1,"message":"383","line":6,"column":8,"nodeType":"325","messageId":"326","endLine":6,"endColumn":12},{"ruleId":"323","severity":1,"message":"384","line":7,"column":8,"nodeType":"325","messageId":"326","endLine":7,"endColumn":20},{"ruleId":"323","severity":1,"message":"385","line":8,"column":8,"nodeType":"325","messageId":"326","endLine":8,"endColumn":12},{"ruleId":"323","severity":1,"message":"386","line":9,"column":8,"nodeType":"325","messageId":"326","endLine":9,"endColumn":14},{"ruleId":"323","severity":1,"message":"387","line":10,"column":10,"nodeType":"325","messageId":"326","endLine":10,"endColumn":25},{"ruleId":"323","severity":1,"message":"388","line":11,"column":10,"nodeType":"325","messageId":"326","endLine":11,"endColumn":18},{"ruleId":"330","severity":1,"message":"331","line":83,"column":17,"nodeType":"332","endLine":83,"endColumn":69},{"ruleId":"330","severity":1,"message":"331","line":29,"column":13,"nodeType":"332","endLine":34,"endColumn":15},{"ruleId":"378","severity":1,"message":"389","line":107,"column":15,"nodeType":"332","endLine":107,"endColumn":18},{"ruleId":"323","severity":1,"message":"390","line":3,"column":10,"nodeType":"325","messageId":"326","endLine":3,"endColumn":14},{"ruleId":"323","severity":1,"message":"391","line":43,"column":15,"nodeType":"325","messageId":"326","endLine":43,"endColumn":26},{"ruleId":"323","severity":1,"message":"392","line":2,"column":8,"nodeType":"325","messageId":"326","endLine":2,"endColumn":16},{"ruleId":"323","severity":1,"message":"393","line":5,"column":8,"nodeType":"325","messageId":"326","endLine":5,"endColumn":11},{"ruleId":"323","severity":1,"message":"394","line":6,"column":8,"nodeType":"325","messageId":"326","endLine":6,"endColumn":11},{"ruleId":"323","severity":1,"message":"365","line":4,"column":10,"nodeType":"325","messageId":"326","endLine":4,"endColumn":17},{"ruleId":"323","severity":1,"message":"349","line":7,"column":10,"nodeType":"325","messageId":"326","endLine":7,"endColumn":15},{"ruleId":"323","severity":1,"message":"395","line":30,"column":11,"nodeType":"325","messageId":"326","endLine":30,"endColumn":22},{"ruleId":"323","severity":1,"message":"337","line":93,"column":11,"nodeType":"325","messageId":"326","endLine":93,"endColumn":30},{"ruleId":"323","severity":1,"message":"343","line":33,"column":11,"nodeType":"325","messageId":"326","endLine":33,"endColumn":19},{"ruleId":"396","severity":1,"message":"397","line":40,"column":11,"nodeType":"398","messageId":"399","endLine":40,"endColumn":24},{"ruleId":"323","severity":1,"message":"343","line":51,"column":11,"nodeType":"325","messageId":"326","endLine":51,"endColumn":19},{"ruleId":"400","severity":1,"message":"401","line":8,"column":9,"nodeType":"332","endLine":13,"endColumn":10},{"ruleId":"400","severity":1,"message":"401","line":8,"column":9,"nodeType":"332","endLine":13,"endColumn":10},{"ruleId":"400","severity":1,"message":"401","line":8,"column":9,"nodeType":"332","endLine":13,"endColumn":10},{"ruleId":"400","severity":1,"message":"401","line":8,"column":9,"nodeType":"332","endLine":13,"endColumn":10},{"ruleId":"323","severity":1,"message":"402","line":5,"column":10,"nodeType":"325","messageId":"326","endLine":5,"endColumn":14},{"ruleId":"323","severity":1,"message":"403","line":6,"column":9,"nodeType":"325","messageId":"326","endLine":6,"endColumn":20},{"ruleId":"323","severity":1,"message":"404","line":9,"column":9,"nodeType":"325","messageId":"326","endLine":9,"endColumn":11},{"ruleId":"319","replacedBy":"405"},{"ruleId":"321","replacedBy":"406"},"no-native-reassign",["407"],"no-negated-in-lhs",["408"],"no-unused-vars","'NavBarCheckout' is defined but never used.","Identifier","unusedVar","'Notification' is defined but never used.","'LastLocationProvider' is defined but never used.","'res' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'createPriceResponse' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Form' is defined but never used.","'stripePromise' is assigned a value but never used.","'guestToken' is assigned a value but never used.","'response' is assigned a value but never used.","'createRef' is defined but never used.","'loadStripe' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'SignUp' is defined but never used.","'Alert' is defined but never used.","'orderConfirmed' is defined but never used.","'findAllInRenderedTree' is defined but never used.","'faUser' is defined but never used.","'faStar' is defined but never used.","'faCrosshairs' is defined but never used.","'faLock' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'Review' is defined but never used.",["407"],["408"],"'Accessories' is defined but never used.","'Modal' is defined but never used.","'Button' is defined but never used.","'cart_items' is assigned a value but never used.","'faHeart' is defined but never used.","'solo1' is defined but never used.","'solo2' is defined but never used.","'Card' is defined but never used.","'Accordion' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'CardGroup' is defined but never used.","'CardDeck' is defined but never used.","'one' is defined but never used.","'two' is defined but never used.","'Container' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Carousel' is defined but never used.","'CarouselItem' is defined but never used.","'applePay' is defined but never used.","'visa' is defined but never used.","'googleWallet' is defined but never used.","'amex' is defined but never used.","'payPal' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faCCVisa' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Link' is defined but never used.","'deleteToken' is assigned a value but never used.","'ReactDOM' is defined but never used.","'im2' is defined but never used.","'im3' is defined but never used.","'restructure' is assigned a value but never used.","no-dupe-keys","Duplicate key 'customerEmail'.","ObjectExpression","unexpected","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'show' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'re' is assigned a value but never used.",["407"],["408"],"no-global-assign","no-unsafe-negation"]