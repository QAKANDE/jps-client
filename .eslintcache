[{"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\index.js":"1","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\App.js":"2","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\reportWebVitals.js":"3","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\PaymentSuccess.jsx":"4","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\LittleCart.jsx":"5","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\NavBarCheckout.jsx":"6","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\NavbarCheckOutCart.jsx":"7","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\account\\Account.jsx":"8","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\account\\Addaddress.jsx":"9","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Cart.jsx":"10","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\CartTotal.jsx":"11","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Checkout.jsx":"12","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Checkoutasguest.jsx":"13","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\login\\Login.jsx":"14","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\account\\RecentOrders.jsx":"15","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\wishlist\\WishList.jsx":"16","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\navbar\\NavSocialMedia.jsx":"17","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\Details.jsx":"18","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\ProductDetailsCarousel.jsx":"19","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\Review.jsx":"20","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Home.jsx":"21","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Products.jsx":"22","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Jumbo.jsx":"23","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\SignUp.jsx":"24","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Accessories.jsx":"25","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\AccessoriesDetails.jsx":"26","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\AllProducts\\AllProductsWrapper.jsx":"27","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\AllProducts\\AllTShirts.jsx":"28","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\AllProducts\\AllAccessories.jsx":"29","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\Footer.jsx":"30","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\AboutUs.jsx":"31","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\login\\ForgottenPassword.jsx":"32","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\login\\UpdatePassword.jsx":"33","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Helpers\\functions.js":"34","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Paypalpayment.jsx":"35","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Carou.jsx":"36","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Prod.jsx":"37","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\AllProducts\\Shopnow.jsx":"38","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\OrderConfirmed.jsx":"39","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Inventory\\StockManager.jsx":"40","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Inventory\\UpdateInventory.jsx":"41","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\CookiePolicy.jsx":"42","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\TermsOfSales.jsx":"43","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\PrivacyPolicy.jsx":"44","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\TermsOfUse.jsx":"45"},{"size":605,"mtime":1626438609852,"results":"46","hashOfConfig":"47"},{"size":3915,"mtime":1626681186964,"results":"48","hashOfConfig":"47"},{"size":362,"mtime":499162500000,"results":"49","hashOfConfig":"47"},{"size":1613,"mtime":1611157041439,"results":"50","hashOfConfig":"47"},{"size":493,"mtime":1611599381649,"results":"51","hashOfConfig":"47"},{"size":416,"mtime":1612292256464,"results":"52","hashOfConfig":"47"},{"size":9991,"mtime":1611928106420,"results":"53","hashOfConfig":"47"},{"size":6593,"mtime":1621946098165,"results":"54","hashOfConfig":"47"},{"size":17800,"mtime":1612292050330,"results":"55","hashOfConfig":"47"},{"size":18409,"mtime":1626682489823,"results":"56","hashOfConfig":"47"},{"size":2274,"mtime":1625224728111,"results":"57","hashOfConfig":"47"},{"size":2640,"mtime":1626616008171,"results":"58","hashOfConfig":"47"},{"size":26774,"mtime":1626616015188,"results":"59","hashOfConfig":"47"},{"size":3976,"mtime":1615030928549,"results":"60","hashOfConfig":"47"},{"size":6801,"mtime":1621946337335,"results":"61","hashOfConfig":"47"},{"size":4864,"mtime":1626338895536,"results":"62","hashOfConfig":"47"},{"size":4737,"mtime":1621948733619,"results":"63","hashOfConfig":"47"},{"size":9751,"mtime":1626527208917,"results":"64","hashOfConfig":"47"},{"size":1390,"mtime":1612292917470,"results":"65","hashOfConfig":"47"},{"size":6677,"mtime":1614950245558,"results":"66","hashOfConfig":"47"},{"size":6226,"mtime":1626437822952,"results":"67","hashOfConfig":"47"},{"size":5471,"mtime":1626437882388,"results":"68","hashOfConfig":"47"},{"size":1602,"mtime":1626430555800,"results":"69","hashOfConfig":"47"},{"size":5750,"mtime":1612292786785,"results":"70","hashOfConfig":"47"},{"size":8055,"mtime":1625350672119,"results":"71","hashOfConfig":"47"},{"size":4415,"mtime":1614629017357,"results":"72","hashOfConfig":"47"},{"size":11595,"mtime":1614783813794,"results":"73","hashOfConfig":"47"},{"size":12183,"mtime":1614781124485,"results":"74","hashOfConfig":"47"},{"size":12132,"mtime":1614781810693,"results":"75","hashOfConfig":"47"},{"size":3514,"mtime":1626681559544,"results":"76","hashOfConfig":"47"},{"size":1386,"mtime":1624894447174,"results":"77","hashOfConfig":"47"},{"size":3496,"mtime":1612591429110,"results":"78","hashOfConfig":"47"},{"size":3901,"mtime":1612591565105,"results":"79","hashOfConfig":"47"},{"size":4531,"mtime":1614629400268,"results":"80","hashOfConfig":"47"},{"size":1926,"mtime":1626616532139,"results":"81","hashOfConfig":"47"},{"size":742,"mtime":1625341424040,"results":"82","hashOfConfig":"47"},{"size":532,"mtime":1625336657985,"results":"83","hashOfConfig":"47"},{"size":7647,"mtime":1625350492162,"results":"84","hashOfConfig":"47"},{"size":2407,"mtime":1626617509603,"results":"85","hashOfConfig":"47"},{"size":1262,"mtime":1626455021351,"results":"86","hashOfConfig":"47"},{"size":3752,"mtime":1626457414155,"results":"87","hashOfConfig":"47"},{"size":536,"mtime":1626681484204,"results":"88","hashOfConfig":"47"},{"size":524,"mtime":1626681476884,"results":"89","hashOfConfig":"47"},{"size":526,"mtime":1626681480453,"results":"90","hashOfConfig":"47"},{"size":518,"mtime":1626681458035,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"bngkf6",{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"94"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"94"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"94"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"94"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"94"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"94"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"94"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"163"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"163"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"94"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"94"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\index.js",[],["207","208"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\App.js",["209","210","211"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\reportWebVitals.js",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\PaymentSuccess.jsx",["212","213"],"import React, { Component } from \"react\";\r\nimport \"../css/PaymentSuccess.css\";\r\n\r\nclass PaymentSuccess extends Component {\r\n  state = {};\r\n\r\n  componentDidMount = async () => {\r\n    const res = await fetch(\r\n      \"http://localhost:3001/payment/delete-payment-price-and-cart\",\r\n      {\r\n        method: \"DELETE\",\r\n        body: JSON.stringify({\r\n          userId: localStorage[\"guestToken\"],\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    localStorage.removeItem(\"guestToken\");\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div id=\"bg\">\r\n          <div id=\"card\">\r\n            <span id=\"card__success\">\r\n              <i id=\"ion-checkmark\"></i>\r\n            </span>\r\n\r\n            <h1 id=\"card__msg\">Payment Complete</h1>\r\n            <h2 id=\"card__submsg\">Thank you for your transfer</h2>\r\n            <div id=\"card_body\">\r\n              <img\r\n                src=\"http://nathgreen.co.uk/assets/img/nath.jpg\"\r\n                id=\"card__avatar\"\r\n              />\r\n              <div id=\"card__recipient-info\">\r\n                <p id=\"card__recipient\">Nath Green</p>\r\n                <p id=\"card__email\">hello@nathgreen.co.uk</p>\r\n              </div>\r\n              <h1 id=\"card__price\">\r\n                <span>£</span>20<span>.00</span>\r\n              </h1>\r\n            </div>\r\n            <div id=\"card__tags\">\r\n              <span id=\"card__tag\">completed</span>\r\n              <span id=\"card__tag\">#123456789</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PaymentSuccess;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\LittleCart.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\NavBarCheckout.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\NavbarCheckOutCart.jsx",["214","215","216","217","218"],"import React, { Component } from \"react\";\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\n\r\nclass NavbarCheckOutCart extends Component {\r\n  state = {\r\n    allCart: {},\r\n    cart: [],\r\n    subTotal: \"\",\r\n    tax: 30,\r\n    finalTotal: \"\",\r\n    shippingCost: 50,\r\n    displayCheckOut: false,\r\n    quantity: \"\",\r\n    itemsLength: \"\",\r\n    userId: \"\",\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.getCart();\r\n  };\r\n  getCart = async () => {\r\n    const cartt = [];\r\n    const total = [];\r\n    if (!localStorage[\"userId\"]) {\r\n      const response = await fetch(\r\n        `http://localhost:3003/cart/${localStorage[\"guestToken\"]}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const cart = await response.json();\r\n      cart.products.map((product) => {\r\n        cartt.push(product);\r\n        total.push(product.total);\r\n      });\r\n      const subTotal = parseInt(total.reduce((a, b) => a + b, 0));\r\n      const finalTotal = parseInt(\r\n        subTotal + this.state.tax + this.state.shippingCost\r\n      );\r\n\r\n      this.setState({\r\n        allCart: cart,\r\n        cart: cartt,\r\n        subTotal,\r\n        finalTotal,\r\n        itemsLength: cart.totalItems,\r\n        userId: cart.userId,\r\n      });\r\n      console.log(this.state.allCart);\r\n    } else if (localStorage[\"userId\"]) {\r\n      const response = await fetch(\r\n        `http://localhost:3003/cart/${localStorage[\"userId\"]}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const cart = await response.json();\r\n      cart.products.map((product) => {\r\n        cartt.push(product);\r\n        total.push(product.total);\r\n      });\r\n      const subTotal = parseInt(total.reduce((a, b) => a + b, 0));\r\n      const finalTotal = parseInt(\r\n        subTotal + this.state.tax + this.state.shippingCost\r\n      );\r\n\r\n      this.setState({\r\n        allCart: cart,\r\n        cart: cartt,\r\n        subTotal,\r\n        finalTotal,\r\n        itemsLength: cart.totalItems,\r\n        userId: cart.userId,\r\n      });\r\n      console.log(this.state.allCart);\r\n    }\r\n  };\r\n  increaseQuantity = async (\r\n    id,\r\n    productName,\r\n    productPrice,\r\n    previousQuantity\r\n  ) => {\r\n    const quantity = previousQuantity + 1;\r\n    const productDetails = {\r\n      productId: id,\r\n      quantity: quantity,\r\n      name: productName,\r\n      price: parseInt(productPrice),\r\n      userId: localStorage[\"guestToken\"],\r\n    };\r\n    let response = await fetch(\r\n      `http://localhost:3003/cart/check-out-as-guest`,\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify(productDetails),\r\n        headers: {\r\n          \"Content-Type\": \"Application/json\",\r\n        },\r\n      }\r\n    );\r\n    if (response.ok) {\r\n      const createPriceResponse = await fetch(\r\n        \"http://localhost:3003/payment/create-product-price\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            userId: localStorage[\"guestToken\"],\r\n            productName: productName,\r\n            productPrice: parseInt(productPrice * 100),\r\n            productId: id,\r\n            quantity: quantity,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      this.getCart();\r\n    }\r\n  };\r\n\r\n  decreaseQuantity = async (\r\n    id,\r\n    productName,\r\n    productPrice,\r\n    previousQuantity\r\n  ) => {\r\n    if (previousQuantity === 1) {\r\n      alert(\"Quantity cannot be less than 1\");\r\n    } else {\r\n      const quantity = previousQuantity - 1;\r\n      const productDetails = {\r\n        productId: id,\r\n        quantity: quantity,\r\n        name: productName,\r\n        price: parseInt(productPrice),\r\n        userId: localStorage[\"guestToken\"],\r\n      };\r\n      let response = await fetch(\r\n        `http://localhost:3003/cart/check-out-as-guest`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify(productDetails),\r\n          headers: {\r\n            \"Content-Type\": \"Application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        const createPriceResponse = await fetch(\r\n          \"http://localhost:3003/payment/create-product-price\",\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n              userId: localStorage[\"guestToken\"],\r\n              productName: productName,\r\n              productPrice: parseInt(productPrice * 100),\r\n              productId: id,\r\n              quantity: quantity,\r\n            }),\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        this.getCart();\r\n      }\r\n    }\r\n  };\r\n\r\n  deleteItem = async (user, id) => {\r\n    let response = await fetch(\r\n      `http://localhost:3003/cart/delete-item/${user}/${id}`,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"Application/json\",\r\n        },\r\n      }\r\n    );\r\n    if (response.ok) {\r\n      this.getCart();\r\n    } else {\r\n      alert(\"some\");\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <section>\r\n          <Row>\r\n            <Col lg={8}>\r\n              <Card>\r\n                <Card.Body>\r\n                  <Card.Header>{this.state.itemsLength} items</Card.Header>\r\n                  {this.state.cart.map((item, key) => {\r\n                    return (\r\n                      <Row style={{ paddingTop: \"2rem\" }} key={item._id}>\r\n                        <Col md={5} lg={3} xl={3}>\r\n                          <div className=\"view zoom overlay z-depth-1 rounded mb-3 mb-md-0\">\r\n                            <img className=\"img-fluid w-100\" src={item.image} />\r\n                          </div>\r\n                        </Col>\r\n                        <Col md={7} lg={9} xl={9}>\r\n                          <div>\r\n                            <div className=\"d-flex justify-content-between\">\r\n                              <div>\r\n                                <h5>{item.name}</h5>\r\n                                <p class=\"mb-3 text-muted text-uppercase small\">\r\n                                  Shirt -{item.color}\r\n                                </p>\r\n                                <p class=\"mb-2 text-muted text-uppercase small\">\r\n                                  Color: {item.size}\r\n                                </p>\r\n                                <p class=\"mb-3 text-muted text-uppercase small\">\r\n                                  Size: {item.color}\r\n                                </p>\r\n                              </div>\r\n                              <div className=\"d-flex justify-content-between\">\r\n                                <button\r\n                                  id=\"quantity-increase\"\r\n                                  style={{\r\n                                    width: \"40px\",\r\n                                    height: \"40px\",\r\n                                    marginRight: \"1rem\",\r\n                                  }}\r\n                                  onClick={() =>\r\n                                    this.increaseQuantity(\r\n                                      item.productId,\r\n                                      item.name,\r\n                                      item.price,\r\n                                      item.quantity\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  +\r\n                                </button>\r\n                                <h5>{item.quantity}</h5>\r\n                                <button\r\n                                  id=\"quantity-decrease\"\r\n                                  style={{\r\n                                    width: \"40px\",\r\n                                    height: \"40px\",\r\n                                    marginLeft: \"1rem\",\r\n                                  }}\r\n                                  onClick={() =>\r\n                                    this.decreaseQuantity(\r\n                                      item.productId,\r\n                                      item.name,\r\n                                      item.price,\r\n                                      item.quantity\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  -\r\n                                </button>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"d-flex justify-content-between align-items-center\">\r\n                              <div>\r\n                                <p\r\n                                  onClick={() =>\r\n                                    this.deleteItem(\r\n                                      this.state.allCart.userId,\r\n                                      item._id\r\n                                    )\r\n                                  }\r\n                                >\r\n                                  REMOVE ITEM <i class=\"fa fa-trash\"></i>\r\n                                </p>\r\n                              </div>\r\n                              <p class=\"mb-0\">£ {item.price}</p>\r\n                            </div>\r\n                          </div>\r\n                        </Col>\r\n                      </Row>\r\n                    );\r\n                  })}\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={4}>\r\n              {/* <CartTotal\r\n                subTotal={this.state.subTotal}\r\n                finalTotal={this.state.finalTotal}\r\n                tax={this.state.tax}\r\n                shippingCost={this.state.shippingCost}\r\n                action={this.displayCheckOut}\r\n                userId={this.state.userId}\r\n              /> */}\r\n            </Col>\r\n          </Row>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarCheckOutCart;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\account\\Account.jsx",["219"],"import React, { Component } from \"react\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\n\r\nimport RecentOrders from \"./RecentOrders\";\r\nimport Addaddress from \"./Addaddress\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../css/Account.css\";\r\n\r\nclass Account extends Component {\r\n  state = {\r\n    userDetails: {},\r\n    userAddress: {},\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.getUserDetails();\r\n    this.getUserAddress();\r\n  };\r\n\r\n  getUserDetails = async () => {\r\n    const response = await fetch(\r\n      `http://localhost:3003/users/${localStorage[\"userId\"]}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const userDetails = await response.json();\r\n    this.setState({ userDetails });\r\n  };\r\n\r\n  getUserAddress = async () => {\r\n    const response = await fetch(\r\n      `http://localhost:3003/users/user-address/${localStorage[\"userId\"]}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n\r\n    const userAddress = await response.json();\r\n    this.setState({\r\n      userAddress,\r\n    });\r\n  \r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container className=\"pt-5\">\r\n          {JSON.stringify(this.state.userDetails) === \"{}\" ? (\r\n            <div\r\n              className=\"text-center\"\r\n              style={{ marginTop: \"9rem\", marginBottom: \"9rem\" }}\r\n            >\r\n              <h3>\r\n                You Are Not Logged In, Please Login Or Signup{\" \"}\r\n                <Link to=\"/login\" id=\"login-link\">\r\n                  here\r\n                </Link>\r\n              </h3>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Row className=\"gutters-sm\">\r\n                <Col md={4} className=\"mb-3\">\r\n                  <Card>\r\n                    <Card.Body>\r\n                      <div className=\"d-flex flex-column align-items-center text-center\">\r\n                        <img\r\n                          src=\"https://bootdey.com/img/Content/avatar/avatar7.png\"\r\n                          alt=\"user-picture\"\r\n                          class=\"rounded-circle\"\r\n                          width=\"150\"\r\n                        ></img>\r\n                        <div class=\"mt-3\">\r\n                          <h4>{this.state.userDetails.userName}</h4>\r\n                        </div>\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                {this.state.userAddress.hasOwnProperty(\"message\") ? (\r\n                  <Col md={8}>\r\n                    <Card>\r\n                      <Card.Body>\r\n                        <Row>\r\n                          <Col sm={3}>\r\n                            <h6 class=\"mb-0\">Full Name</h6>\r\n                          </Col>\r\n                          <Col sm={9}>{this.state.userDetails.userName}</Col>\r\n                        </Row>\r\n                        <hr></hr>\r\n                        <Row>\r\n                          <Col sm={3}>\r\n                            <h6 class=\"mb-0\">Email</h6>\r\n                          </Col>\r\n                          <Col sm={9}>{this.state.userDetails.email}</Col>\r\n                        </Row>\r\n                        <hr></hr>\r\n                        <Row>\r\n                          <Col sm={3}>\r\n                            <h6 class=\"mb-0\">Phone Number</h6>\r\n                          </Col>\r\n                          <Col sm={9}>{this.state.userDetails.phoneNumber}</Col>\r\n                        </Row>\r\n                        <hr></hr>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                ) : (\r\n                  <Col md={8}>\r\n                    <Card>\r\n                      <Card.Body>\r\n                        <Row>\r\n                          <Col sm={3}>\r\n                            <h6 class=\"mb-0\">Full Name</h6>\r\n                          </Col>\r\n                          <Col sm={9}>{this.state.userDetails.userName}</Col>\r\n                        </Row>\r\n                        <hr></hr>\r\n                        <Row>\r\n                          <Col sm={3}>\r\n                            <h6 class=\"mb-0\">Email</h6>\r\n                          </Col>\r\n                          <Col sm={9}>{this.state.userDetails.email}</Col>\r\n                        </Row>\r\n                        <hr></hr>\r\n                        <Row>\r\n                          <Col sm={3}>\r\n                            <h6 class=\"mb-0\">Phone Number</h6>\r\n                          </Col>\r\n                          <Col sm={9}>{this.state.userDetails.phoneNumber}</Col>\r\n                        </Row>\r\n                        <hr></hr>\r\n                        <Row>\r\n                          <Col sm={3}>\r\n                            <h6 class=\"mb-0\">Address Line 1</h6>\r\n                          </Col>\r\n                          <Col sm={9}>\r\n                            {this.state.userAddress.addressLine1}\r\n                          </Col>\r\n                        </Row>\r\n                        <hr></hr>\r\n                        <Row>\r\n                          <Col sm={3}>\r\n                            <h6 class=\"mb-0\">County</h6>\r\n                          </Col>\r\n                          <Col sm={9}>{this.state.userAddress.county}</Col>\r\n                        </Row>\r\n                        <hr></hr>\r\n                        <Row>\r\n                          <Col sm={3}>\r\n                            <h6 class=\"mb-0\">Post Code</h6>\r\n                          </Col>\r\n                          <Col sm={9}>{this.state.userAddress.postCode}</Col>\r\n                        </Row>\r\n                        <hr></hr>\r\n                        <Row>\r\n                          <Col sm={3}>\r\n                            <h6 class=\"mb-0\">Country</h6>\r\n                          </Col>\r\n                          <Col sm={9}>{this.state.userAddress.country}</Col>\r\n                        </Row>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                )}\r\n              </Row>\r\n              {this.state.userAddress.hasOwnProperty(\"message\") ? (\r\n                <div>\r\n                  <Addaddress fireGetAddress={() => this.getUserAddress()} />\r\n                </div>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n              <RecentOrders />\r\n            </div>\r\n          )}\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Account;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\account\\Addaddress.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Cart.jsx",["220","221","222","223","224"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\CartTotal.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Checkout.jsx",["225","226","227"],"import React, { Component } from 'react'\r\nimport { Form, Container, Row, Col } from 'react-bootstrap'\r\nimport SignUp from './SignUp'\r\nimport CheckoutasGuest from '../Components/../cart/Checkoutasguest'\r\n\r\nclass Checkout extends Component {\r\n  state = {\r\n    signUpForm: true,\r\n    checkOutAsGuestForm: false,\r\n    backToSignUpText: 'black',\r\n    checkOutAsGuestText: 'orange',\r\n    backToSignUpTextCursor: 'default',\r\n    checkOutAsGuestTextCursor: 'pointer',\r\n  }\r\n\r\n  displayCheckOutAsGuest = () => {\r\n    this.setState({\r\n      checkOutAsGuestForm: true,\r\n      signUpForm: false,\r\n      backToSignUpText: 'orange',\r\n      checkOutAsGuestText: 'black',\r\n      backToSignUpTextCursor: 'pointer',\r\n      checkOutAsGuestTextCursor: 'default',\r\n    })\r\n  }\r\n\r\n  displaySignUpForm = () => {\r\n    this.setState({\r\n      signUpForm: true,\r\n      checkOutAsGuestForm: false,\r\n      backToSignUpText: 'black',\r\n      checkOutAsGuestText: 'orange',\r\n      backToSignUpTextCursor: 'default',\r\n      checkOutAsGuestTextCursor: 'pointer',\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container style={{ marginTop: '3rem' }}>\r\n          <div className=\"text-center\">\r\n            <h5\r\n              style={{\r\n                color: this.state.backToSignUpText,\r\n                cursor: this.state.backToSignUpTextCursor,\r\n                display: 'inline',\r\n              }}\r\n              onClick={() => this.displaySignUpForm()}\r\n            >\r\n              Please register and checkout below to easily get access to your\r\n              order history or{' '}\r\n            </h5>\r\n            <h5\r\n              style={{\r\n                color: this.state.checkOutAsGuestText,\r\n                cursor: this.state.checkOutAsGuestTextCursor,\r\n                display: 'inline-block',\r\n              }}\r\n              onClick={() => this.displayCheckOutAsGuest()}\r\n            >\r\n              checkout as guest\r\n            </h5>\r\n          </div>\r\n          {this.state.signUpForm === true ? (\r\n            <div>\r\n              <SignUp />\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <CheckoutasGuest\r\n                total={this.props.total}\r\n                subTotal={this.props.subTotal}\r\n                productId={this.props.productId}\r\n                sizeId={this.props.sizeId}\r\n                quantity={this.props.quantity}\r\n                stockId={this.props.stockId}\r\n                size={this.props.size}\r\n                currentQuantity={this.props.currentQuantity}\r\n              />\r\n            </div>\r\n          )}\r\n        </Container>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Checkout\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Checkoutasguest.jsx",["228","229","230","231"],"import React, { Component } from 'react'\r\nimport { Form, Row, Col, Alert } from 'react-bootstrap'\r\nimport '../../css/Signup.css'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\nimport Paypalpayment from './Paypalpayment'\r\nimport orderConfirmed from './OrderConfirmed'\r\nconst stripeTestPromise = loadStripe(\r\n  'pk_test_51HrjVqFcebO7I650cr4OP6bitBa3ExCpu3Fc3IkYuA36TjnMdbPDmsTz6PejmS9LRDMRwpdB4fKqeTCqjZaDK8Xp003k14DkTf',\r\n)\r\n\r\nclass Checkoutasguest extends Component {\r\n  state = {\r\n    deliverTo: {\r\n      title: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      addressLine1: '',\r\n      postCode: '',\r\n      county: '',\r\n      country: '',\r\n      email: '',\r\n    },\r\n    checkBox: false,\r\n    redirectToStripeSuccess: false,\r\n    showPayPal: false,\r\n  }\r\n\r\n  updateDeliverTo = (event) => {\r\n    let deliverTo = this.state.deliverTo\r\n    let id = event.currentTarget.id\r\n    deliverTo[id] = event.currentTarget.value\r\n    this.setState({\r\n      deliverTo,\r\n    })\r\n  }\r\n\r\n  confirmBillAddress = () => {\r\n    this.setState({\r\n      checkBox: true,\r\n    })\r\n  }\r\n\r\n  sendUserOrderDetails = async () => {\r\n    const response = await fetch(\r\n      `http://localhost:3003/users/user-order/${localStorage['userId']}`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      },\r\n    )\r\n  }\r\n\r\n  checkOut = async (e) => {\r\n    e.preventDefault()\r\n    this.setState({ showPayPal: true })\r\n  }\r\n\r\n  // checkOut = async () => {\r\n  //   if (!localStorage['userId']) {\r\n  //     const stripe = await stripeTestPromise\r\n  //     const res = await fetch(\r\n  //       'http://localhost:3003/payment/create-checkout-session',\r\n  //       {\r\n  //         method: 'POST',\r\n  //         body: JSON.stringify({\r\n  //           userId: localStorage['guestToken'],\r\n  //         }),\r\n  //         headers: {\r\n  //           'Content-Type': 'application/json',\r\n  //         },\r\n  //       },\r\n  //     )\r\n  //     const session = await res.json()\r\n  //     const result = await stripe.redirectToCheckout({\r\n  //       sessionId: session.id,\r\n  //     })\r\n  //     console.log(result)\r\n  //     // if (result.error) {\r\n  //     //   console.log(result.error.message)\r\n  //     // } else {\r\n  //     //   this.sendUserOrderDetails()\r\n  //     // }\r\n  //   } else if (localStorage['userId']) {\r\n  //     const stripe = await stripeTestPromise\r\n  //     const res = await fetch(\r\n  //       'http://localhost:3003/payment/create-checkout-session',\r\n  //       {\r\n  //         method: 'POST',\r\n  //         body: JSON.stringify({\r\n  //           userId: localStorage['userId'],\r\n  //         }),\r\n  //         headers: {\r\n  //           'Content-Type': 'application/json',\r\n  //         },\r\n  //       },\r\n  //     )\r\n\r\n  //     const session = await res.json()\r\n  //     const result = await stripe.redirectToCheckout({\r\n  //       sessionId: session.id,\r\n  //     })\r\n\r\n  //     if (result.error) {\r\n  //       console.log(result.error.message)\r\n  //     } else {\r\n  //       this.sendUserOrderDetails()\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  sendOrderDetails = async (e) => {\r\n    e.preventDefault()\r\n    if (localStorage['guestToken']) {\r\n      const res = await fetch('http://localhost:3003/orders/new-order', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          customerId: this.state.deliverTo.email,\r\n          customerName:\r\n            this.state.deliverTo.title +\r\n            ' ' +\r\n            this.state.deliverTo.firstName +\r\n            ' ' +\r\n            this.state.deliverTo.lastName,\r\n          addressLine1: this.state.deliverTo.addressLine1,\r\n          county: this.state.deliverTo.county,\r\n          country: this.state.deliverTo.country,\r\n          postCode: this.state.deliverTo.postCode,\r\n          subTotal: 234,\r\n          userId: localStorage['guestToken'],\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      if (res.status === 200) {\r\n        this.setState({\r\n          deliverTo: {\r\n            title: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            addressLine1: '',\r\n            postCode: '',\r\n            county: '',\r\n            country: '',\r\n            email: '',\r\n          },\r\n          redirectToStripeSuccess: true,\r\n        })\r\n        setTimeout(() => {\r\n          this.setState({\r\n            redirectToStripeSuccess: false,\r\n          })\r\n        }, 2000)\r\n        this.checkOut()\r\n      } else {\r\n        alert('Something went wrong')\r\n      }\r\n    } else if (localStorage['userId']) {\r\n      const res = await fetch('http://localhost:3003/orders/new-order', {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          customerId: this.state.deliverTo.email,\r\n          customerName:\r\n            this.state.deliverTo.title +\r\n            ' ' +\r\n            this.state.deliverTo.firstName +\r\n            ' ' +\r\n            this.state.deliverTo.lastName,\r\n          addressLine1: this.state.deliverTo.addressLine1,\r\n          county: this.state.deliverTo.county,\r\n          country: this.state.deliverTo.country,\r\n          postCode: this.state.deliverTo.postCode,\r\n          subTotal: 234,\r\n          userId: localStorage['userId'],\r\n        }),\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      if (res.status === 200) {\r\n        this.setState({\r\n          deliverTo: {\r\n            title: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            addressLine1: '',\r\n            postCode: '',\r\n            county: '',\r\n            country: '',\r\n            email: '',\r\n          },\r\n          redirectToStripeSuccess: false,\r\n        })\r\n        this.checkOut()\r\n      } else {\r\n        alert('Something went wrong')\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h5>Delivery address</h5>\r\n        <Form>\r\n          <Row>\r\n            <Col>\r\n              <Form.Group>\r\n                <Form.Label htmlFor=\"title\">Title</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  id=\"title\"\r\n                  required\r\n                  onChange={(e) => this.updateDeliverTo(e)}\r\n                  value={this.state.deliverTo.title}\r\n                  defaultValue=\"Select Gender\"\r\n                >\r\n                  <option>Select title</option>\r\n                  <option value=\"Mr\">Mr</option>\r\n                  <option value=\"Miss\">Miss</option>\r\n                  <option value=\"Mrs\">Mrs</option>\r\n                  <option value=\"Other\">Prefer Not To Say</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label htmlFor=\"firstName\">First Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Ex. John\"\r\n                  id=\"firstName\"\r\n                  onChange={(e) => this.updateDeliverTo(e)}\r\n                  value={this.state.deliverTo.firstName}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label htmlFor=\"lastName\">Last Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Ex. John\"\r\n                  id=\"lastName\"\r\n                  onChange={(e) => this.updateDeliverTo(e)}\r\n                  value={this.state.deliverTo.lastName}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label htmlFor=\"country\">Country</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  id=\"country\"\r\n                  required\r\n                  onChange={(e) => this.updateDeliverTo(e)}\r\n                  value={this.state.deliverTo.country}\r\n                  defaultValue=\"Choose Country\"\r\n                >\r\n                  <option>Select Country</option>\r\n                  <option value=\" AF\">Afghanistan</option>\r\n                  <option value=\"AX\">Åland Islands</option>\r\n                  <option value=\"AL\">Albania</option>\r\n                  <option value=\"DZ\">Algeria</option>\r\n                  <option value=\"AS\">American Samoa</option>\r\n                  <option value=\"AD\">Andorra</option>\r\n                  <option value=\"AO\">Angola</option>\r\n                  <option value=\"AI\">Anguilla</option>\r\n                  <option value=\"AQ\">Antarctica</option>\r\n                  <option value=\"AG\">Antigua and Barbuda</option>\r\n                  <option value=\"AR\">Argentina</option>\r\n                  <option value=\"AM\">Armenia</option>\r\n                  <option value=\"AW\">Aruba</option>\r\n                  <option value=\"AU\">Australia</option>\r\n                  <option value=\"AT\">Austria</option>\r\n                  <option value=\"AZ\">Azerbaijan</option>\r\n                  <option value=\"BS\">Bahamas</option>\r\n                  <option value=\"BH\">Bahrain</option>\r\n                  <option value=\"BD\">Bangladesh</option>\r\n                  <option value=\"BB\">Barbados</option>\r\n                  <option value=\"BY\">Belarus</option>\r\n                  <option value=\"BE\">Belgium</option>\r\n                  <option value=\"BZ\">Belize</option>\r\n                  <option value=\"BJ\">Benin</option>\r\n                  <option value=\"BM\">Bermuda</option>\r\n                  <option value=\"BT\">Bhutan</option>\r\n                  <option value=\"BO\">Bolivia, Plurinational State of</option>\r\n                  <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\r\n                  <option value=\"BA\">Bosnia and Herzegovina</option>\r\n                  <option value=\"BW\">Botswana</option>\r\n                  <option value=\"BV\">Bouvet Island</option>\r\n                  <option value=\"BR\">Brazil</option>\r\n                  <option value=\"IO\">British Indian Ocean Territory</option>\r\n                  <option value=\"BN\">Brunei Darussalam</option>\r\n                  <option value=\"BG\">Bulgaria</option>\r\n                  <option value=\"BF\">Burkina Faso</option>\r\n                  <option value=\"BI\">Burundi</option>\r\n                  <option value=\"KH\">Cambodia</option>\r\n                  <option value=\"CM\">Cameroon</option>\r\n                  <option value=\"CA\">Canada</option>\r\n                  <option value=\"CV\">Cape Verde</option>\r\n                  <option value=\"KY\">Cayman Islands</option>\r\n                  <option value=\"CF\">Central African Republic</option>\r\n                  <option value=\"TD\">Chad</option>\r\n                  <option value=\"CL\">Chile</option>\r\n                  <option value=\"CN\">China</option>\r\n                  <option value=\"CX\">Christmas Island</option>\r\n                  <option value=\"CC\">Cocos (Keeling) Islands</option>\r\n                  <option value=\"CO\">Colombia</option>\r\n                  <option value=\"KM\">Comoros</option>\r\n                  <option value=\"CG\">Congo</option>\r\n                  <option value=\"CD\">\r\n                    Congo, the Democratic Republic of the\r\n                  </option>\r\n                  <option value=\"CK\">Cook Islands</option>\r\n                  <option value=\"CR\">Costa Rica</option>\r\n                  <option value=\"CI\">Côte d'Ivoire</option>\r\n                  <option value=\"HR\">Croatia</option>\r\n                  <option value=\"CU\">Cuba</option>\r\n                  <option value=\"CW\">Curaçao</option>\r\n                  <option value=\"CY\">Cyprus</option>\r\n                  <option value=\"CZ\">Czech Republic</option>\r\n                  <option value=\"DK\">Denmark</option>\r\n                  <option value=\"DJ\">Djibouti</option>\r\n                  <option value=\"DM\">Dominica</option>\r\n                  <option value=\"DO\">Dominican Republic</option>\r\n                  <option value=\"EC\">Ecuador</option>\r\n                  <option value=\"EG\">Egypt</option>\r\n                  <option value=\"SV\">El Salvador</option>\r\n                  <option value=\"GQ\">Equatorial Guinea</option>\r\n                  <option value=\"ER\">Eritrea</option>\r\n                  <option value=\"EE\">Estonia</option>\r\n                  <option value=\"ET\">Ethiopia</option>\r\n                  <option value=\"FK\">Falkland Islands (Malvinas)</option>\r\n                  <option value=\"FO\">Faroe Islands</option>\r\n                  <option value=\"FJ\">Fiji</option>\r\n                  <option value=\"FI\">Finland</option>\r\n                  <option value=\"FR\">France</option>\r\n                  <option value=\"GF\">French Guiana</option>\r\n                  <option value=\"PF\">French Polynesia</option>\r\n                  <option value=\"TF\">French Southern Territories</option>\r\n                  <option value=\"GA\">Gabon</option>\r\n                  <option value=\"GM\">Gambia</option>\r\n                  <option value=\"GE\">Georgia</option>\r\n                  <option value=\"DE\">Germany</option>\r\n                  <option value=\"GH\">Ghana</option>\r\n                  <option value=\"GI\">Gibraltar</option>\r\n                  <option value=\"GR\">Greece</option>\r\n                  <option value=\"GL\">Greenland</option>\r\n                  <option value=\"GD\">Grenada</option>\r\n                  <option value=\"GP\">Guadeloupe</option>\r\n                  <option value=\"GU\">Guam</option>\r\n                  <option value=\"GT\">Guatemala</option>\r\n                  <option value=\"GG\">Guernsey</option>\r\n                  <option value=\"GN\">Guinea</option>\r\n                  <option value=\"GW\">Guinea-Bissau</option>\r\n                  <option value=\"GY\">Guyana</option>\r\n                  <option value=\"HT\">Haiti</option>\r\n                  <option value=\"HM\">Heard Island and McDonald Islands</option>\r\n                  <option value=\"VA\">Holy See (Vatican City State)</option>\r\n                  <option value=\"HN\">Honduras</option>\r\n                  <option value=\"HK\">Hong Kong</option>\r\n                  <option value=\"HU\">Hungary</option>\r\n                  <option value=\"IS\">Iceland</option>\r\n                  <option value=\"IN\">India</option>\r\n                  <option value=\"ID\">Indonesia</option>\r\n                  <option value=\"IR\">Iran, Islamic Republic of</option>\r\n                  <option value=\"IQ\">Iraq</option>\r\n                  <option value=\"IE\">Ireland</option>\r\n                  <option value=\"IM\">Isle of Man</option>\r\n                  <option value=\"IL\">Israel</option>\r\n                  <option value=\"IT\">Italy</option>\r\n                  <option value=\"JM\">Jamaica</option>\r\n                  <option value=\"JP\">Japan</option>\r\n                  <option value=\"JE\">Jersey</option>\r\n                  <option value=\"JO\">Jordan</option>\r\n                  <option value=\"KZ\">Kazakhstan</option>\r\n                  <option value=\"KE\">Kenya</option>\r\n                  <option value=\"KI\">Kiribati</option>\r\n                  <option value=\"KP\">\r\n                    Korea, Democratic People's Republic of\r\n                  </option>\r\n                  <option value=\"KR\">Korea, Republic of</option>\r\n                  <option value=\"KW\">Kuwait</option>\r\n                  <option value=\"KG\">Kyrgyzstan</option>\r\n                  <option value=\"LA\">Lao People's Democratic Republic</option>\r\n                  <option value=\"LV\">Latvia</option>\r\n                  <option value=\"LB\">Lebanon</option>\r\n                  <option value=\"LS\">Lesotho</option>\r\n                  <option value=\"LR\">Liberia</option>\r\n                  <option value=\"LY\">Libya</option>\r\n                  <option value=\"LI\">Liechtenstein</option>\r\n                  <option value=\"LT\">Lithuania</option>\r\n                  <option value=\"LU\">Luxembourg</option>\r\n                  <option value=\"MO\">Macao</option>\r\n                  <option value=\"MK\">\r\n                    Macedonia, the former Yugoslav Republic of\r\n                  </option>\r\n                  <option value=\"MG\">Madagascar</option>\r\n                  <option value=\"MW\">Malawi</option>\r\n                  <option value=\"MY\">Malaysia</option>\r\n                  <option value=\"MV\">Maldives</option>\r\n                  <option value=\"ML\">Mali</option>\r\n                  <option value=\"MT\">Malta</option>\r\n                  <option value=\"MH\">Marshall Islands</option>\r\n                  <option value=\"MQ\">Martinique</option>\r\n                  <option value=\"MR\">Mauritania</option>\r\n                  <option value=\"MU\">Mauritius</option>\r\n                  <option value=\"YT\">Mayotte</option>\r\n                  <option value=\"MX\">Mexico</option>\r\n                  <option value=\"FM\">Micronesia, Federated States of</option>\r\n                  <option value=\"MD\">Moldova, Republic of</option>\r\n                  <option value=\"MC\">Monaco</option>\r\n                  <option value=\"MN\">Mongolia</option>\r\n                  <option value=\"ME\">Montenegro</option>\r\n                  <option value=\"MS\">Montserrat</option>\r\n                  <option value=\"MA\">Morocco</option>\r\n                  <option value=\"MZ\">Mozambique</option>\r\n                  <option value=\"MM\">Myanmar</option>\r\n                  <option value=\"NA\">Namibia</option>\r\n                  <option value=\"NR\">Nauru</option>\r\n                  <option value=\"NP\">Nepal</option>\r\n                  <option value=\"NL\">Netherlands</option>\r\n                  <option value=\"NC\">New Caledonia</option>\r\n                  <option value=\"NZ\">New Zealand</option>\r\n                  <option value=\"NI\">Nicaragua</option>\r\n                  <option value=\"NE\">Niger</option>\r\n                  <option value=\"NG\">Nigeria</option>\r\n                  <option value=\"NU\">Niue</option>\r\n                  <option value=\"NF\">Norfolk Island</option>\r\n                  <option value=\"MP\">Northern Mariana Islands</option>\r\n                  <option value=\"NO\">Norway</option>\r\n                  <option value=\"OM\">Oman</option>\r\n                  <option value=\"PK\">Pakistan</option>\r\n                  <option value=\"PW\">Palau</option>\r\n                  <option value=\"PS\">Palestinian Territory, Occupied</option>\r\n                  <option value=\"PA\">Panama</option>\r\n                  <option value=\"PG\">Papua New Guinea</option>\r\n                  <option value=\"PY\">Paraguay</option>\r\n                  <option value=\"PE\">Peru</option>\r\n                  <option value=\"PH\">Philippines</option>\r\n                  <option value=\"PN\">Pitcairn</option>\r\n                  <option value=\"PL\">Poland</option>\r\n                  <option value=\"PT\">Portugal</option>\r\n                  <option value=\"PR\">Puerto Rico</option>\r\n                  <option value=\"QA\">Qatar</option>\r\n                  <option value=\"RE\">Réunion</option>\r\n                  <option value=\"RO\">Romania</option>\r\n                  <option value=\"RU\">Russian Federation</option>\r\n                  <option value=\"RW\">Rwanda</option>\r\n                  <option value=\"BL\">Saint Barthélemy</option>\r\n                  <option value=\"SH\">\r\n                    Saint Helena, Ascension and Tristan da Cunha\r\n                  </option>\r\n                  <option value=\"KN\">Saint Kitts and Nevis</option>\r\n                  <option value=\"LC\">Saint Lucia</option>\r\n                  <option value=\"MF\">Saint Martin (French part)</option>\r\n                  <option value=\"PM\">Saint Pierre and Miquelon</option>\r\n                  <option value=\"VC\">Saint Vincent and the Grenadines</option>\r\n                  <option value=\"WS\">Samoa</option>\r\n                  <option value=\"SM\">San Marino</option>\r\n                  <option value=\"ST\">Sao Tome and Principe</option>\r\n                  <option value=\"SA\">Saudi Arabia</option>\r\n                  <option value=\"SN\">Senegal</option>\r\n                  <option value=\"RS\">Serbia</option>\r\n                  <option value=\"SC\">Seychelles</option>\r\n                  <option value=\"SL\">Sierra Leone</option>\r\n                  <option value=\"SG\">Singapore</option>\r\n                  <option value=\"SX\">Sint Maarten (Dutch part)</option>\r\n                  <option value=\"SK\">Slovakia</option>\r\n                  <option value=\"SI\">Slovenia</option>\r\n                  <option value=\"SB\">Solomon Islands</option>\r\n                  <option value=\"SO\">Somalia</option>\r\n                  <option value=\"ZA\">South Africa</option>\r\n                  <option value=\"GS\">\r\n                    South Georgia and the South Sandwich Islands\r\n                  </option>\r\n                  <option value=\"SS\">South Sudan</option>\r\n                  <option value=\"ES\">Spain</option>\r\n                  <option value=\"LK\">Sri Lanka</option>\r\n                  <option value=\"SD\">Sudan</option>\r\n                  <option value=\"SR\">Suriname</option>\r\n                  <option value=\"SJ\">Svalbard and Jan Mayen</option>\r\n                  <option value=\"SZ\">Swaziland</option>\r\n                  <option value=\"SE\">Sweden</option>\r\n                  <option value=\"CH\">Switzerland</option>\r\n                  <option value=\"SY\">Syrian Arab Republic</option>\r\n                  <option value=\"TW\">Taiwan, Province of China</option>\r\n                  <option value=\"TJ\">Tajikistan</option>\r\n                  <option value=\"TZ\">Tanzania, United Republic of</option>\r\n                  <option value=\"TH\">Thailand</option>\r\n                  <option value=\"TL\">Timor-Leste</option>\r\n                  <option value=\"TG\">Togo</option>\r\n                  <option value=\"TK\">Tokelau</option>\r\n                  <option value=\"TO\">Tonga</option>\r\n                  <option value=\"TT\">Trinidad and Tobago</option>\r\n                  <option value=\"TN\">Tunisia</option>\r\n                  <option value=\"TR\">Turkey</option>\r\n                  <option value=\"TM\">Turkmenistan</option>\r\n                  <option value=\"TC\">Turks and Caicos Islands</option>\r\n                  <option value=\"TV\">Tuvalu</option>\r\n                  <option value=\"UG\">Uganda</option>\r\n                  <option value=\"UA\">Ukraine</option>\r\n                  <option value=\"AE\">United Arab Emirates</option>\r\n                  <option value=\"GB\">United Kingdom</option>\r\n                  <option value=\"US\">United States</option>\r\n                  <option value=\"UM\">\r\n                    United States Minor Outlying Islands\r\n                  </option>\r\n                  <option value=\"UY\">Uruguay</option>\r\n                  <option value=\"UZ\">Uzbekistan</option>\r\n                  <option value=\"VU\">Vanuatu</option>\r\n                  <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\r\n                  <option value=\"VN\">Viet Nam</option>\r\n                  <option value=\"VG\">Virgin Islands, British</option>\r\n                  <option value=\"VI\">Virgin Islands, U.S.</option>\r\n                  <option value=\"WF\">Wallis and Futuna</option>\r\n                  <option value=\"EH\">Western Sahara</option>\r\n                  <option value=\"YE\">Yemen</option>\r\n                  <option value=\"ZM\">Zambia</option>\r\n                  <option value=\"ZW\">Zimbabwe</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n              {/* \r\n              <Form.Group id=\"billAddressNotDelivery\">\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  label=\"Billing address different from delivery? Click here\"\r\n                  onChange={() => this.confirmBillAddress()}\r\n                  default={this.state.checkBox}\r\n                  defaultValue={this.state.checkBox}\r\n                />\r\n              </Form.Group> */}\r\n            </Col>\r\n            <Col>\r\n              <Form.Group>\r\n                <Form.Label htmlFor=\"addressLine1\">Address Line 1</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Adress Line 1\"\r\n                  id=\"addressLine1\"\r\n                  onChange={(e) => this.updateDeliverTo(e)}\r\n                  value={this.state.deliverTo.addressline1}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Ex . john@john.com\"\r\n                  id=\"email\"\r\n                  onChange={(e) => this.updateDeliverTo(e)}\r\n                  value={this.state.deliverTo.email}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label htmlFor=\"county\">County</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"County\"\r\n                  id=\"county\"\r\n                  onChange={(e) => this.updateDeliverTo(e)}\r\n                  value={this.state.deliverTo.county}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.Label htmlFor=\"postCode\">Post Code</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Post Code\"\r\n                  id=\"postCode\"\r\n                  onChange={(e) => this.updateDeliverTo(e)}\r\n                  value={this.state.deliverTo.postCode}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          {this.state.showPayPal === true ? (\r\n            <Paypalpayment\r\n              total={this.props.total}\r\n              subTotal={this.props.subTotal}\r\n              fullName={\r\n                this.state.deliverTo.title +\r\n                ' ' +\r\n                this.state.deliverTo.firstName +\r\n                ' ' +\r\n                this.state.deliverTo.lastName\r\n              }\r\n              addressLine1={this.state.deliverTo.addressLine1}\r\n              city={this.state.deliverTo.county}\r\n              postCode={this.state.deliverTo.postCode}\r\n              email={this.state.deliverTo.email}\r\n              productId={this.props.productId}\r\n              sizeId={this.props.sizeId}\r\n              quantity={this.props.quantity}\r\n              stockId={this.props.stockId}\r\n              size={this.props.size}\r\n              currentQuantity={this.props.currentQuantity}\r\n            />\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {/* \r\n          {this.state.redirectToStripeSuccess === true ? (\r\n            <div>\r\n              <Alert id=\"alert\" className=\"text-center\">\r\n                <p className=\"pt-2\">\r\n                  Please wait to be redirected to the payment page.\r\n                </p>\r\n              </Alert>\r\n            </div>\r\n          ) : (\r\n            <div></div>\r\n          )} */}\r\n\r\n          <div className=\"text-center\">\r\n            <button onClick={(e) => this.checkOut(e)} id=\"check-out\">\r\n              Proceed to payment\r\n            </button>\r\n          </div>\r\n        </Form>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Checkoutasguest\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\login\\Login.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\account\\RecentOrders.jsx",["232","233"],"import React, { Component } from 'react'\r\nimport { Container, Row, Col, Card, Alert } from 'react-bootstrap'\r\nimport { findAllInRenderedTree } from 'react-dom/test-utils'\r\nimport '../../css/RecentOrders.css'\r\n\r\nclass RecentOrders extends Component {\r\n  state = {\r\n    recentOrdersEmpty: {},\r\n    recentOrdersProducts: [],\r\n    quantity: 1,\r\n    alert: false,\r\n    errorAlert: false,\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const response = await fetch(\r\n      `http://localhost:3003/users/user-order/${localStorage['userId']}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      },\r\n    )\r\n\r\n    const recentOrders = await response.json()\r\n\r\n    if (recentOrders.message === 'No Order Available') {\r\n      this.setState({ recentOrdersEmpty: recentOrders.message })\r\n    } else {\r\n      this.setState({ recentOrdersProducts: recentOrders.products })\r\n    }\r\n  }\r\n  reOrderItem = async (\r\n    id,\r\n    productImage,\r\n    productName,\r\n    productSize,\r\n    productColor,\r\n    productPrice,\r\n  ) => {\r\n    try {\r\n      const productDetails = {\r\n        productId: id,\r\n        quantity: this.state.quantity,\r\n        image: productImage,\r\n        name: productName,\r\n        size: productSize,\r\n        color: productColor,\r\n        price: parseInt(productPrice),\r\n\r\n        userId: localStorage['userId'],\r\n      }\r\n      let response = await fetch(\r\n        `http://localhost:3003/cart/check-out-as-guest`,\r\n        {\r\n          method: 'POST',\r\n          body: JSON.stringify(productDetails),\r\n          headers: {\r\n            'Content-Type': 'Application/json',\r\n          },\r\n        },\r\n      )\r\n      if (response.ok) {\r\n        const createPriceResponse = await fetch(\r\n          'http://localhost:3003/payment/create-product-price',\r\n          {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n              userId: localStorage['userId'],\r\n              productName: productName,\r\n              productPrice: parseInt(productPrice * 100),\r\n              productId: id,\r\n              quantity: this.state.quantity,\r\n            }),\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n          },\r\n        )\r\n        if (createPriceResponse.ok) {\r\n          this.setState({ alert: true })\r\n          setTimeout(() => {\r\n            this.setState({\r\n              alert: false,\r\n            })\r\n          }, 1200)\r\n        }\r\n      } else {\r\n        this.setState({ errorAlert: true })\r\n        setTimeout(() => {\r\n          this.setState({\r\n            errorAlert: false,\r\n          })\r\n        }, 1200)\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container className=\"pt-5\">\r\n          <h3 className=\"text-center pb-3\">Your recent orders</h3>\r\n          {this.state.recentOrdersProducts.length === 0 ? (\r\n            <div>\r\n              <h5\r\n                className=\"text-center mb-5 mt-5\"\r\n                style={{ fontSize: '35px' }}\r\n              >\r\n                No Recent Orders To Display\r\n              </h5>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              {this.state.recentOrdersProducts.map((product, key) => {\r\n                return (\r\n                  <Row className=\"gutters-sm\" style={{ marginBottom: '2rem' }}>\r\n                    <Col md={4} className=\"mb-3\">\r\n                      <Card>\r\n                        <Card.Body>\r\n                          <div className=\"d-flex flex-column align-items-center text-center\">\r\n                            <img\r\n                              src={product.image}\r\n                              alt=\"user-picture\"\r\n                              class=\"rounded-circle\"\r\n                              width=\"150\"\r\n                            ></img>\r\n                          </div>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    </Col>\r\n                    <Col md={8}>\r\n                      <Card>\r\n                        <Card.Body>\r\n                          <Row style={{ marginTop: '1rem' }}>\r\n                            <Col sm={3}></Col>\r\n                            <Col sm={9}>\r\n                              <h5>{product.name}</h5>\r\n                            </Col>\r\n                          </Row>\r\n                          <hr></hr>\r\n\r\n                          <Row style={{ marginTop: '1rem' }}>\r\n                            <Col sm={3}>\r\n                              <h6 class=\"mb-0\">Price</h6>\r\n                            </Col>\r\n                            <Col sm={9}>£ {product.price}</Col>\r\n                          </Row>\r\n                          <Row style={{ marginTop: '1rem' }}>\r\n                            <Col sm={3}>\r\n                              <h6 class=\"mb-0\">Size</h6>\r\n                            </Col>\r\n                            <Col sm={9}>{product.size}</Col>\r\n                          </Row>\r\n                          <Row style={{ marginTop: '1rem' }}>\r\n                            <Col sm={3}>\r\n                              <h6 class=\"mb-0\">Color</h6>\r\n                            </Col>\r\n                            <Col sm={9}>{product.color}</Col>\r\n                          </Row>\r\n                          <hr></hr>\r\n                        </Card.Body>\r\n                        <div\r\n                          className=\"text-center\"\r\n                          style={{\r\n                            marginBottom: '2rem',\r\n                            marginTop: '1rem',\r\n                            width: '20%',\r\n                          }}\r\n                        >\r\n                          <button\r\n                            id=\"reorder-button\"\r\n                            onClick={() =>\r\n                              this.reOrderItem(\r\n                                product._id,\r\n                                product.image,\r\n                                product.name,\r\n                                product.size,\r\n                                product.color,\r\n                                product.price,\r\n                              )\r\n                            }\r\n                          >\r\n                            Reorder\r\n                          </button>\r\n                        </div>\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                )\r\n              })}\r\n            </div>\r\n          )}\r\n          {this.state.alert === true ? (\r\n            <Alert id=\"alert\">\r\n              <h5 className=\"text-center\">Item Added To Cart</h5>\r\n            </Alert>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </Container>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RecentOrders\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\wishlist\\WishList.jsx",["234"],"import React, { Component } from 'react'\r\nimport { Container, Row, Col, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport '../../css/Account.css'\r\n\r\nclass WishList extends Component {\r\n  state = {\r\n    noWishlist: {},\r\n    wishList: [],\r\n    noUserSignedIn: false,\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const guestToken = sessionStorage.getItem('guestToken')\r\n    const userId = sessionStorage.getItem('userId')\r\n    if (userId) {\r\n      const response = await fetch(`http://localhost:3003/wishlist/${userId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      })\r\n      const wishList = await response.json()\r\n      if (wishList.hasOwnProperty('message')) {\r\n        this.setState({\r\n          noWishlist: wishList,\r\n        })\r\n      } else {\r\n        this.setState({\r\n          wishList: wishList.products,\r\n        })\r\n      }\r\n    } else if (guestToken) {\r\n      this.setState({\r\n        noUserSignedIn: true,\r\n      })\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container className=\"pt-5\">\r\n          {this.state.noUserSignedIn === true ? (\r\n            <div\r\n              className=\"text-center\"\r\n              style={{ marginTop: '9rem', marginBottom: '9rem' }}\r\n            >\r\n              <h3>\r\n                You Are Not Logged In, Please Login Or Signup {''}\r\n                <Link to=\"/login\" id=\"login-link\">\r\n                  here\r\n                </Link>{' '}\r\n                to add items to wishlist.\r\n              </h3>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              {' '}\r\n              {this.state.noWishlist.hasOwnProperty('message') ? (\r\n                <div\r\n                  className=\"text-center\"\r\n                  style={{ marginTop: '10rem', marginBottom: '5rem' }}\r\n                >\r\n                  <h3>Wishlist is empty, please add items</h3>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  {this.state.wishList.map((item, key) => {\r\n                    return (\r\n                      <Row\r\n                        className=\"gutters-sm\"\r\n                        style={{ marginBottom: '2rem' }}\r\n                      >\r\n                        <Col md={4} className=\"mb-3\">\r\n                          <Card>\r\n                            <Card.Body>\r\n                              <div className=\"d-flex flex-column align-items-center text-center\">\r\n                                <img\r\n                                  src={item.image}\r\n                                  alt=\"user-picture\"\r\n                                  width=\"250\"\r\n                                ></img>\r\n                              </div>\r\n                            </Card.Body>\r\n                          </Card>\r\n                        </Col>\r\n                        <Col md={8}>\r\n                          <Card>\r\n                            <Card.Body>\r\n                              <Row style={{ marginTop: '1rem' }}>\r\n                                <Col sm={3}></Col>\r\n                                <Col sm={9}>\r\n                                  <h5>{item.name}</h5>\r\n                                </Col>\r\n                              </Row>\r\n\r\n                              <Row style={{ marginTop: '1rem' }}>\r\n                                <Col sm={3}>\r\n                                  <h6 class=\"mb-0\">Price</h6>\r\n                                </Col>\r\n                                <Col sm={9}>£ {item.price}</Col>\r\n                              </Row>\r\n                            </Card.Body>\r\n                            {/* <div\r\n                          className=\"text-center\"\r\n                          style={{\r\n                            marginBottom: \"2rem\",\r\n                            marginTop: \"1rem\",\r\n                            width: \"20%\",\r\n                          }}\r\n                        >\r\n                          <button\r\n                            onClick={() =>\r\n                              this.reOrderItem(\r\n                                product._id,\r\n                                product.image,\r\n                                product.name,\r\n                                product.size,\r\n                                product.color,\r\n                                product.price\r\n                              )\r\n                            }\r\n                          >\r\n                            Reorder\r\n                          </button>\r\n                        </div> */}\r\n                          </Card>\r\n                        </Col>\r\n                      </Row>\r\n                    )\r\n                  })}\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </Container>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default WishList\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\navbar\\NavSocialMedia.jsx",["235","236","237"],"import React, { Component } from 'react'\r\nimport jpglogo from '../../assets/logo2.png'\r\nimport '../../css/NavSocialMedia.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {\r\n  faUser,\r\n  faStar,\r\n  faCrosshairs,\r\n  faShoppingCart,\r\n  faLock,\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport { Link } from 'react-router-dom'\r\nimport LittleCart from '../LittleCart'\r\n\r\nclass NavSocialMedia extends Component {\r\n  state = {\r\n    displayLittleCart: false,\r\n  }\r\n\r\n  displayCart = () => {\r\n    this.setState({ displayLittleCart: true })\r\n  }\r\n  render() {\r\n    return (\r\n      <header id=\"header\">\r\n        <div className=\"header_top\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"d-flex justify-content-between social-icons pull-right\">\r\n                <ul>\r\n                  <li>\r\n                    <a\r\n                      href=\"https://www.facebook.com/johnpaulstephenofficial\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      <i className=\"fa fa-facebook\"></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\"https://twitter.com/JohnPaulStephe8\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      <i className=\"fa fa-twitter\"></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\" https://www.youtube.com/channel/UC-fAzdzdg7gR8RzsSQkq43Q\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      <i class=\"fa fa-youtube\"></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\" https://www.instagram.com/johnpaulstephen_jps/\"\r\n                      target=\"_blank\"\r\n                    >\r\n                      <i class=\"fa fa-instagram\"></i>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"header-middle\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-4 clearfix\">\r\n                <div className=\"logo pull-left\">\r\n                  <Link to={'/'}>\r\n                    <img src={jpglogo} alt=\"logo\" id=\"logo\" />\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-8 clearfix\">\r\n                <div className=\"d-flex flex-row shop-menu clearfix pull-right\">\r\n                  <ul>\r\n                    <li>\r\n                      <Link to=\"/account\">\r\n                        <FontAwesomeIcon\r\n                          icon={faUser}\r\n                          className=\"navbar-icon\"\r\n                        />{' '}\r\n                        Account\r\n                      </Link>\r\n                    </li>\r\n                    <li>\r\n                      <Link to=\"/wishlist\">\r\n                        <FontAwesomeIcon\r\n                          icon={faStar}\r\n                          className=\"navbar-icon\"\r\n                        />{' '}\r\n                        Wishlist\r\n                      </Link>\r\n                    </li>\r\n                    {/* <li>\r\n                      <Link to=\"/checkout\">\r\n                        <FontAwesomeIcon icon={faCrosshairs} /> Checkout\r\n                      </Link>\r\n                    </li> */}\r\n                    <li>\r\n                      <Link to=\"/cart\">\r\n                        <FontAwesomeIcon\r\n                          icon={faShoppingCart}\r\n                          className=\"navbar-icon\"\r\n                        />{' '}\r\n                        Cart\r\n                      </Link>\r\n                    </li>\r\n                    <span className=\"badge badge-warning\" id=\"lblCartCount\">\r\n                      {this.props.itemsLength}{' '}\r\n                    </span>\r\n                    <li>\r\n                      <Link to={'/login'}>\r\n                        <FontAwesomeIcon\r\n                          icon={faLock}\r\n                          className=\"navbar-icon\"\r\n                        />{' '}\r\n                        Login\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {this.state.displayLittleCart === true ? (\r\n              <div>\r\n                <LittleCart />\r\n              </div>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NavSocialMedia\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\Details.jsx",["238","239","240","241","242"],"import React, { Component } from 'react'\r\nimport hero2 from '../../assets/hero2.png'\r\nimport '../../css/Details.css'\r\nimport ProductDetailsCarousel from './ProductDetailsCarousel'\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Carousel,\r\n  CarouselItem,\r\n  Form,\r\n  Alert,\r\n} from 'react-bootstrap'\r\n// import {addCart} from \"../../Helpers/functions\"\r\nimport Review from './Review'\r\n\r\nclass Details extends Component {\r\n  state = {\r\n    details: {},\r\n    id: '',\r\n    quantity: 1,\r\n    imageUrl: '',\r\n    alert: false,\r\n    errorAlert: false,\r\n    sizeSelected: 'None',\r\n    description: [],\r\n    sizesFromApi: [],\r\n    sizeToBeSent: '',\r\n    showDescription: true,\r\n    showDetails: false,\r\n  }\r\n\r\n  showDescription = () => {\r\n    this.setState({\r\n      showDescription: true,\r\n      showDetails: false,\r\n    })\r\n  }\r\n  showDetails = () => {\r\n    this.setState({\r\n      showDescription: false,\r\n      showDetails: true,\r\n    })\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const sizeArr = []\r\n    const desc = []\r\n    const productId = this.props.match.params.productId\r\n    const response = await fetch(`http://localhost:3003/product/${productId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    const details = await response.json()\r\n\r\n    details.description.map((des) => {\r\n      return desc.push(des)\r\n    })\r\n\r\n    this.setState({\r\n      details,\r\n      imageUrl: details.imageUrl,\r\n      sizesFromApi: sizeArr,\r\n      description: desc,\r\n      id: productId,\r\n      sizeToBeSent: sizeArr.join(''),\r\n    })\r\n\r\n    this.getReviews()\r\n  }\r\n\r\n  getReviews = async () => {\r\n    const response = await fetch(\r\n      `http://localhost:3003/reviews/${this.props.match.params.productId}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      },\r\n    )\r\n    const reviews = await response.json()\r\n    this.setState({\r\n      reviews,\r\n    })\r\n  }\r\n  addCart = async (\r\n    id,\r\n    quantity,\r\n    productImage,\r\n    productName,\r\n    productSize,\r\n    productColor,\r\n    productPrice,\r\n    productSizes,\r\n  ) => {\r\n    try {\r\n      const guestToken = sessionStorage.getItem('guestToken')\r\n      const userId = sessionStorage.getItem('userId')\r\n      if (guestToken) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: quantity,\r\n          image: productImage,\r\n          name: productName,\r\n          size: productSize,\r\n          color: productColor,\r\n          price: parseInt(productPrice),\r\n          sizeFromClient: productSizes,\r\n          userId: guestToken,\r\n        }\r\n        let response = await fetch(\r\n          `http://localhost:3003/cart/check-out-as-guest`,\r\n          {\r\n            method: 'POST',\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              'Content-Type': 'Application/json',\r\n            },\r\n          },\r\n        )\r\n        if (response.ok) {\r\n          this.setState({ alert: true })\r\n          setTimeout(() => {\r\n            this.setState({\r\n              alert: false,\r\n            })\r\n          }, 1200)\r\n        } else {\r\n          this.setState({ errorAlert: true })\r\n          setTimeout(() => {\r\n            this.setState({\r\n              errorAlert: false,\r\n            })\r\n          }, 1200)\r\n        }\r\n      } else if (userId) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n          image: productImage,\r\n          name: productName,\r\n          size: productSize,\r\n          color: productColor,\r\n          price: parseInt(productPrice),\r\n          sizeFromClient: productSizes,\r\n          userId: userId,\r\n        }\r\n        let response = await fetch(\r\n          `http://localhost:3003/cart/check-out-as-guest`,\r\n          {\r\n            method: 'POST',\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              'Content-Type': 'Application/json',\r\n            },\r\n          },\r\n        )\r\n        if (response.ok) {\r\n          this.setState({ alert: true })\r\n          setTimeout(() => {\r\n            this.setState({\r\n              alert: false,\r\n            })\r\n          }, 1200)\r\n        } else {\r\n          this.setState({ errorAlert: true })\r\n          setTimeout(() => {\r\n            this.setState({\r\n              errorAlert: false,\r\n            })\r\n          }, 1200)\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <Container style={{ marginTop: '2rem', marginBottom: '3rem' }}>\r\n        {this.state.alert === true ? (\r\n          <Alert id=\"alert\">Item added to cart</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {this.state.errorAlert === true ? (\r\n          <Alert id=\"alert\">Unable to add item to cart</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {this.state.wishListAlert === true ? (\r\n          <Alert id=\"alert\">Item added to wishlist</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {this.state.wishListErrorAlert === true ? (\r\n          <Alert id=\"alert\">\r\n            Unable to add item to wishlist. Please make sure you are signed in.\r\n          </Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        <Row>\r\n          <Col md={4}>\r\n            <div className=\"view-product\">\r\n              <img src={this.state.imageUrl} />\r\n            </div>\r\n          </Col>\r\n          <Col sm={8}>\r\n            <div className=\"product-information\">\r\n              <h2 className=\"text-center\" style={{ fontSize: '30px' }}>\r\n                {this.state.details.name}\r\n              </h2>\r\n              <div className=\"d-flex justify-content-center mt-4 mb-4\">\r\n                <div id=\"details-description\">\r\n                  <p\r\n                    onClick={() => this.showDescription()}\r\n                    className={\r\n                      this.state.showDescription === true\r\n                        ? 'activeDesctiption-details'\r\n                        : 'inactiveDesctiption-details'\r\n                    }\r\n                    style={{ cursor: 'pointer' }}\r\n                  >\r\n                    DESCRIPTION\r\n                  </p>\r\n                  <p\r\n                    onClick={() => this.showDetails()}\r\n                    className={\r\n                      this.state.showDetails === true\r\n                        ? 'activeDesctiption-details'\r\n                        : 'inactiveDesctiption-details'\r\n                    }\r\n                    style={{ cursor: 'pointer', fontWeight: '500' }}\r\n                  >\r\n                    DETAILS\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              {this.state.showDescription === true ? (\r\n                <div>\r\n                  {this.state.description.map((des) => {\r\n                    return (\r\n                      <p className=\"text-center\" id=\"description-text\">\r\n                        {des}\r\n                      </p>\r\n                    )\r\n                  })}\r\n                </div>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n              {this.state.showDetails === true ? (\r\n                <div>\r\n                  <p className=\"text-center\" id=\"description-text\">\r\n                    100% ringspun combed cotton\r\n                  </p>\r\n                  <p className=\"text-center\" id=\"description-text\">\r\n                    Shoulder to shoulder neck tape\r\n                  </p>\r\n                  <p className=\"text-center\" id=\"description-text\">\r\n                    Two-layer neck rib with elastane Double stitched\r\n                  </p>\r\n                  <p className=\"text-center\" id=\"description-text\">\r\n                    Double preshrunk cotton\r\n                  </p>\r\n                  <p className=\"text-center\" id=\"description-text\">\r\n                    Washable at 40 degrees\r\n                  </p>\r\n                </div>\r\n              ) : (\r\n                <div></div>\r\n              )}\r\n\r\n              <Form>\r\n                <select\r\n                  className=\"mt-3 mb-3\"\r\n                  id=\"drop-down-form\"\r\n                  onChange={(e) =>\r\n                    this.setState({\r\n                      sizeSelected: e.target.value,\r\n                    })\r\n                  }\r\n                >\r\n                  <option value=\"None\">Select size</option>\r\n                  {this.state.sizesFromApi.map((size) => {\r\n                    return <option value={size}>{size}</option>\r\n                  })}\r\n                </select>\r\n              </Form>\r\n              <span>\r\n                <span>£ {this.state.details.price}</span>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-fefault\"\r\n                  id=\"cart\"\r\n                  onClick={() =>\r\n                    this.addCart(\r\n                      this.state.details._id,\r\n                      this.state.quantity,\r\n                      this.state.details.image,\r\n                      this.state.details.name,\r\n                      this.state.sizeSelected,\r\n                      this.state.details.color,\r\n                      this.state.details.price,\r\n                      this.state.sizeToBeSent,\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"fa fa-shopping-cart\"></i>\r\n                  Add to cart\r\n                </button>\r\n              </span>\r\n              <p>\r\n                <b>Availability:</b> In Stock\r\n              </p>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Review id={this.props.match.params.productId} />\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Details\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\ProductDetailsCarousel.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\Review.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Home.jsx",["243","244","245","246"],"import React, { Component } from 'react'\r\nimport Jumbo from './Jumbo'\r\nimport Products from './Products'\r\nimport Accessories from './Accessories'\r\nimport { Alert, Row, Col, Form, Container } from 'react-bootstrap'\r\nimport '../../css/Home.css'\r\n\r\n// import { addCart } from \"../../Helpers/functions\";\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    guestToken: '',\r\n    itemsLength: '',\r\n    products: [],\r\n    accessories: [],\r\n    quantity: 1,\r\n    alert: false,\r\n    errorAlert: false,\r\n    wishListAlert: false,\r\n    wishListErrorAlert: false,\r\n    tShirtdisplay: false,\r\n    accessoriesDisplay: false,\r\n    displayAll: true,\r\n    initialSize: 'None',\r\n  }\r\n\r\n  getCartLength = (token) => {\r\n    this.setState({\r\n      itemsLength: token,\r\n    })\r\n  }\r\n\r\n  getProducts = async () => {\r\n    const response = await fetch('http://localhost:3003/product/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    const products = await response.json()\r\n    console.log(products)\r\n    this.setState({\r\n      products,\r\n    })\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const userId = sessionStorage.getItem('userId')\r\n    if (!userId) {\r\n      const guestResponse = await fetch(\r\n        'http://localhost:3003/cart/guest/guest-token',\r\n        {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        },\r\n      )\r\n      const guestToken = await guestResponse.json()\r\n      this.setState({\r\n        guestToken,\r\n      })\r\n      sessionStorage.setItem('guestToken', this.state.guestToken)\r\n      this.getProducts()\r\n    } else if (userId) {\r\n      sessionStorage.removeItem('guestToken')\r\n      this.getProducts()\r\n    }\r\n    // this.props.action(this.state.itemsLength)\r\n  }\r\n\r\n  addCart = async (\r\n    id,\r\n    productImage,\r\n    productName,\r\n    productColor,\r\n    productPrice,\r\n    productSizes,\r\n    productTotal,\r\n    productStock,\r\n  ) => {\r\n    try {\r\n      const guestToken = sessionStorage.getItem('guestToken')\r\n      const userId = sessionStorage.getItem('userId')\r\n      if (guestToken) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n          image: productImage,\r\n          name: productName,\r\n          price: parseInt(productPrice),\r\n          stock: productStock,\r\n          userId: guestToken,\r\n        }\r\n        let response = await fetch(\r\n          `http://localhost:3003/cart/check-out-as-guest`,\r\n          {\r\n            method: 'POST',\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              'Content-Type': 'Application/json',\r\n            },\r\n          },\r\n        )\r\n        if (response.ok) {\r\n          this.setState({ alert: true })\r\n          setTimeout(() => {\r\n            this.setState({\r\n              alert: false,\r\n            })\r\n          }, 1200)\r\n        } else {\r\n          this.setState({ errorAlert: true })\r\n          setTimeout(() => {\r\n            this.setState({\r\n              errorAlert: false,\r\n            })\r\n          }, 1200)\r\n        }\r\n      } else if (userId) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n          image: productImage,\r\n          name: productName,\r\n          price: parseInt(productPrice),\r\n          stock: productStock,\r\n          userId: userId,\r\n        }\r\n        let response = await fetch(\r\n          `http://localhost:3003/cart/check-out-as-guest`,\r\n          {\r\n            method: 'POST',\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              'Content-Type': 'Application/json',\r\n            },\r\n          },\r\n        )\r\n        if (response.ok) {\r\n          this.setState({ alert: true })\r\n          setTimeout(() => {\r\n            this.setState({\r\n              alert: false,\r\n            })\r\n          }, 1200)\r\n        } else {\r\n          this.setState({ errorAlert: true })\r\n          setTimeout(() => {\r\n            this.setState({\r\n              errorAlert: false,\r\n            })\r\n          }, 1200)\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Jumbo />\r\n        <Container>\r\n          <div>\r\n            {this.state.alert === true ? (\r\n              <Alert id=\"alert\">Item added to cart</Alert>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n            {this.state.errorAlert === true ? (\r\n              <Alert id=\"alert\">Unable to add item to cart</Alert>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n            <Products\r\n              secondAction={this.getCartLength}\r\n              productsAsProps={this.state.products}\r\n              addToCartAsProps={(\r\n                id,\r\n                quantity,\r\n                productImage,\r\n                productName,\r\n                productSize,\r\n                productColor,\r\n                productPrice,\r\n                productStock,\r\n              ) =>\r\n                this.addCart(\r\n                  id,\r\n                  quantity,\r\n                  productImage,\r\n                  productName,\r\n                  productSize,\r\n                  productColor,\r\n                  productPrice,\r\n                  productStock,\r\n                )\r\n              }\r\n              addToWishListAsProps={(\r\n                id,\r\n                productImage,\r\n                productName,\r\n                productColor,\r\n                productPrice,\r\n              ) =>\r\n                this.addToWishList(\r\n                  id,\r\n                  productImage,\r\n                  productName,\r\n                  productColor,\r\n                  productPrice,\r\n                )\r\n              }\r\n            />\r\n          </div>\r\n          {this.state.alert === true ? (\r\n            <Alert id=\"alert\">Item added to cart</Alert>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {this.state.errorAlert === true ? (\r\n            <Alert id=\"alert\">Unable to add item to cart</Alert>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Products.jsx",["247","248","249","250","251","252","253","254"],"import React, { Component } from 'react'\r\nimport '../../css/Products.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart, faPlusSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport solo1 from '../../assets/solo1.jpg'\r\nimport solo2 from '../../assets/solo2.jpg'\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  CardDeck,\r\n  Card,\r\n  Accordion,\r\n  Button,\r\n  Alert,\r\n} from 'react-bootstrap'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Products extends Component {\r\n  state = {\r\n    sizes: [],\r\n    products: [],\r\n    wishListAlert: false,\r\n  }\r\n\r\n  displayTShirtsOnly = (event) => {\r\n    this.setState({\r\n      tShirt: true,\r\n    })\r\n    alert(this.state.tShirt)\r\n  }\r\n  addToWishList = async (id, productImage, productName, productPrice) => {\r\n    const productDetails = {\r\n      productId: id,\r\n      image: productImage,\r\n      name: productName,\r\n      price: parseInt(productPrice),\r\n    }\r\n    if (localStorage['userId']) {\r\n      let response = await fetch(\r\n        `http://localhost:3003/wishlist/${localStorage['userId']}`,\r\n        {\r\n          method: 'POST',\r\n          body: JSON.stringify(productDetails),\r\n          headers: {\r\n            'Content-Type': 'Application/json',\r\n          },\r\n        },\r\n      )\r\n      if (response.ok) {\r\n        this.setState({ wishListAlert: true })\r\n        setTimeout(() => {\r\n          this.setState({\r\n            wishListAlert: false,\r\n          })\r\n        }, 1200)\r\n      } else {\r\n        this.setState({ wishListErrorAlert: true })\r\n        setTimeout(() => {\r\n          this.setState({\r\n            wishListErrorAlert: false,\r\n          })\r\n        }, 1200)\r\n      }\r\n    } else if (localStorage['guestToken']) {\r\n      this.setState({ wishListErrorAlert: true })\r\n      setTimeout(() => {\r\n        this.setState({\r\n          wishListErrorAlert: false,\r\n        })\r\n      }, 1200)\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container>\r\n          <div id=\"featured-text\" className=\"mt-5\">\r\n            <h2>Our products</h2>\r\n          </div>\r\n          <CardDeck>\r\n            {this.props.productsAsProps.map((prod) => {\r\n              return (\r\n                <div className=\"product-image-wrapper col-sm-4\">\r\n                  <div className=\"single-products\">\r\n                    <div className=\"productinfo text-center\">\r\n                      <img src={prod.imageUrl} alt=\"\" />\r\n                      <h2>£ {prod.price}</h2>\r\n                      <p>{prod.name}</p>\r\n                      <a href=\"#\" className=\"btn btn-default add-to-cart\">\r\n                        <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                      </a>\r\n                    </div>\r\n                    <div className=\"product-overlay\">\r\n                      <div className=\"overlay-content\">\r\n                        <h2>£ {prod.price}</h2>\r\n                        <p>{prod.name}</p>\r\n                        <button\r\n                          onClick={() =>\r\n                            this.props.addToCartAsProps(\r\n                              prod._id,\r\n                              prod.imageUrl,\r\n                              prod.name,\r\n                              prod.color,\r\n                              prod.price,\r\n                              prod.sizes,\r\n                              prod.total,\r\n                              prod.stock,\r\n                            )\r\n                          }\r\n                          className=\"btn btn-default add-to-cart\"\r\n                        >\r\n                          <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"choose\">\r\n                    <ul className=\"nav nav-pills nav-justified\">\r\n                      <li\r\n                        onClick={() =>\r\n                          this.addToWishList(\r\n                            prod._id,\r\n                            prod.imageUrl,\r\n                            prod.name,\r\n                            prod.price,\r\n                          )\r\n                        }\r\n                        style={{ cursor: 'pointer' }}\r\n                        id=\"add-to-wishlist\"\r\n                      >\r\n                        <FontAwesomeIcon icon={faHeart} className=\"fa-1x\" />\r\n                        Add to wishlist\r\n                      </li>\r\n                      <li className=\"\">\r\n                        <Link to={`/details/${prod._id}`}>\r\n                          <FontAwesomeIcon\r\n                            icon={faPlusSquare}\r\n                            className=\"fa-1x\"\r\n                          />\r\n                          More details\r\n                        </Link>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </CardDeck>\r\n          {this.state.wishListAlert === true ? (\r\n            <Alert id=\"alert\">Item added to wishlist</Alert>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {this.state.wishListErrorAlert === true ? (\r\n            <Alert id=\"alert\">\r\n              Unable to add item to wishlist. Please make sure you are signed\r\n              in.\r\n            </Alert>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </Container>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Products\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Jumbo.jsx",["255","256","257","258","259","260","261"],"import React, { Component } from 'react'\r\nimport '../../css/Jumbo.css'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, Card, CardGroup, CardDeck } from 'react-bootstrap'\r\nimport one from '../../assets/one.png'\r\nimport two from '../../assets/two.png'\r\n\r\nclass Products extends Component {\r\n  state = {\r\n    carouselProducts: [],\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <section className=\"jumbotron \">\r\n          <div id=\"jumbo-all-wrapper\">\r\n            <div id=\"jumbo-text-wrapper\">\r\n              <p id=\"affordable\">A British brand with an African heritage</p>\r\n            </div>\r\n            <div id=\"jumbo-text-wrapper\">\r\n              <Link to=\"/allProducts\" className=\"button\">\r\n                SHOP NOW\r\n                <i\r\n                  className=\"fa fa-arrow-right mx-3 fa-1x\"\r\n                  style={{ color: 'black' }}\r\n                ></i>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"jumbotron2\">\r\n          <div id=\"jumbo-all-wrapper\">\r\n            <div id=\"jumbo-text-wrapper\">\r\n              <p id=\"affordable\">A British brand with an African heritage</p>\r\n            </div>\r\n            <div id=\"jumbo-text-wrapper\">\r\n              <Link to=\"/allProducts\" className=\"button\">\r\n                SHOP NOW\r\n                <i\r\n                  className=\"fa fa-arrow-right mx-3 fa-1x\"\r\n                  style={{ color: 'black' }}\r\n                ></i>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Products\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\SignUp.jsx",["262"],"import React, { Component } from \"react\";\r\nimport { Form, Container, Row, Col, Alert } from \"react-bootstrap\";\r\nimport CheckoutasGuest from \"./Checkoutasguest\";\r\nimport \"../../css/Signup.css\";\r\nclass SignUp extends Component {\r\n  state = {\r\n    details: {\r\n      name: \"\",\r\n      email: \"\",\r\n      phoneNumber: \"\",\r\n      password: \"\",\r\n    },\r\n    alert: false,\r\n    errorAlert: false,\r\n    displayCheckOut: false,\r\n    signUpcompleted: false,\r\n  };\r\n\r\n  updateDetails = (event) => {\r\n    let details = this.state.details;\r\n    let id = event.currentTarget.id;\r\n    details[id] = event.currentTarget.value;\r\n    this.setState({\r\n      details,\r\n    });\r\n  };\r\n\r\n  signUp = async (e) => {\r\n    e.preventDefault();\r\n    if (localStorage[\"userId\"]) {\r\n      const res = await fetch(\"http://localhost:3003/users/register\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          userName: this.state.details.name,\r\n          email: this.state.details.email,\r\n          phoneNumber: this.state.details.phoneNumber,\r\n          password: this.state.details.password,\r\n        }),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      if (res.status !== 400) {\r\n        this.setState({\r\n          alert: true,\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            alert: false,\r\n            displayCheckOut: true,\r\n            signUpcompleted: true,\r\n          });\r\n        }, 1200);\r\n      } else if (res.status === 400) {\r\n        this.setState({\r\n          errorAlert: true,\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            errorAlert: false,\r\n          });\r\n        }, 1200);\r\n      }\r\n    } else if (localStorage[\"guestToken\"]) {\r\n      const res = await fetch(\r\n        `http://localhost:3003/users/guest-token-already-exists/${localStorage[\"guestToken\"]}`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            userName: this.state.details.name,\r\n            email: this.state.details.email,\r\n            phoneNumber: this.state.details.phoneNumber,\r\n            password: this.state.details.password,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      console.log(\"signup\", res);\r\n      if (res.status !== 400) {\r\n        this.setState({\r\n          alert: true,\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            alert: false,\r\n            displayCheckOut: true,\r\n            signUpcompleted: true,\r\n          });\r\n        }, 1200);\r\n      } else if (res.status === 400) {\r\n        this.setState({\r\n          errorAlert: true,\r\n        });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            errorAlert: false,\r\n          });\r\n        }, 1200);\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.displayCheckOut === false ? (\r\n          <div>\r\n            <Form className=\"mt-3\">\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Label htmlFor=\"firstName\">Name</Form.Label>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Ex. John\"\r\n                      id=\"name\"\r\n                      onChange={(e) => this.updateDetails(e)}\r\n                      value={this.state.details.name}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                      placeholder=\"Ex: abcd@abc.com\"\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      onChange={(e) => this.updateDetails(e)}\r\n                      value={this.state.details.email}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group>\r\n                    <Form.Label htmlFor=\"phoneNumber\">Phone Number</Form.Label>\r\n                    <Form.Control\r\n                      placeholder=\"Ex: 070 0000 8000\"\r\n                      id=\"phoneNumber\"\r\n                      type=\"text\"\r\n                      onChange={(e) => this.updateDetails(e)}\r\n                      value={this.state.details.phoneNumber}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                      id=\"password\"\r\n                      type=\"password\"\r\n                      onChange={(e) => this.updateDetails(e)}\r\n                      value={this.state.details.password}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <div className=\"text-center\">\r\n                <button onClick={(e) => this.signUp(e)} id=\"sign-up\">\r\n                  Sign up and proceed to checkout\r\n                </button>\r\n              </div>\r\n            </Form>\r\n            {this.state.alert === true ? (\r\n              <Alert id=\"alert\" className=\"mt-2\">\r\n                <h5 className=\"text-center\">Sign Up successful</h5>\r\n              </Alert>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n            {this.state.errorAlert === true ? (\r\n              <Alert id=\"alert\" className=\"mt-2\">\r\n                <h5 className=\"text-center\">Something went wrong...</h5>\r\n              </Alert>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <CheckoutasGuest />\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Accessories.jsx",["263","264","265","266","267","268"],"import React, { Component } from 'react'\r\nimport '../../css/Products.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart, faPlusSquare } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  CardDeck,\r\n  Card,\r\n  Accordion,\r\n  Button,\r\n  Alert,\r\n} from 'react-bootstrap'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Accessories extends Component {\r\n  state = {\r\n    size: 'No size required',\r\n    color: 'No color required',\r\n    quantity: 1,\r\n    alert: false,\r\n    errorAlert: false,\r\n    wishListAlert: false,\r\n    wishListErrorAlert: false,\r\n  }\r\n\r\n  addCart = async (\r\n    id,\r\n    quantity,\r\n    productImage,\r\n    productName,\r\n    productSize,\r\n    productColor,\r\n    productPrice,\r\n    productSizes,\r\n  ) => {\r\n    try {\r\n      if (localStorage['guestToken']) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: quantity,\r\n          image: productImage,\r\n          name: productName,\r\n          size: productSize,\r\n          color: productColor,\r\n          price: parseInt(productPrice),\r\n          sizeFromClient: productSizes,\r\n          userId: localStorage['guestToken'],\r\n        }\r\n        let response = await fetch(\r\n          `http://localhost:3003/cart/check-out-as-guest`,\r\n          {\r\n            method: 'POST',\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              'Content-Type': 'Application/json',\r\n            },\r\n          },\r\n        )\r\n        if (response.ok) {\r\n          const createPriceResponse = await fetch(\r\n            'http://localhost:3003/payment/create-product-price',\r\n            {\r\n              method: 'POST',\r\n              body: JSON.stringify({\r\n                userId: localStorage['guestToken'],\r\n                productName: productName,\r\n                productPrice: parseInt(productPrice * 100),\r\n                productId: id,\r\n                quantity: this.state.quantity,\r\n              }),\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n            },\r\n          )\r\n          if (createPriceResponse.ok) {\r\n            this.setState({ alert: true })\r\n            setTimeout(() => {\r\n              this.setState({\r\n                alert: false,\r\n              })\r\n            }, 1200)\r\n          }\r\n        } else {\r\n          this.setState({ errorAlert: true })\r\n          setTimeout(() => {\r\n            this.setState({\r\n              errorAlert: false,\r\n            })\r\n          }, 1200)\r\n        }\r\n      } else if (localStorage['userId']) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n          image: productImage,\r\n          name: productName,\r\n          size: productSize,\r\n          color: productColor,\r\n          price: parseInt(productPrice),\r\n          sizeFromClient: productSizes,\r\n          userId: localStorage['userId'],\r\n        }\r\n        let response = await fetch(\r\n          `http://localhost:3003/cart/check-out-as-guest`,\r\n          {\r\n            method: 'POST',\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              'Content-Type': 'Application/json',\r\n            },\r\n          },\r\n        )\r\n        if (response.ok) {\r\n          const createPriceResponse = await fetch(\r\n            'http://localhost:3003/payment/create-product-price',\r\n            {\r\n              method: 'POST',\r\n              body: JSON.stringify({\r\n                userId: localStorage['userId'],\r\n                productName: productName,\r\n                productPrice: parseInt(productPrice * 100),\r\n                productId: id,\r\n                quantity: this.state.quantity,\r\n              }),\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n              },\r\n            },\r\n          )\r\n          if (createPriceResponse.ok) {\r\n            this.setState({ alert: true })\r\n            setTimeout(() => {\r\n              this.setState({\r\n                alert: false,\r\n              })\r\n            }, 1200)\r\n          }\r\n        } else {\r\n          this.setState({ errorAlert: true })\r\n          setTimeout(() => {\r\n            this.setState({\r\n              errorAlert: false,\r\n            })\r\n          }, 1200)\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div id=\"featured-text\">\r\n          <h2>Accessories</h2>\r\n        </div>\r\n\r\n        <CardDeck>\r\n          {this.props.accessoriesAsProps.map((prod) => {\r\n            return (\r\n              <div className=\"product-image-wrapper col-sm-4\">\r\n                <div className=\"single-products\">\r\n                  <div className=\"productinfo text-center\">\r\n                    <img src={prod.image} alt=\"\" />\r\n                    <h2>£ {prod.price}</h2>\r\n                    <p>{prod.name}</p>\r\n                    <a href=\"#\" className=\"btn btn-default add-to-cart\">\r\n                      <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                    </a>\r\n                  </div>\r\n                  <div className=\"product-overlay\">\r\n                    <div className=\"overlay-content\">\r\n                      <h2>£ {prod.price}</h2>\r\n                      <p>{prod.name}</p>\r\n                      <button\r\n                        onClick={() =>\r\n                          this.addCart(\r\n                            prod._id,\r\n                            this.state.quantity,\r\n                            prod.image,\r\n                            prod.name,\r\n                            this.state.size,\r\n                            this.state.color,\r\n                            prod.price,\r\n                          )\r\n                        }\r\n                        className=\"btn btn-default add-to-cart\"\r\n                      >\r\n                        <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"choose\">\r\n                  <ul className=\"nav nav-pills nav-justified\">\r\n                    <li\r\n                      onClick={() =>\r\n                        this.addToWishListAsProps(\r\n                          prod._id,\r\n                          prod.image,\r\n                          prod.name,\r\n                          prod.color,\r\n                          prod.price,\r\n                        )\r\n                      }\r\n                      style={{ cursor: 'pointer' }}\r\n                      id=\"add-to-wishlist\"\r\n                    >\r\n                      <FontAwesomeIcon icon={faHeart} className=\"fa-1x\" />\r\n                      Add to wishlist\r\n                    </li>\r\n                    <li className=\"\">\r\n                      <Link to={`/accessorydetails/${prod._id}`}>\r\n                        <FontAwesomeIcon\r\n                          icon={faPlusSquare}\r\n                          className=\"fa-1x\"\r\n                        />\r\n                        More details\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </CardDeck>\r\n        {this.state.alert === true ? (\r\n          <Alert id=\"alert\">Item added to cart</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {this.state.errorAlert === true ? (\r\n          <Alert id=\"alert\">Unable to add item to cart</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {this.state.wishListAlert === true ? (\r\n          <Alert id=\"alert\">Item added to wishlist</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {this.state.wishListErrorAlert === true ? (\r\n          <Alert id=\"alert\">\r\n            Unable to add item to wishlist. Please make sure you are signed in.\r\n          </Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Accessories\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\ProductDetails\\AccessoriesDetails.jsx",["269","270","271","272"],"import React, { Component } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Carousel,\r\n  CarouselItem,\r\n  Form,\r\n} from \"react-bootstrap\";\r\nimport Review from \"./Review\";\r\nimport { addCart } from \"../../Helpers/functions\";\r\n\r\nclass AccessoriesDetails extends Component {\r\n  state = {\r\n    details: {},\r\n    id: \"\",\r\n    quantity: 1,\r\n    alert: false,\r\n    errorAlert: false,\r\n    size: \"No size required\",\r\n    color: \"No color required\",\r\n  };\r\n  componentDidMount = async () => {\r\n    const accessoryId = this.props.match.params.productId;\r\n    const response = await fetch(\r\n      `http://localhost:3003/accessories/${accessoryId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const details = await response.json();\r\n    this.setState({\r\n      details,\r\n      id: accessoryId,\r\n    });\r\n    this.getReviews();\r\n  };\r\n\r\n  addCart = async (id, productName, productPrice) => {\r\n    try {\r\n      if (!localStorage[\"userId\"]) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n          name: productName,\r\n          price: parseInt(productPrice),\r\n          userId: localStorage[\"guestToken\"],\r\n        };\r\n        let response = await fetch(\r\n          `http://localhost:3001/cart/check-out-as-guest`,\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              \"Content-Type\": \"Application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (response.ok) {\r\n          alert(\"success\");\r\n          const response = await fetch(\r\n            `http://localhost:3001/cart/${localStorage[\"guestToken\"]}`,\r\n            {\r\n              method: \"GET\",\r\n              headers: {\r\n                \"Content-type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n          const cart = await response.json();\r\n          this.props.secondAction(cart.totalItems);\r\n          // this.setState({ alert: true })\r\n          // setTimeout(() => {\r\n          //     this.setState({\r\n          //         alert: false\r\n          //     });\r\n          // }, 1200);\r\n        } else {\r\n          this.setState({ errorAlert: true });\r\n          setTimeout(() => {\r\n            this.setState({\r\n              errorAlert: false,\r\n            });\r\n          }, 1200);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  getReviews = async () => {\r\n    const response = await fetch(\r\n      `http://localhost:3001/reviews/${this.props.match.params.productId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    const reviews = await response.json();\r\n    this.setState({\r\n      reviews,\r\n    });\r\n    console.log(\"\", this.state.reviews);\r\n  };\r\n  render() {\r\n    return (\r\n      <Container style={{ marginTop: \"2rem\", marginBottom: \"3rem\" }}>\r\n        <Row>\r\n          <Col md={4}>\r\n            <div className=\"view-product\">\r\n              <img src={this.state.details.image} />\r\n            </div>\r\n          </Col>\r\n          <Col sm={8}>\r\n            <div className=\"product-information\">\r\n              <h2>{this.state.details.name}</h2>\r\n              <p>{this.state.details.description}</p>\r\n\r\n              <span>\r\n                <span>£ {this.state.details.price}</span>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-fefault\"\r\n                  id=\"cart\"\r\n                  onClick={() =>\r\n                    addCart(\r\n                      this.state.details._id,\r\n                      this.state.quantity,\r\n                      this.state.details.image,\r\n                      this.state.details.name,\r\n                      this.state.size,\r\n                      this.state.color,\r\n                      this.state.details.price\r\n                    )\r\n                  }\r\n                >\r\n                  <i className=\"fa fa-shopping-cart\"></i>\r\n                  Add to cart\r\n                </button>\r\n              </span>\r\n              <p>\r\n                <b>Availability:</b> In Stock\r\n              </p>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Review id={this.props.match.params.productId} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccessoriesDetails;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\AllProducts\\AllProductsWrapper.jsx",["273","274","275"],"import React, { Component } from \"react\";\r\nimport { Container, Form, Row, Col, Alert } from \"react-bootstrap\";\r\nimport AllTShirts from \"./AllTShirts\";\r\nimport AllAccessories from \"./AllAccessories\";\r\nimport \"../../css/AllProducts.css\";\r\nimport { withLastLocation } from \"react-router-last-location\";\r\n\r\nclass AllProductsWrapper extends Component {\r\n  state = {\r\n    productName: \"\",\r\n    foundProduct: {},\r\n    searchError: false,\r\n    productFound: false,\r\n    noSearchQuery: false,\r\n    sizeForTShirt: \"None\",\r\n    quantity: 1,\r\n    size: \"No size required\",\r\n    color: \"No color required\",\r\n  };\r\n  updateSearch = (event) => {\r\n    this.setState({\r\n      productName: event.target.value,\r\n    });\r\n  };\r\n\r\n  searchProduct = async (e) => {\r\n    e.preventDefault();\r\n    if (this.state.productName === \"\") {\r\n      this.setState({ noSearchQuery: true });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          noSearchQuery: false,\r\n        });\r\n      }, 1200);\r\n    } else {\r\n      const response = await fetch(\r\n        `http://localhost:3003/product/search/${this.state.productName}`,\r\n        {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const product = await response.json();\r\n\r\n      if (product.message === \"Not Found\") {\r\n        this.setState({\r\n          searchError: true,\r\n          productFound: false,\r\n          productName: \"\",\r\n        });\r\n      } else if (product.length !== 0) {\r\n        product.map((prod) =>\r\n          this.setState({\r\n            foundProduct: prod,\r\n          })\r\n        );\r\n        this.setState({\r\n          productFound: true,\r\n          searchError: false,\r\n          productName: \"\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n  viewProducts = () => {\r\n    this.setState({ productFound: false, searchError: false });\r\n  };\r\n  getProductsByCategory = async (e) => {\r\n    this.setState({});\r\n  };\r\n\r\n  addCart = async (\r\n    id,\r\n    productImage,\r\n    productName,\r\n    productSize,\r\n    productColor,\r\n    productPrice,\r\n    productSizes\r\n  ) => {\r\n    try {\r\n      if (localStorage[\"guestToken\"]) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n          image: productImage,\r\n          name: productName,\r\n          size: productSize,\r\n          color: productColor,\r\n          price: parseInt(productPrice),\r\n          sizeFromClient: productSizes,\r\n          userId: localStorage[\"guestToken\"],\r\n        };\r\n        let response = await fetch(\r\n          `http://localhost:3003/cart/check-out-as-guest`,\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              \"Content-Type\": \"Application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (response.ok) {\r\n          const createPriceResponse = await fetch(\r\n            \"http://localhost:3003/payment/create-product-price\",\r\n            {\r\n              method: \"POST\",\r\n              body: JSON.stringify({\r\n                userId: localStorage[\"guestToken\"],\r\n                productName: productName,\r\n                productPrice: parseInt(productPrice * 100),\r\n                productId: id,\r\n                quantity: this.state.quantity,\r\n              }),\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n          if (createPriceResponse.ok) {\r\n            this.setState({ alert: true });\r\n            setTimeout(() => {\r\n              this.setState({\r\n                alert: false,\r\n              });\r\n            }, 1200);\r\n          }\r\n        } else {\r\n          this.setState({ errorAlert: true });\r\n          setTimeout(() => {\r\n            this.setState({\r\n              errorAlert: false,\r\n            });\r\n          }, 1200);\r\n        }\r\n      } else if (localStorage[\"userId\"]) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n          image: productImage,\r\n          name: productName,\r\n          size: productSize,\r\n          color: productColor,\r\n          price: parseInt(productPrice),\r\n          sizeFromClient: productSizes,\r\n          userId: localStorage[\"userId\"],\r\n        };\r\n        let response = await fetch(\r\n          `http://localhost:3003/cart/check-out-as-guest`,\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              \"Content-Type\": \"Application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (response.ok) {\r\n          const createPriceResponse = await fetch(\r\n            \"http://localhost:3003/payment/create-product-price\",\r\n            {\r\n              method: \"POST\",\r\n              body: JSON.stringify({\r\n                userId: localStorage[\"userId\"],\r\n                productName: productName,\r\n                productPrice: parseInt(productPrice * 100),\r\n                productId: id,\r\n                quantity: this.state.quantity,\r\n              }),\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n          if (createPriceResponse.ok) {\r\n            this.setState({ alert: true });\r\n            setTimeout(() => {\r\n              this.setState({\r\n                alert: false,\r\n              });\r\n            }, 1200);\r\n          }\r\n        } else {\r\n          this.setState({ errorAlert: true });\r\n          setTimeout(() => {\r\n            this.setState({\r\n              errorAlert: false,\r\n            });\r\n          }, 1200);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container style={{ marginTop: \"3rem\", marginBottom: \"3rem\" }}>\r\n          <Form style={{ marginBottom: \"3.5rem\" }}>\r\n            <Row>\r\n              <Col md={10}>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Search for a specific item\"\r\n                  value={this.state.productName}\r\n                  onChange={(e) => this.updateSearch(e)}\r\n                />\r\n              </Col>\r\n              <Col md={2}>\r\n                <button onClick={(e) => this.searchProduct(e)} id=\"search-btn\">\r\n                  Search\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n\r\n          {this.state.noSearchQuery === true ? (\r\n            <Alert id=\"alert\">\r\n              <div className=\"text-center\">\r\n                <h5>Please enter item name</h5>\r\n              </div>\r\n            </Alert>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {this.state.productFound === false &&\r\n          this.state.searchError === false ? (\r\n            <div>\r\n              <AllTShirts />\r\n              <AllAccessories />\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              {this.state.searchError === true ? (\r\n                <div\r\n                  className=\"text-center\"\r\n                  style={{ marginTop: \"3.3rem\", marginBottom: \"3.3rem\" }}\r\n                >\r\n                  <h5>\r\n                    No item found, please make sure you entered the correct item\r\n                    name\r\n                  </h5>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  {this.state.foundProduct.accessory === \"Yes\" ? (\r\n                    <Row>\r\n                      <Col md={4}>\r\n                        <div className=\"view-product\">\r\n                          <img src={this.state.foundProduct.image} />\r\n                        </div>\r\n                      </Col>\r\n                      <Col sm={8}>\r\n                        <div className=\"product-information\">\r\n                          <h2>{this.state.foundProduct.name}</h2>\r\n                          <p>{this.state.foundProduct.description}</p>\r\n                          <span>\r\n                            <span>£ {this.state.foundProduct.price}</span>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn btn-fefault\"\r\n                              id=\"cart\"\r\n                              onClick={() =>\r\n                                this.addCart(\r\n                                  this.state.foundProduct._id,\r\n                                  this.state.foundProduct.image,\r\n                                  this.state.foundProduct.name,\r\n                                  this.state.size,\r\n                                  this.state.color,\r\n                                  this.state.foundProduct.price\r\n                                )\r\n                              }\r\n                            >\r\n                              <i className=\"fa fa-shopping-cart\"></i>\r\n                              Add to cart\r\n                            </button>\r\n                          </span>\r\n                          <p>\r\n                            <b>Availability:</b> In Stockkkkk accessory\r\n                          </p>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  ) : (\r\n                    <Row>\r\n                      <Col md={4}>\r\n                        <div className=\"view-product\">\r\n                          <img src={this.state.foundProduct.image} />\r\n                        </div>\r\n                      </Col>\r\n                      <Col sm={8}>\r\n                        <div className=\"product-information\">\r\n                          <h2>{this.state.foundProduct.name}</h2>\r\n                          <p>{this.state.foundProduct.description}</p>\r\n                          <span>\r\n                            <span>£ {this.state.foundProduct.price}</span>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn btn-fefault\"\r\n                              id=\"cart\"\r\n                              onClick={() =>\r\n                                this.addCart(\r\n                                  this.state.foundProduct._id,\r\n                                  this.state.foundProduct.image,\r\n                                  this.state.foundProduct.name,\r\n                                  this.state.sizeForTShirt,\r\n                                  this.state.foundProduct.color,\r\n                                  this.state.foundProduct.price,\r\n                                  this.state.foundProduct.sizeAsString\r\n                                )\r\n                              }\r\n                            >\r\n                              <i className=\"fa fa-shopping-cart\"></i>\r\n                              Add to cart\r\n                            </button>\r\n                          </span>\r\n                          <p>\r\n                            <b>Availability:</b> In Stock\r\n                          </p>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              <div className=\"text-center mt-5\">\r\n                <button\r\n                  onClick={() => this.viewProducts()}\r\n                  id=\"view-all-products\"\r\n                >\r\n                  View all products\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {this.state.searchByCategory === true ? <div>dhdh</div> : <div></div>}\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllProductsWrapper;\r\n",["276","277"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\AllProducts\\AllTShirts.jsx",["278","279","280"],"import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardDeck,\r\n  Carousel,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport \"../../css/Products.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart, faPlusSquare } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../css/AllProducts.css\";\r\n\r\nclass AllTShirts extends Component {\r\n  state = {\r\n    accessories: [],\r\n    tShirts: [],\r\n    quantity: 1,\r\n    alert: false,\r\n    errorAlert: false,\r\n    wishListAlert: false,\r\n    wishListErrorAlert: false,\r\n    tShirt: false,\r\n    size: \"No size required\",\r\n    color: \"No color required\",\r\n    sizeForTShirt : \"None\"\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.getTshirts();\r\n    this.getAccessories();\r\n  };\r\n\r\n  getTshirts = async () => {\r\n    const response = await fetch(\"http://localhost:3003/product/\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const tShirts = await response.json();\r\n    this.setState({\r\n      tShirts,\r\n    });\r\n  };\r\n  getAccessories = async () => {\r\n    const response = await fetch(\"http://localhost:3003/accessories/\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const accessories = await response.json();\r\n    this.setState({\r\n      accessories,\r\n    });\r\n  };\r\n  addCart = async (\r\n    id,\r\n    productImage,\r\n    productName,\r\n    productSize,\r\n    productColor,\r\n    productPrice,\r\n    productSizes\r\n  ) => {\r\n  \r\n    try {\r\n      if (localStorage[\"guestToken\"]) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n          image: productImage,\r\n          name: productName,\r\n          size:  productSize,\r\n          color: productColor,\r\n          price: parseInt(productPrice),\r\n          sizeFromClient: productSizes,\r\n          userId: localStorage[\"guestToken\"],\r\n        };\r\n        let response = await fetch(\r\n          `http://localhost:3003/cart/check-out-as-guest`,\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              \"Content-Type\": \"Application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (response.ok) {\r\n          const createPriceResponse = await fetch(\r\n            \"http://localhost:3003/payment/create-product-price\",\r\n            {\r\n              method: \"POST\",\r\n              body: JSON.stringify({\r\n                userId: localStorage[\"guestToken\"],\r\n                productName: productName,\r\n                productPrice: parseInt(productPrice * 100),\r\n                productId: id,\r\n                quantity: this.state.quantity,\r\n              }),\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n          if (createPriceResponse.ok) {\r\n            this.setState({ alert: true });\r\n            setTimeout(() => {\r\n              this.setState({\r\n                alert: false,\r\n              });\r\n            }, 1200);\r\n          }\r\n        } else {\r\n          this.setState({ errorAlert: true });\r\n          setTimeout(() => {\r\n            this.setState({\r\n              errorAlert: false,\r\n            });\r\n          }, 1200);\r\n        }\r\n      } else if (localStorage[\"userId\"]) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n          image: productImage,\r\n          name: productName,\r\n          size: this.state.sizeForTShirt,\r\n          color: productColor,\r\n          price: parseInt(productPrice),\r\n          sizeFromClient: productSizes,\r\n          userId: localStorage[\"userId\"],\r\n        };\r\n        let response = await fetch(\r\n          `http://localhost:3003/cart/check-out-as-guest`,\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              \"Content-Type\": \"Application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (response.ok) {\r\n          const createPriceResponse = await fetch(\r\n            \"http://localhost:3003/payment/create-product-price\",\r\n            {\r\n              method: \"POST\",\r\n              body: JSON.stringify({\r\n                userId: localStorage[\"userId\"],\r\n                productName: productName,\r\n                productPrice: parseInt(productPrice * 100),\r\n                productId: id,\r\n                quantity: this.state.quantity,\r\n              }),\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n          if (createPriceResponse.ok) {\r\n            this.setState({ alert: true });\r\n            setTimeout(() => {\r\n              this.setState({\r\n                alert: false,\r\n              });\r\n            }, 1200);\r\n          }\r\n        } else {\r\n          this.setState({ errorAlert: true });\r\n          setTimeout(() => {\r\n            this.setState({\r\n              errorAlert: false,\r\n            });\r\n          }, 1200);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  addToWishList = async (\r\n    id,\r\n    productImage,\r\n    productName,\r\n    productSize,\r\n    productColor,\r\n    productPrice\r\n  ) => {\r\n    const productDetails = {\r\n      productId: id,\r\n      image: productImage,\r\n      name: productName,\r\n      size: productSize,\r\n      color: productColor,\r\n      price: parseInt(productPrice),\r\n    };\r\n    if (localStorage[\"userId\"]) {\r\n      let response = await fetch(\r\n        `http://localhost:3003/wishlist/${localStorage[\"userId\"]}`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify(productDetails),\r\n          headers: {\r\n            \"Content-Type\": \"Application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        this.setState({ wishListAlert: true });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            wishListAlert: false,\r\n          });\r\n        }, 1200);\r\n      } else {\r\n        this.setState({ wishListErrorAlert: true });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            wishListErrorAlert: false,\r\n          });\r\n        }, 1200);\r\n      }\r\n    } else if (localStorage[\"guestToken\"]) {\r\n      this.setState({ wishListErrorAlert: true });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          wishListErrorAlert: false,\r\n        });\r\n      }, 1200);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"gutters-sm\">\r\n          <Col md={7} className=\"mb-3\">\r\n            <CardDeck>\r\n              {this.state.tShirts.map((prod) => {\r\n                return (\r\n                  <div className=\"product-image-wrapper col-sm-4\">\r\n                    <div className=\"single-products\">\r\n                      <div className=\"productinfo text-center\">\r\n                        <img src={prod.image} alt=\"\" />\r\n                        <h2>£ {prod.price}</h2>\r\n                        <p>{prod.name}</p>\r\n                        <a href=\"#\" className=\"btn btn-default add-to-cart\">\r\n                          <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                        </a>\r\n                      </div>\r\n                      <div className=\"product-overlay\">\r\n                        <div className=\"overlay-content\">\r\n                          <h2>£ {prod.price}</h2>\r\n                          <p>{prod.name}</p>\r\n                          <button\r\n                            onClick={() =>\r\n                              this.addCart(\r\n                                prod._id,\r\n                                prod.image,\r\n                                prod.name,\r\n                                this.state.sizeForTShirt,\r\n                                prod.color,\r\n                                prod.price,\r\n                                prod.sizeAsString\r\n                              )\r\n                            }\r\n                            className=\"btn btn-default add-to-cart\"\r\n                          >\r\n                            <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <ul>\r\n                        <li\r\n                          onClick={() =>\r\n                            this.addToWishList(\r\n                              prod._id,\r\n                              prod.image,\r\n                              prod.name,\r\n                              prod.size,\r\n                              prod.color,\r\n                              prod.price\r\n                            )\r\n                          }\r\n                          style={{ cursor: \"pointer\" }}\r\n                          id=\"add-to-wishlist\"\r\n                        >\r\n                          <FontAwesomeIcon icon={faHeart} className=\"fa-1x\" />\r\n                          Add to wishlist\r\n                        </li>\r\n                        <li\r\n                          id=\"all-products-add-to-wishlist\"\r\n                          style={{ listStyle: \"none\" }}\r\n                        >\r\n                          <Link\r\n                            to={`/details/${prod._id}`}\r\n                            style={{\r\n                              color: \"#b3afa8\",\r\n                            }}\r\n                          >\r\n                            <FontAwesomeIcon\r\n                              icon={faPlusSquare}\r\n                              className=\"fa-1x\"\r\n                            />\r\n                            More details\r\n                          </Link>\r\n                        </li>\r\n                      </ul>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </CardDeck>\r\n          </Col>\r\n          <Col md={5}>\r\n            <Carousel>\r\n              {this.state.accessories.map((accessory, key) => {\r\n                return (\r\n                  <Carousel.Item interval={1000}>\r\n                    <img\r\n                      className=\"d-block\"\r\n                      src={accessory.image}\r\n                      alt=\"First slide\"\r\n                      style={{ width: \"100%\" }}\r\n                    />\r\n                    <Carousel.Caption>\r\n                      <h3 style={{ color: \"black\" }}>{accessory.name}</h3>\r\n                      <p style={{ color: \"black\" }}>£ {accessory.price}</p>\r\n                      <button\r\n                        id=\"all-products-accessory-carousel-button\"\r\n                        onClick={() =>\r\n                          this.addCart(\r\n                            accessory._id,\r\n                            accessory.image,\r\n                            accessory.name,\r\n                            this.state.size,\r\n                            this.state.color, \r\n                            accessory.price,\r\n                           \r\n                          )\r\n                        }\r\n                      >\r\n                        Add to cart\r\n                      </button>\r\n                    </Carousel.Caption>\r\n                  </Carousel.Item>\r\n                );\r\n              })}\r\n            </Carousel>\r\n          </Col>\r\n        </Row>\r\n\r\n        {this.state.alert === true ? (\r\n          <Alert id=\"alert\">Item added to cart</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {this.state.errorAlert === true ? (\r\n          <Alert id=\"alert\">Unable to add item to cart</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {this.state.wishListAlert === true ? (\r\n          <Alert id=\"alert\">Item added to wishlist</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {this.state.wishListErrorAlert === true ? (\r\n          <Alert id=\"alert\">\r\n            Unable to add item to wishlist. Please make sure you are signed in.\r\n          </Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllTShirts;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\AllProducts\\AllAccessories.jsx",["281","282","283"],"import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardDeck,\r\n  Carousel,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport \"../../css/Products.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart, faPlusSquare } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../css/AllProducts.css\";\r\n\r\nclass AllAccessories extends Component {\r\n  state = {\r\n    accessories: [],\r\n    tShirts: [],\r\n    quantity: 1,\r\n    alert: false,\r\n    errorAlert: false,\r\n    wishListAlert: false,\r\n    wishListErrorAlert: false,\r\n    size: \"No size required\",\r\n    color: \"No color required\",\r\n    sizeForTShirt: \"None\",\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    this.getAccessories();\r\n    this.getTshirts();\r\n  };\r\n  getAccessories = async () => {\r\n    const response = await fetch(\"http://localhost:3003/accessories/\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const accessories = await response.json();\r\n    this.setState({\r\n      accessories,\r\n    });\r\n  };\r\n  getTshirts = async () => {\r\n    const response = await fetch(\"http://localhost:3003/product/\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const tShirts = await response.json();\r\n    this.setState({\r\n      tShirts,\r\n    });\r\n  };\r\n  addCart = async (\r\n    id,\r\n    productImage,\r\n    productName,\r\n    productSize,\r\n    productColor,\r\n    productPrice,\r\n    productSizes\r\n  ) => {\r\n    try {\r\n      if (localStorage[\"guestToken\"]) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n          image: productImage,\r\n          name: productName,\r\n          size: productSize,\r\n          color: productColor,\r\n          price: parseInt(productPrice),\r\n          sizeFromClient: productSizes,\r\n          userId: localStorage[\"guestToken\"],\r\n        };\r\n        let response = await fetch(\r\n          `http://localhost:3003/cart/check-out-as-guest`,\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              \"Content-Type\": \"Application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (response.ok) {\r\n          const createPriceResponse = await fetch(\r\n            \"http://localhost:3003/payment/create-product-price\",\r\n            {\r\n              method: \"POST\",\r\n              body: JSON.stringify({\r\n                userId: localStorage[\"guestToken\"],\r\n                productName: productName,\r\n                productPrice: parseInt(productPrice * 100),\r\n                productId: id,\r\n                quantity: this.state.quantity,\r\n              }),\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n          if (createPriceResponse.ok) {\r\n            this.setState({ alert: true });\r\n            setTimeout(() => {\r\n              this.setState({\r\n                alert: false,\r\n              });\r\n            }, 1200);\r\n          }\r\n        } else {\r\n          this.setState({ errorAlert: true });\r\n          setTimeout(() => {\r\n            this.setState({\r\n              errorAlert: false,\r\n            });\r\n          }, 1200);\r\n        }\r\n      } else if (localStorage[\"userId\"]) {\r\n        const productDetails = {\r\n          productId: id,\r\n          quantity: this.state.quantity,\r\n          image: productImage,\r\n          name: productName,\r\n          size: productSize,\r\n          color: productColor,\r\n          price: parseInt(productPrice),\r\n          sizeFromClient: productSizes,\r\n          userId: localStorage[\"userId\"],\r\n        };\r\n        let response = await fetch(\r\n          `http://localhost:3003/cart/check-out-as-guest`,\r\n          {\r\n            method: \"POST\",\r\n            body: JSON.stringify(productDetails),\r\n            headers: {\r\n              \"Content-Type\": \"Application/json\",\r\n            },\r\n          }\r\n        );\r\n        if (response.ok) {\r\n          const createPriceResponse = await fetch(\r\n            \"http://localhost:3003/payment/create-product-price\",\r\n            {\r\n              method: \"POST\",\r\n              body: JSON.stringify({\r\n                userId: localStorage[\"userId\"],\r\n                productName: productName,\r\n                productPrice: parseInt(productPrice * 100),\r\n                productId: id,\r\n                quantity: this.state.quantity,\r\n              }),\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          );\r\n          if (createPriceResponse.ok) {\r\n            this.setState({ alert: true });\r\n            setTimeout(() => {\r\n              this.setState({\r\n                alert: false,\r\n              });\r\n            }, 1200);\r\n          }\r\n        } else {\r\n          this.setState({ errorAlert: true });\r\n          setTimeout(() => {\r\n            this.setState({\r\n              errorAlert: false,\r\n            });\r\n          }, 1200);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  addToWishList = async (\r\n    id,\r\n    productImage,\r\n    productName,\r\n    productSize,\r\n    productColor,\r\n    productPrice\r\n  ) => {\r\n    const productDetails = {\r\n      productId: id,\r\n      image: productImage,\r\n      name: productName,\r\n      size: productSize,\r\n      color: productColor,\r\n      price: parseInt(productPrice),\r\n    };\r\n    if (localStorage[\"userId\"]) {\r\n      let response = await fetch(\r\n        `http://localhost:3003/wishlist/${localStorage[\"userId\"]}`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify(productDetails),\r\n          headers: {\r\n            \"Content-Type\": \"Application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        this.setState({ wishListAlert: true });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            wishListAlert: false,\r\n          });\r\n        }, 1200);\r\n      } else {\r\n        this.setState({ wishListErrorAlert: true });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            wishListErrorAlert: false,\r\n          });\r\n        }, 1200);\r\n      }\r\n    } else if (localStorage[\"guestToken\"]) {\r\n      this.setState({ wishListErrorAlert: true });\r\n      setTimeout(() => {\r\n        this.setState({\r\n          wishListErrorAlert: false,\r\n        });\r\n      }, 1200);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Row className=\"mt-5\">\r\n          <Col md={6}>\r\n            <Carousel style={{ width: \"80%\" }}>\r\n              {this.state.tShirts.map((accessory, key) => {\r\n                return (\r\n                  <Carousel.Item interval={1000}>\r\n                    <img\r\n                      className=\"d-block \"\r\n                      src={accessory.image}\r\n                      alt=\"First slide\"\r\n                      style={{ width: \"100%\" }}\r\n                    />\r\n                    <Carousel.Caption>\r\n                      <h3 style={{ color: \"black\" }}>{accessory.name}</h3>\r\n                      <p style={{ color: \"black\" }}>£ {accessory.price}</p>\r\n                      <button\r\n                        id=\"all-products-accessory-carousel-button\"\r\n                        onClick={() =>\r\n                          this.addCart(\r\n                            accessory._id,\r\n                            accessory.image,\r\n                            accessory.name,\r\n                            this.state.sizeForTShirt,\r\n                            accessory.color,\r\n                            accessory.price,\r\n                            accessory.sizeAsString\r\n                          )\r\n                        }\r\n                      >\r\n                        Add to cart\r\n                      </button>\r\n                    </Carousel.Caption>\r\n                  </Carousel.Item>\r\n                );\r\n              })}\r\n            </Carousel>\r\n          </Col>\r\n          <Col md={6}>\r\n            <Row className=\"row-cols-1 row-cols-sm-2 row-cols-lg-4 row-cols-xl-1 mb-4 text-center\">\r\n              <CardDeck>\r\n                {this.state.accessories.map((prod) => {\r\n                  return (\r\n                    <div className=\"product-image-wrapper col-sm-4\">\r\n                      <div className=\"single-products\">\r\n                        <div className=\"productinfo text-center\">\r\n                          <img src={prod.image} alt=\"\" />\r\n                          <h2>£ {prod.price}</h2>\r\n                          <p>{prod.name}</p>\r\n                          <a href=\"#\" className=\"btn btn-default add-to-cart\">\r\n                            <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                          </a>\r\n                        </div>\r\n                        <div className=\"product-overlay\">\r\n                          <div className=\"overlay-content\">\r\n                            <h2>£ {prod.price}</h2>\r\n                            <p>{prod.name}</p>\r\n                            <button\r\n                              onClick={() =>\r\n                                this.addCart(      \r\n\r\n                                     prod._id,\r\n                            prod.image,\r\n                            prod.name,\r\n                            this.state.size,\r\n                            this.state.color, \r\n                            prod.price,\r\n                                )\r\n                              }\r\n                              className=\"btn btn-default add-to-cart\"\r\n                            >\r\n                              <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"choose\">\r\n                        <ul className=\"nav nav-pills nav-justified\">\r\n                          <li\r\n                            onClick={() =>\r\n                              this.addToWishList(\r\n                                prod._id,\r\n                                prod.image,\r\n                                prod.name,\r\n                                prod.size,\r\n                                prod.color,\r\n                                prod.price\r\n                              )\r\n                            }\r\n                            style={{ cursor: \"pointer\" }}\r\n                            id=\"add-to-wishlist\"\r\n                          >\r\n                            <FontAwesomeIcon icon={faHeart} className=\"fa-1x\" />\r\n                            Add to wishlist\r\n                          </li>\r\n                          <li className=\"\">\r\n                            <Link to={`/accessorydetails/${prod._id}`}>\r\n                              <FontAwesomeIcon\r\n                                icon={faPlusSquare}\r\n                                className=\"fa-1x\"\r\n                              />\r\n                              More details\r\n                            </Link>\r\n                          </li>\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </CardDeck>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n        {this.state.alert === true ? (\r\n          <Alert id=\"alert\">Item added to cart</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {this.state.errorAlert === true ? (\r\n          <Alert id=\"alert\">Unable to add item to cart</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {this.state.wishListAlert === true ? (\r\n          <Alert id=\"alert\">Item added to wishlist</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {this.state.wishListErrorAlert === true ? (\r\n          <Alert id=\"alert\">\r\n            Unable to add item to wishlist. Please make sure you are signed in.\r\n          </Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllAccessories;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\Footer.jsx",["284","285","286","287","288","289","290","291"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\AboutUs.jsx",["292"],"import React, { Component } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport logoTrademark from '../../assets/logo_trademark.png'\r\n\r\nclass AboutUs extends Component {\r\n  state = {}\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div style={{ marginTop: '3rem', marginBottom: '5rem' }}>\r\n          <h5 className=\"text-center\">About John Paul Stephen</h5>\r\n          <p className=\"mt-4\">\r\n            The brand name, John Paul Stephen, was inspired by the three sons'\r\n            Italian names (Giovanni, Paolo, and Stefano) of founders of the\r\n            brand. Each name symbolizes a unique quality which we have imbibed\r\n            in our core values.\r\n          </p>\r\n          <p>\r\n            {' '}\r\n            A concatenation of these names \"John Paul Stephen\" birthed a brand\r\n            driven by a passion for our heritage. John Paul Stephen exudes a\r\n            culture of unbridled commitment to excellence.\r\n          </p>\r\n          <p>\r\n            Welcome to John Paul Stephen, A British Fashion Brand with an\r\n            African Heritage.\r\n          </p>\r\n          <div className=\"text-right mt-5\">\r\n            <img\r\n              src={logoTrademark}\r\n              style={{\r\n                width: '50%',\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AboutUs\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\login\\ForgottenPassword.jsx",["293"],"import React, { Component } from \"react\";\r\nimport { Container, Form, Alert } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../css/Login.css\";\r\n\r\nclass ForgottenPassword extends Component {\r\n  state = {\r\n    email: \"\",\r\n    emailSentAlert: false,\r\n    emailSentErrorAlert: false,\r\n    noEmail: false,\r\n  };\r\n  updateResetPassword = (e) => {\r\n    this.setState({\r\n      email: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  postEmail = async (e) => {\r\n    e.preventDefault();\r\n    if (this.state.email === \"\") {\r\n      this.setState({\r\n        noEmail: true,\r\n      });\r\n    } else {\r\n      const response = await fetch(\r\n        `http://localhost:3003/users/send-reset-password-to-email/${this.state.email} `,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const messageFromApi = await response.json();\r\n      if (messageFromApi.message === \"Email sent successfully\") {\r\n        this.setState({ emailSentAlert: true });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            emailSentAlert: false,\r\n            email: \"\",\r\n          });\r\n        }, 1200);\r\n      } else if (messageFromApi.message === \"User does not exist\") {\r\n        this.setState({ emailSentErrorAlert: true });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            emailSentErrorAlert: false,\r\n            email: \"\",\r\n          });\r\n        }, 1200);\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {this.state.emailSentAlert === true ? (\r\n          <Alert id=\"alert\">An email has been sent to you.</Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        {this.state.emailSentErrorAlert === true ? (\r\n          <Alert id=\"alert\">\r\n            User not found, please make sure you entered the correct email\r\n          </Alert>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        <div className=\"mt-5\">\r\n          <h3 className=\"d-flex justify-content-center\">\r\n            We Understand, These Things Happen...\r\n          </h3>\r\n          <h5 className=\"d-flex justify-content-center\">\r\n            Recover Your Account.\r\n          </h5>\r\n          <h5 className=\"d-flex justify-content-center\">\r\n            Enter Your Email Below To Reset Your Password, An Email With Details\r\n            Will Be Sent To You Shortly.{\" \"}\r\n          </h5>\r\n          <Form>\r\n            <Form.Group style={{ marginTop: \"3rem\" }}>\r\n              <Form.Control\r\n                htmlFor=\"email\"\r\n                className=\"mb-3\"\r\n                type=\"email\"\r\n                id=\"email\"\r\n                placeholder=\"Email\"\r\n                size=\"md\"\r\n                value={this.state.email}\r\n                onChange={(e) => this.updateResetPassword(e)}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n          <div className=\"d-flex justify-content-center mb-1\">\r\n            <button\r\n              id=\"forgotPasswordbtn\"\r\n              type=\"submit\"\r\n              className=\" mt-3\"\r\n              onClick={(e) => this.postEmail(e)}\r\n            >\r\n              Recover Password\r\n            </button>\r\n          </div>\r\n          <div className=\"d-flex justify-content-center mb-5 mt-4\">\r\n            <Link to={\"/login\"} id=\"loginFromRecoverPassword\">\r\n              <a>Login Here</a>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForgottenPassword;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\login\\UpdatePassword.jsx",["294","295"],"import React, { Component } from \"react\";\r\nimport { Container, Form, Alert } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UpdatePassword extends Component {\r\n  state = {\r\n    password: \"\",\r\n    passwordUpdatedAlert: false,\r\n    passwordUpdatedError: false,\r\n    noPassword: false,\r\n    tokenUsedError: false,\r\n  };\r\n  updateResetPassword = (e) => {\r\n    this.setState({\r\n      password: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  updatePassword = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.password === \"\") {\r\n      this.setState({\r\n        noPassword: true,\r\n      });\r\n    } else {\r\n      const token = this.props.match.params.token;\r\n      const email = this.props.match.params.email;\r\n      const response = await fetch(\r\n        `http://localhost:3003/users/reset-password/${token}/${email} `,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            password: this.state.password,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      const messageFromApi = await response.json();\r\n      if (messageFromApi.message === \"Password updated\") {\r\n        const deleteToken = await fetch(\r\n          `http://localhost:3003/users/delete-reset-token/${email}`,\r\n          {\r\n            method: \"DELETE\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n          }\r\n        );\r\n        this.setState({ passwordUpdatedAlert: true });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            passwordUpdatedAlert: false,\r\n            password: \"\",\r\n          });\r\n        }, 1200);\r\n        window.location.href = `http://localhost:3000/`;\r\n      } else if (messageFromApi.message === \"An error occured\") {\r\n        this.setState({ passwordUpdatedError: true });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            passwordUpdatedError: false,\r\n            email: \"\",\r\n          });\r\n        }, 1200);\r\n      } else if (messageFromApi.message === \"Invalid token\") {\r\n        this.setState({ tokenUsedError: true });\r\n        setTimeout(() => {\r\n          this.setState({\r\n            tokenUsedError: false,\r\n            email: \"\",\r\n          });\r\n        }, 1200);\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <div className=\"mt-5\">\r\n          {this.state.passwordUpdatedAlert === true ? (\r\n            <Alert id=\"alert\">Password updated.</Alert>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {this.state.passwordUpdatedError === true ? (\r\n            <Alert id=\"alert\">An error occured</Alert>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          {this.state.tokenUsedError === true ? (\r\n            <Alert id=\"alert\">Token has been used.</Alert>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n          <h3 className=\"d-flex justify-content-center\">\r\n            Update your password\r\n          </h3>\r\n\r\n          <Form>\r\n            <Form.Group style={{ marginTop: \"3rem\" }}>\r\n              <Form.Control\r\n                htmlFor=\"password\"\r\n                className=\"mb-3\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                placeholder=\"Enter new password\"\r\n                size=\"md\"\r\n                value={this.state.password}\r\n                onChange={(e) => this.updateResetPassword(e)}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n          <div className=\"d-flex justify-content-center mb-5\">\r\n            <button\r\n              id=\"updatePasswordBtn\"\r\n              type=\"submit\"\r\n              className=\" mt-3\"\r\n              onClick={(e) => this.updatePassword(e)}\r\n            >\r\n              Update Password\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdatePassword;\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Helpers\\functions.js",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\Paypalpayment.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Carou.jsx",["296","297"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Home\\Prod.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\AllProducts\\Shopnow.jsx",["298","299","300","301","302","303","304"],"import React, { Component } from 'react'\r\nimport '../../css/AllProducts.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHeart, faPlusSquare } from '@fortawesome/free-solid-svg-icons'\r\nimport { Link } from 'react-router-dom'\r\nimport { CardDeck } from 'react-bootstrap'\r\nclass Shopnow extends Component {\r\n  state = {\r\n    JPS: {},\r\n    JPSImages: [],\r\n    duduDara: {},\r\n    duduDaraImages: [],\r\n    makorira: {},\r\n    makoriraImages: [],\r\n  }\r\n\r\n  getProducts = async () => {\r\n    const response = await fetch('http://localhost:3003/product/', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    })\r\n    const products = await response.json()\r\n    const JPS = products.filter(\r\n      (prodName) => prodName.name === 'John Paul Stephen',\r\n    )\r\n\r\n    JPS.map((j) => {\r\n      return this.setState({ JPSImages: j.images, JPS: j })\r\n    })\r\n    console.log(this.state.JPS)\r\n    const duduDara = products.filter(\r\n      (prodName) => prodName.name === 'Dúdú Dára/Black is Good',\r\n    )\r\n    duduDara.map((j) => {\r\n      return this.setState({ duduDaraImages: j.images, duduDara: j })\r\n    })\r\n    const makorira = products.filter(\r\n      (prodName) => prodName.name === 'Má Korira/Don’t Hate',\r\n    )\r\n    makorira.map((j) => {\r\n      return this.setState({ makoriraImages: j.images, makorira: j })\r\n    })\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    this.getProducts()\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\" id=\"shop-now\">\r\n        <div>\r\n          <div id=\"featured-text\">\r\n            <h2>John Paul Stephen</h2>\r\n          </div>\r\n          <CardDeck>\r\n            {this.state.JPSImages.map((jps, index) => {\r\n              return (\r\n                <div className=\"product-image-wrapper col-sm-4\">\r\n                  <div className=\"single-products\">\r\n                    <div className=\"productinfo text-center\">\r\n                      <img src={jps.imageUrl} alt=\"\" />\r\n                      <h2>£ {this.state.JPS.price}</h2>\r\n                      <p>{this.state.JPS.name}</p>\r\n                      <a href=\"#\" className=\"btn btn-default add-to-cart\">\r\n                        <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                      </a>\r\n                    </div>\r\n                    <div className=\"product-overlay\">\r\n                      <div className=\"overlay-content\">\r\n                        <h2>£ {this.state.JPS.price}</h2>\r\n                        <p>{this.state.JPS.name}</p>\r\n                        <button\r\n                          onClick={() =>\r\n                            this.props.addToCartAsProps(\r\n                              this.state.JPS._id,\r\n                              jps.images[0].imageUrl,\r\n                              this.state.name,\r\n                              this.state.color,\r\n                              this.state.price,\r\n                              this.state.sizes,\r\n                              this.state.total,\r\n                              this.state.sizeAsString,\r\n                            )\r\n                          }\r\n                          className=\"btn btn-default add-to-cart\"\r\n                        >\r\n                          <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </CardDeck>\r\n        </div>\r\n        <div>\r\n          <div id=\"featured-text\">\r\n            <h2>Dúdú Dára/Black is Good</h2>\r\n          </div>\r\n          <CardDeck>\r\n            {this.state.duduDaraImages.map((jps, index) => {\r\n              return (\r\n                <div className=\"product-image-wrapper col-sm-4\">\r\n                  <div className=\"single-products\">\r\n                    <div className=\"productinfo text-center\">\r\n                      <img src={jps.imageUrl} alt=\"\" />\r\n                      <h2>£ {this.state.duduDara.price}</h2>\r\n                      <p>{this.state.duduDara.name}</p>\r\n                      <a href=\"#\" className=\"btn btn-default add-to-cart\">\r\n                        <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                      </a>\r\n                    </div>\r\n                    <div className=\"product-overlay\">\r\n                      <div className=\"overlay-content\">\r\n                        <h2>£ {this.state.duduDara.price}</h2>\r\n                        <p>{this.state.duduDara.name}</p>\r\n                        <button\r\n                          onClick={() =>\r\n                            this.props.addToCartAsProps(\r\n                              this.state.duduDara._id,\r\n                              this.state.duduDara.images[0].imageUrl,\r\n                              this.state.name,\r\n                              this.state.color,\r\n                              this.state.price,\r\n                              this.state.sizes,\r\n                              this.state.total,\r\n                              this.state.sizeAsString,\r\n                            )\r\n                          }\r\n                          className=\"btn btn-default add-to-cart\"\r\n                        >\r\n                          <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </CardDeck>\r\n        </div>\r\n        <div>\r\n          <div id=\"featured-text\">\r\n            <h2>Má Korira/Don’t Hate</h2>\r\n          </div>\r\n          <CardDeck>\r\n            {this.state.makoriraImages.map((jps, index) => {\r\n              return (\r\n                <div className=\"product-image-wrapper col-sm-4\">\r\n                  <div className=\"single-products\">\r\n                    <div className=\"productinfo text-center\">\r\n                      <img src={jps.imageUrl} alt=\"\" />\r\n                      <h2>£ {this.state.makorira.price}</h2>\r\n                      <p>{this.state.makorira.name}</p>\r\n                      <a href=\"#\" className=\"btn btn-default add-to-cart\">\r\n                        <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                      </a>\r\n                    </div>\r\n                    <div className=\"product-overlay\">\r\n                      <div className=\"overlay-content\">\r\n                        <h2>£ {this.state.makorira.price}</h2>\r\n                        <p>{this.state.makorira.name}</p>\r\n                        <button\r\n                          onClick={() =>\r\n                            this.props.addToCartAsProps(\r\n                              this.state.makorira._id,\r\n                              this.makorira.images[0].imageUrl,\r\n                              this.state.name,\r\n                              this.state.color,\r\n                              this.state.price,\r\n                              this.state.sizes,\r\n                              this.state.total,\r\n                              this.state.sizeAsString,\r\n                            )\r\n                          }\r\n                          className=\"btn btn-default add-to-cart\"\r\n                        >\r\n                          <i className=\"fa fa-shopping-cart\"></i>Add to cart\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </CardDeck>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Shopnow\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\cart\\OrderConfirmed.jsx",["305"],"import React, { Component } from 'react'\r\n\r\nclass OrderConfirmed extends Component {\r\n  state = { success: false, error: false }\r\n\r\n  updateStock = async () => {\r\n    const quantityInDatabaseInInteger = parseInt(this.props.currentQuantity)\r\n    const currentQuantityInInteger = parseInt(this.props.quantity)\r\n    const quantity = quantityInDatabaseInInteger - currentQuantityInInteger\r\n\r\n    const response = await fetch(\r\n      'http://localhost:3003/product/update-stock-quantity',\r\n      {\r\n        method: 'PUT',\r\n        body: JSON.stringify({\r\n          productId: this.props.productId,\r\n          sizeId: this.props.sizeId,\r\n          quantity: quantity,\r\n          stockId: this.props.stockId,\r\n          size: this.props.size,\r\n        }),\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      },\r\n    )\r\n    const details = await response.json()\r\n  }\r\n  componentDidMount = async () => {\r\n    this.updateStock()\r\n    // const response = await fetch(\r\n    //   'http://localhost:3003/payment/send-royal-mail-order',\r\n    //   {\r\n    //     method: 'POST',\r\n    //     body: JSON.stringify({\r\n    //       fullName: this.props.fullName,\r\n    //       addressLine1: this.props.addressLine1,\r\n    //       city: this.props.city,\r\n    //       postCode: this.props.postCode,\r\n    //       email: this.props.email,\r\n    //       subTotal: parseInt(this.props.subTotal),\r\n    //       total: parseInt(this.props.total),\r\n    //       billingAddressFullName: this.props.fullName,\r\n    //       billingAddressaddressLine1: this.props.addressLine1,\r\n    //       billingAddresscity: this.props.city,\r\n    //       billingAddresspostCode: this.props.postCode,\r\n    //       billingAddressemail: this.props.email,\r\n    //     }),\r\n    //     headers: {\r\n    //       'Content-type': 'application/json',\r\n    //     },\r\n    //   },\r\n    // )\r\n    // const details = await response.json()\r\n\r\n    // if (details.failedOrders.length === 0) {\r\n    //   this.updateStock()\r\n    //   this.setState({ success: true })\r\n    // } else {\r\n    //   this.setState({ error: true })\r\n    // }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.success === true ? (\r\n          <div>Dear {this.props.fullName}, your order is successful</div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n        <div></div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default OrderConfirmed\r\n","C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Inventory\\StockManager.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Inventory\\UpdateInventory.jsx",[],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\CookiePolicy.jsx",["306"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\TermsOfSales.jsx",["307"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\PrivacyPolicy.jsx",["308"],"C:\\Users\\quadr\\OneDrive\\Documents\\GitHub\\jps-client\\src\\Components\\Footer\\TermsOfUse.jsx",["309"],{"ruleId":"310","replacedBy":"311"},{"ruleId":"312","replacedBy":"313"},{"ruleId":"314","severity":1,"message":"315","line":1,"column":17,"nodeType":"316","messageId":"317","endLine":1,"endColumn":26},{"ruleId":"314","severity":1,"message":"318","line":11,"column":8,"nodeType":"316","messageId":"317","endLine":11,"endColumn":22},{"ruleId":"314","severity":1,"message":"319","line":25,"column":10,"nodeType":"316","messageId":"317","endLine":25,"endColumn":30},{"ruleId":"314","severity":1,"message":"320","line":8,"column":11,"nodeType":"316","messageId":"317","endLine":8,"endColumn":14},{"ruleId":"321","severity":1,"message":"322","line":34,"column":15,"nodeType":"323","endLine":37,"endColumn":17},{"ruleId":"324","severity":1,"message":"325","line":35,"column":35,"nodeType":"326","messageId":"327","endLine":35,"endColumn":37},{"ruleId":"324","severity":1,"message":"325","line":64,"column":35,"nodeType":"326","messageId":"327","endLine":64,"endColumn":37},{"ruleId":"314","severity":1,"message":"328","line":109,"column":13,"nodeType":"316","messageId":"317","endLine":109,"endColumn":32},{"ruleId":"314","severity":1,"message":"328","line":157,"column":15,"nodeType":"316","messageId":"317","endLine":157,"endColumn":34},{"ruleId":"321","severity":1,"message":"322","line":208,"column":29,"nodeType":"323","endLine":208,"endColumn":81},{"ruleId":"329","severity":1,"message":"330","line":74,"column":25,"nodeType":"323","endLine":79,"endColumn":26},{"ruleId":"314","severity":1,"message":"331","line":5,"column":37,"nodeType":"316","messageId":"317","endLine":5,"endColumn":41},{"ruleId":"314","severity":1,"message":"332","line":11,"column":7,"nodeType":"316","messageId":"317","endLine":11,"endColumn":24},{"ruleId":"324","severity":1,"message":"325","line":60,"column":35,"nodeType":"326","messageId":"327","endLine":60,"endColumn":37},{"ruleId":"324","severity":1,"message":"325","line":86,"column":35,"nodeType":"326","messageId":"327","endLine":86,"endColumn":37},{"ruleId":"321","severity":1,"message":"322","line":346,"column":33,"nodeType":"323","endLine":349,"endColumn":35},{"ruleId":"314","severity":1,"message":"331","line":2,"column":10,"nodeType":"316","messageId":"317","endLine":2,"endColumn":14},{"ruleId":"314","severity":1,"message":"333","line":2,"column":27,"nodeType":"316","messageId":"317","endLine":2,"endColumn":30},{"ruleId":"314","severity":1,"message":"334","line":2,"column":32,"nodeType":"316","messageId":"317","endLine":2,"endColumn":35},{"ruleId":"314","severity":1,"message":"335","line":2,"column":26,"nodeType":"316","messageId":"317","endLine":2,"endColumn":31},{"ruleId":"314","severity":1,"message":"336","line":6,"column":8,"nodeType":"316","messageId":"317","endLine":6,"endColumn":22},{"ruleId":"314","severity":1,"message":"332","line":7,"column":7,"nodeType":"316","messageId":"317","endLine":7,"endColumn":24},{"ruleId":"314","severity":1,"message":"337","line":44,"column":11,"nodeType":"316","messageId":"317","endLine":44,"endColumn":19},{"ruleId":"314","severity":1,"message":"338","line":3,"column":10,"nodeType":"316","messageId":"317","endLine":3,"endColumn":31},{"ruleId":"329","severity":1,"message":"330","line":124,"column":29,"nodeType":"323","endLine":129,"endColumn":30},{"ruleId":"329","severity":1,"message":"330","line":78,"column":33,"nodeType":"323","endLine":82,"endColumn":34},{"ruleId":"314","severity":1,"message":"339","line":8,"column":3,"nodeType":"316","messageId":"317","endLine":8,"endColumn":15},{"ruleId":"340","severity":1,"message":"341","line":32,"column":21,"nodeType":"323","endLine":35,"endColumn":22},{"ruleId":"340","severity":1,"message":"341","line":40,"column":21,"nodeType":"323","endLine":43,"endColumn":22},{"ruleId":"314","severity":1,"message":"342","line":2,"column":8,"nodeType":"316","messageId":"317","endLine":2,"endColumn":13},{"ruleId":"314","severity":1,"message":"343","line":4,"column":8,"nodeType":"316","messageId":"317","endLine":4,"endColumn":30},{"ruleId":"314","severity":1,"message":"344","line":9,"column":3,"nodeType":"316","messageId":"317","endLine":9,"endColumn":11},{"ruleId":"314","severity":1,"message":"345","line":10,"column":3,"nodeType":"316","messageId":"317","endLine":10,"endColumn":15},{"ruleId":"321","severity":1,"message":"322","line":209,"column":15,"nodeType":"323","endLine":209,"endColumn":48},{"ruleId":"314","severity":1,"message":"346","line":4,"column":8,"nodeType":"316","messageId":"317","endLine":4,"endColumn":19},{"ruleId":"314","severity":1,"message":"333","line":5,"column":17,"nodeType":"316","messageId":"317","endLine":5,"endColumn":20},{"ruleId":"314","severity":1,"message":"334","line":5,"column":22,"nodeType":"316","messageId":"317","endLine":5,"endColumn":25},{"ruleId":"314","severity":1,"message":"331","line":5,"column":27,"nodeType":"316","messageId":"317","endLine":5,"endColumn":31},{"ruleId":"314","severity":1,"message":"347","line":5,"column":8,"nodeType":"316","messageId":"317","endLine":5,"endColumn":13},{"ruleId":"314","severity":1,"message":"348","line":6,"column":8,"nodeType":"316","messageId":"317","endLine":6,"endColumn":13},{"ruleId":"314","severity":1,"message":"333","line":9,"column":3,"nodeType":"316","messageId":"317","endLine":9,"endColumn":6},{"ruleId":"314","severity":1,"message":"334","line":10,"column":3,"nodeType":"316","messageId":"317","endLine":10,"endColumn":6},{"ruleId":"314","severity":1,"message":"349","line":13,"column":3,"nodeType":"316","messageId":"317","endLine":13,"endColumn":7},{"ruleId":"314","severity":1,"message":"350","line":14,"column":3,"nodeType":"316","messageId":"317","endLine":14,"endColumn":12},{"ruleId":"314","severity":1,"message":"351","line":15,"column":3,"nodeType":"316","messageId":"317","endLine":15,"endColumn":9},{"ruleId":"352","severity":1,"message":"353","line":92,"column":23,"nodeType":"323","endLine":92,"endColumn":75},{"ruleId":"314","severity":1,"message":"333","line":4,"column":10,"nodeType":"316","messageId":"317","endLine":4,"endColumn":13},{"ruleId":"314","severity":1,"message":"334","line":4,"column":15,"nodeType":"316","messageId":"317","endLine":4,"endColumn":18},{"ruleId":"314","severity":1,"message":"349","line":4,"column":20,"nodeType":"316","messageId":"317","endLine":4,"endColumn":24},{"ruleId":"314","severity":1,"message":"354","line":4,"column":26,"nodeType":"316","messageId":"317","endLine":4,"endColumn":35},{"ruleId":"314","severity":1,"message":"355","line":4,"column":37,"nodeType":"316","messageId":"317","endLine":4,"endColumn":45},{"ruleId":"314","severity":1,"message":"356","line":5,"column":8,"nodeType":"316","messageId":"317","endLine":5,"endColumn":11},{"ruleId":"314","severity":1,"message":"357","line":6,"column":8,"nodeType":"316","messageId":"317","endLine":6,"endColumn":11},{"ruleId":"314","severity":1,"message":"358","line":2,"column":16,"nodeType":"316","messageId":"317","endLine":2,"endColumn":25},{"ruleId":"314","severity":1,"message":"333","line":7,"column":3,"nodeType":"316","messageId":"317","endLine":7,"endColumn":6},{"ruleId":"314","severity":1,"message":"334","line":8,"column":3,"nodeType":"316","messageId":"317","endLine":8,"endColumn":6},{"ruleId":"314","severity":1,"message":"349","line":11,"column":3,"nodeType":"316","messageId":"317","endLine":11,"endColumn":7},{"ruleId":"314","severity":1,"message":"350","line":12,"column":3,"nodeType":"316","messageId":"317","endLine":12,"endColumn":12},{"ruleId":"314","severity":1,"message":"351","line":13,"column":3,"nodeType":"316","messageId":"317","endLine":13,"endColumn":9},{"ruleId":"352","severity":1,"message":"353","line":173,"column":21,"nodeType":"323","endLine":173,"endColumn":73},{"ruleId":"314","severity":1,"message":"344","line":6,"column":3,"nodeType":"316","messageId":"317","endLine":6,"endColumn":11},{"ruleId":"314","severity":1,"message":"345","line":7,"column":3,"nodeType":"316","messageId":"317","endLine":7,"endColumn":15},{"ruleId":"314","severity":1,"message":"331","line":8,"column":3,"nodeType":"316","messageId":"317","endLine":8,"endColumn":7},{"ruleId":"321","severity":1,"message":"322","line":116,"column":15,"nodeType":"323","endLine":116,"endColumn":53},{"ruleId":"314","severity":1,"message":"359","line":6,"column":10,"nodeType":"316","messageId":"317","endLine":6,"endColumn":26},{"ruleId":"321","severity":1,"message":"322","line":254,"column":27,"nodeType":"323","endLine":254,"endColumn":70},{"ruleId":"321","severity":1,"message":"322","line":292,"column":27,"nodeType":"323","endLine":292,"endColumn":70},{"ruleId":"310","replacedBy":"360"},{"ruleId":"312","replacedBy":"361"},{"ruleId":"314","severity":1,"message":"358","line":3,"column":3,"nodeType":"316","messageId":"317","endLine":3,"endColumn":12},{"ruleId":"314","severity":1,"message":"349","line":6,"column":3,"nodeType":"316","messageId":"317","endLine":6,"endColumn":7},{"ruleId":"352","severity":1,"message":"353","line":252,"column":25,"nodeType":"323","endLine":252,"endColumn":77},{"ruleId":"314","severity":1,"message":"358","line":3,"column":3,"nodeType":"316","messageId":"317","endLine":3,"endColumn":12},{"ruleId":"314","severity":1,"message":"349","line":6,"column":3,"nodeType":"316","messageId":"317","endLine":6,"endColumn":7},{"ruleId":"352","severity":1,"message":"353","line":287,"column":27,"nodeType":"323","endLine":287,"endColumn":79},{"ruleId":"314","severity":1,"message":"362","line":5,"column":8,"nodeType":"316","messageId":"317","endLine":5,"endColumn":16},{"ruleId":"314","severity":1,"message":"363","line":6,"column":8,"nodeType":"316","messageId":"317","endLine":6,"endColumn":12},{"ruleId":"314","severity":1,"message":"364","line":7,"column":8,"nodeType":"316","messageId":"317","endLine":7,"endColumn":20},{"ruleId":"314","severity":1,"message":"365","line":8,"column":8,"nodeType":"316","messageId":"317","endLine":8,"endColumn":12},{"ruleId":"314","severity":1,"message":"366","line":9,"column":8,"nodeType":"316","messageId":"317","endLine":9,"endColumn":14},{"ruleId":"314","severity":1,"message":"367","line":10,"column":10,"nodeType":"316","messageId":"317","endLine":10,"endColumn":25},{"ruleId":"314","severity":1,"message":"368","line":11,"column":10,"nodeType":"316","messageId":"317","endLine":11,"endColumn":18},{"ruleId":"321","severity":1,"message":"322","line":83,"column":17,"nodeType":"323","endLine":83,"endColumn":69},{"ruleId":"321","severity":1,"message":"322","line":29,"column":13,"nodeType":"323","endLine":34,"endColumn":15},{"ruleId":"352","severity":1,"message":"369","line":107,"column":15,"nodeType":"323","endLine":107,"endColumn":18},{"ruleId":"314","severity":1,"message":"370","line":3,"column":10,"nodeType":"316","messageId":"317","endLine":3,"endColumn":14},{"ruleId":"314","severity":1,"message":"371","line":43,"column":15,"nodeType":"316","messageId":"317","endLine":43,"endColumn":26},{"ruleId":"314","severity":1,"message":"372","line":5,"column":8,"nodeType":"316","messageId":"317","endLine":5,"endColumn":11},{"ruleId":"314","severity":1,"message":"373","line":6,"column":8,"nodeType":"316","messageId":"317","endLine":6,"endColumn":11},{"ruleId":"314","severity":1,"message":"367","line":3,"column":10,"nodeType":"316","messageId":"317","endLine":3,"endColumn":25},{"ruleId":"314","severity":1,"message":"374","line":4,"column":10,"nodeType":"316","messageId":"317","endLine":4,"endColumn":17},{"ruleId":"314","severity":1,"message":"375","line":4,"column":19,"nodeType":"316","messageId":"317","endLine":4,"endColumn":31},{"ruleId":"314","severity":1,"message":"370","line":5,"column":10,"nodeType":"316","messageId":"317","endLine":5,"endColumn":14},{"ruleId":"352","severity":1,"message":"353","line":66,"column":23,"nodeType":"323","endLine":66,"endColumn":75},{"ruleId":"352","severity":1,"message":"353","line":112,"column":23,"nodeType":"323","endLine":112,"endColumn":75},{"ruleId":"352","severity":1,"message":"353","line":158,"column":23,"nodeType":"323","endLine":158,"endColumn":75},{"ruleId":"314","severity":1,"message":"376","line":27,"column":11,"nodeType":"316","messageId":"317","endLine":27,"endColumn":18},{"ruleId":"377","severity":1,"message":"378","line":8,"column":9,"nodeType":"323","endLine":13,"endColumn":10},{"ruleId":"377","severity":1,"message":"378","line":8,"column":9,"nodeType":"323","endLine":13,"endColumn":10},{"ruleId":"377","severity":1,"message":"378","line":8,"column":9,"nodeType":"323","endLine":13,"endColumn":10},{"ruleId":"377","severity":1,"message":"378","line":8,"column":9,"nodeType":"323","endLine":13,"endColumn":10},"no-native-reassign",["379"],"no-negated-in-lhs",["380"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'NavBarCheckout' is defined but never used.","'LastLocationProvider' is defined but never used.","'res' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'createPriceResponse' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Form' is defined but never used.","'stripeTestPromise' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Alert' is defined but never used.","'orderConfirmed' is defined but never used.","'response' is assigned a value but never used.","'findAllInRenderedTree' is defined but never used.","'faCrosshairs' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'hero2' is defined but never used.","'ProductDetailsCarousel' is defined but never used.","'Carousel' is defined but never used.","'CarouselItem' is defined but never used.","'Accessories' is defined but never used.","'solo1' is defined but never used.","'solo2' is defined but never used.","'Card' is defined but never used.","'Accordion' is defined but never used.","'Button' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'CardGroup' is defined but never used.","'CardDeck' is defined but never used.","'one' is defined but never used.","'two' is defined but never used.","'Container' is defined but never used.","'withLastLocation' is defined but never used.",["379"],["380"],"'applePay' is defined but never used.","'visa' is defined but never used.","'googleWallet' is defined but never used.","'amex' is defined but never used.","'payPal' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faCCVisa' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Link' is defined but never used.","'deleteToken' is assigned a value but never used.","'im2' is defined but never used.","'im3' is defined but never used.","'faHeart' is defined but never used.","'faPlusSquare' is defined but never used.","'details' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation"]